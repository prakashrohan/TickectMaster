{"id":"c39b58a2488e3aed35dc4d3d5a97957e","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/PatientMedicaition.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ncontract PatientMedication {\r\n\r\n    struct MedicationRecord {\r\n        uint256 recordId;\r\n        string medicationName;\r\n        string dosage;\r\n        string instructions;\r\n        uint256 issueDate;\r\n        string prescribingDoctor;\r\n        string receipt;\r\n    }\r\n\r\n    mapping(address => MedicationRecord[]) private patientRecords;\r\n\r\n    event MedicationRecordAdded(\r\n        address indexed patientAddress,\r\n        uint256 recordId,\r\n        string medicationName\r\n    );\r\n\r\n    function addMedicationRecord(\r\n        string memory _medicationName,\r\n        string memory _dosage,\r\n        string memory _instructions,\r\n        string memory _prescribingDoctor,\r\n        string memory _receipt\r\n    ) public {\r\n        uint256 newRecordId = patientRecords[msg.sender].length + 1;\r\n\r\n        MedicationRecord memory newRecord = MedicationRecord({\r\n            recordId: newRecordId,\r\n            medicationName: _medicationName,\r\n            dosage: _dosage,\r\n            instructions: _instructions,\r\n            issueDate: block.timestamp,\r\n            prescribingDoctor: _prescribingDoctor,\r\n            receipt: _receipt\r\n        });\r\n\r\n        patientRecords[msg.sender].push(newRecord);\r\n\r\n        emit MedicationRecordAdded(msg.sender, newRecordId, _medicationName);\r\n    }\r\n\r\n    function getMyMedicationRecords()\r\n        public\r\n        view\r\n        returns (MedicationRecord[] memory)\r\n    {\r\n        return patientRecords[msg.sender];\r\n    }\r\n\r\n\r\n    function getPatientMedicationRecords(address _patient)\r\n        public\r\n        view\r\n        returns (MedicationRecord[] memory)\r\n    {\r\n        return patientRecords[_patient];\r\n    }\r\n}\r\n"},"contracts/TicketMaster.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.2 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TicketMaster is ERC721, Ownable {\r\n    uint256 public totalOccasions;\r\n    uint256 public totalSupply;\r\n\r\n    struct Occasion {\r\n        uint256 id;\r\n        string name;\r\n        uint256 cost;\r\n        uint256 tickets;\r\n        uint256 maxTickets;\r\n        string date;\r\n        string time;\r\n        string location;\r\n        string bannerImage;\r\n        string vrVideo; // Initially null (empty string)\r\n        address creator;\r\n    }\r\n\r\n    mapping(uint256 => Occasion) public occasions;\r\n    mapping(uint256 => mapping(uint256 => address)) public seatTaken;\r\n    mapping(uint256 => mapping(address => bool)) public hasBought;\r\n    mapping(uint256 => uint256[]) public seatsTaken;\r\n    mapping(uint256 => mapping(uint256 => bool)) public ticketExhausted;\r\n    mapping(uint256 => mapping(uint256 => bool)) public resaleAllowed;\r\n    mapping(address => uint256[]) public creatorEvents;\r\n\r\n    mapping(uint256 => mapping(uint256 => uint256)) public seatToTokenId;\r\n\r\n    constructor() ERC721(\"Token\", \"Ticket\") Ownable(msg.sender) {}\r\n\r\n    function list(\r\n        string memory _name,\r\n        uint256 _cost,\r\n        uint256 _maxTickets,\r\n        string memory _date,\r\n        string memory _time,\r\n        string memory _location,\r\n        string memory _bannerImage\r\n    ) public onlyOwner {\r\n        totalOccasions++;\r\n        occasions[totalOccasions] = Occasion(\r\n            totalOccasions, _name, _cost, _maxTickets, _maxTickets, _date, _time, _location, _bannerImage, \"\", msg.sender\r\n        );\r\n        creatorEvents[msg.sender].push(totalOccasions);\r\n    }\r\n\r\n    function mint(uint256 _id, uint256 _seat) public payable {\r\n        require(_id != 0 && _id <= totalOccasions, \"Invalid occasion ID\");\r\n        require(msg.value >= occasions[_id].cost, \"Insufficient ETH sent\");\r\n        require(seatTaken[_id][_seat] == address(0), \"Seat already taken\");\r\n        require(_seat <= occasions[_id].maxTickets, \"Invalid seat number\");\r\n\r\n        totalSupply++;\r\n        occasions[_id].tickets--;\r\n        hasBought[_id][msg.sender] = true;\r\n        seatTaken[_id][_seat] = msg.sender;\r\n        seatsTaken[_id].push(_seat);\r\n        resaleAllowed[_id][_seat] = false;\r\n        ticketExhausted[_id][_seat] = false;\r\n\r\n        _safeMint(msg.sender, totalSupply);\r\n        seatToTokenId[_id][_seat] = totalSupply; // ✅ Store correct token ID for seat\r\n\r\n    }\r\n\r\n    function getOccasion(uint256 _id) public view returns (Occasion memory) {\r\n        return occasions[_id];\r\n    }\r\n\r\n    function getSeatsTaken(uint256 _id) public view returns (uint256[] memory) {\r\n        return seatsTaken[_id];\r\n    }\r\n\r\n    function getUserTickets(address _user) public view returns (uint256[] memory, uint256[] memory) {\r\n        uint256[] memory eventIds = new uint256[](totalSupply);\r\n        uint256[] memory seatIds = new uint256[](totalSupply);\r\n        uint256 count = 0;\r\n\r\n        for (uint256 i = 1; i <= totalOccasions; i++) {\r\n            for (uint256 j = 0; j < seatsTaken[i].length; j++) {\r\n                uint256 seat = seatsTaken[i][j];\r\n                if (seatTaken[i][seat] == _user) {\r\n                    eventIds[count] = i;\r\n                    seatIds[count] = seat;\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n\r\n        uint256[] memory finalEventIds = new uint256[](count);\r\n        uint256[] memory finalSeatIds = new uint256[](count);\r\n        for (uint256 k = 0; k < count; k++) {\r\n            finalEventIds[k] = eventIds[k];\r\n            finalSeatIds[k] = seatIds[k];\r\n        }\r\n\r\n        return (finalEventIds, finalSeatIds);\r\n    }\r\n\r\n    function getEventsCreatedBy(address _creator) public view returns (uint256[] memory) {\r\n        return creatorEvents[_creator];\r\n    }\r\n\r\n    function scanTicket(uint256 _eventId, uint256 _seatId) public onlyOwner {\r\n        require(_eventId != 0 && _eventId <= totalOccasions, \"Invalid event ID\");\r\n        require(seatTaken[_eventId][_seatId] != address(0), \"Seat not occupied\");\r\n\r\n        require(!ticketExhausted[_eventId][_seatId], \"Ticket already used\");\r\n\r\n        ticketExhausted[_eventId][_seatId] = true;\r\n        resaleAllowed[_eventId][_seatId] = false;\r\n    }\r\n\r\n    function enableResale(uint256 _eventId, uint256 _seatId) public {\r\n        require(seatTaken[_eventId][_seatId] == msg.sender, \"Not the owner of the ticket\");\r\n        require(!ticketExhausted[_eventId][_seatId], \"Ticket already used\");\r\n        resaleAllowed[_eventId][_seatId] = true;\r\n    }\r\n\r\nfunction buyResaleTicket(uint256 _eventId, uint256 _ticketId) public payable {\r\n    require(resaleAllowed[_eventId][_ticketId], \"Resale not allowed\");\r\n    require(!ticketExhausted[_eventId][_ticketId], \"Ticket already used\");\r\n\r\n    uint256 tokenId = seatToTokenId[_eventId][_ticketId];\r\n    address currentOwner = ownerOf(tokenId);\r\n    require(currentOwner != address(0), \"Invalid ticket\");\r\n    require(currentOwner != msg.sender, \"Cannot buy your own ticket\");\r\n\r\n    uint256 ticketPrice = occasions[_eventId].cost;\r\n    require(msg.value == ticketPrice, \"Incorrect payment amount\");\r\n\r\n    // Transfer payment to the current owner\r\n    (bool sent, ) = payable(currentOwner).call{value: ticketPrice}(\"\");\r\n    require(sent, \"Payment transfer failed\");\r\n\r\n    // Transfer ticket ownership to the buyer\r\n    _transfer(currentOwner, msg.sender, tokenId);\r\n    seatTaken[_eventId][_ticketId] = msg.sender;\r\n\r\n    resaleAllowed[_eventId][_ticketId] = false; // Disable resale\r\n\r\n}\r\n\r\n    function setVRVideo(uint256 _id, string memory _vrVideo) public {\r\n        require(_id != 0 && _id <= totalOccasions, \"Invalid occasion ID\");\r\n        require(occasions[_id].creator == msg.sender, \"Only event creator can set VR video\");\r\n        occasions[_id].vrVideo = _vrVideo;\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1511],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1512,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1511,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1511],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1511],"ERC165":[2787],"ERC721":[1241],"ERC721Utils":[1481],"IERC165":[2799],"IERC721":[1358],"IERC721Errors":[237],"IERC721Metadata":[1404],"Strings":[2763]},"id":1242,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1359,"src":"133:38:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1405,"src":"172:65:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"180:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1482,"src":"238:52:2","symbolAliases":[{"foreign":{"id":291,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"246:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1512,"src":"291:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"299:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":2764,"src":"340:48:2","symbolAliases":[{"foreign":{"id":295,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"348:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":2788,"src":"389:69:2","symbolAliases":[{"foreign":{"id":297,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"397:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":298,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"406:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":285,"src":"459:66:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"467:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["803:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1511,"src":"803:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"803:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["812:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2787,"src":"812:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"812:6:2"},{"baseName":{"id":307,"name":"IERC721","nameLocations":["820:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"820:7:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"820:7:2"},{"baseName":{"id":309,"name":"IERC721Metadata","nameLocations":["829:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1404,"src":"829:15:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"829:15:2"},{"baseName":{"id":311,"name":"IERC721Errors","nameLocations":["846:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"846:13:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"846:13:2"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"527:247:2","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1241,"linearizedBaseContracts":[1241,237,1404,1358,2787,2799,1511],"name":"ERC721","nameLocation":"793:6:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":315,"libraryName":{"id":313,"name":"Strings","nameLocations":["872:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2763,"src":"872:7:2"},"nodeType":"UsingForDirective","src":"866:26:2","typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"931:5:2","nodeType":"VariableDeclaration","scope":1241,"src":"916:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:2","nodeType":"VariableDeclaration","scope":1241,"src":"963:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":323,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:2","nodeType":"VariableDeclaration","scope":1241,"src":"992:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":322,"keyName":"tokenId","keyNameLocation":"1008:7:2","keyType":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":327,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:2","nodeType":"VariableDeclaration","scope":1241,"src":"1050:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":326,"keyName":"owner","keyNameLocation":"1066:5:2","keyType":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":331,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:2","nodeType":"VariableDeclaration","scope":1241,"src":"1108:59:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":330,"keyName":"tokenId","keyNameLocation":"1124:7:2","keyType":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":337,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:2","nodeType":"VariableDeclaration","scope":1241,"src":"1174:86:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":336,"keyName":"owner","keyNameLocation":"1190:5:2","keyType":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"keyName":"operator","keyNameLocation":"1215:8:2","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":334,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":353,"nodeType":"Block","src":"1436:57:2","statements":[{"expression":{"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":345,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1446:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":346,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1454:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":348,"nodeType":"ExpressionStatement","src":"1446:13:2"},{"expression":{"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":349,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1469:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":350,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1479:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":352,"nodeType":"ExpressionStatement","src":"1469:17:2"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"1267:108:2","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":354,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"name_","nameLocation":"1406:5:2","nodeType":"VariableDeclaration","scope":354,"src":"1392:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:2","nodeType":"VariableDeclaration","scope":354,"src":"1413:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:2"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"1436:0:2"},"scope":1241,"src":"1380:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2786,2798],"body":{"id":384,"nodeType":"Block","src":"1668:192:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":365,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1697:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":367,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"1717:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1358_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1358_$","typeString":"type(contract IERC721)"}],"id":366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1358","typeString":"type(contract IERC721)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1753:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":373,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"1773:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1404_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1404_$","typeString":"type(contract IERC721Metadata)"}],"id":372,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1404","typeString":"type(contract IERC721Metadata)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":380,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1841:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":378,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1241_$","typeString":"type(contract super ERC721)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2786,"src":"1817:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":364,"id":383,"nodeType":"Return","src":"1678:175:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"1499:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:2","nodeType":"FunctionDefinition","overrides":{"id":361,"nodeType":"OverrideSpecifier","overrides":[{"id":359,"name":"ERC165","nameLocations":["1636:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2787,"src":"1636:6:2"},{"id":360,"name":"IERC165","nameLocations":["1644:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2799,"src":"1644:7:2"}],"src":"1627:25:2"},"parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:2","nodeType":"VariableDeclaration","scope":385,"src":"1587:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":356,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:2"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"1662:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":362,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:2"},"scope":1241,"src":"1560:300:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1283],"body":{"id":412,"nodeType":"Block","src":"1991:136:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2005:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:2","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":407,"nodeType":"IfStatement","src":"2001:87:2","trueBody":{"id":406,"nodeType":"Block","src":"2026:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:2","typeDescriptions":{}}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":399,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2047:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"RevertStatement","src":"2040:37:2"}]}},{"expression":{"baseExpression":{"id":408,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2104:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":410,"indexExpression":{"id":409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2114:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":392,"id":411,"nodeType":"Return","src":"2097:23:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"1866:48:2","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":413,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:2","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"owner","nameLocation":"1946:5:2","nodeType":"VariableDeclaration","scope":413,"src":"1938:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"1982:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:2"},"scope":1241,"src":"1919:208:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1291],"body":{"id":425,"nodeType":"Block","src":"2256:46:2","statements":[{"expression":{"arguments":[{"id":422,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2287:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2273:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":420,"id":424,"nodeType":"Return","src":"2266:29:2"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"2133:46:2","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:2","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:2","nodeType":"VariableDeclaration","scope":426,"src":"2201:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"2247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:2"},"scope":1241,"src":"2184:118:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1389],"body":{"id":434,"nodeType":"Block","src":"2424:29:2","statements":[{"expression":{"id":432,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2441:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":431,"id":433,"nodeType":"Return","src":"2434:12:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2308:51:2","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:2","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"2377:2:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"2409:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":429,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:2"},"scope":1241,"src":"2364:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1395],"body":{"id":443,"nodeType":"Block","src":"2579:31:2","statements":[{"expression":{"id":441,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2596:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":440,"id":442,"nodeType":"Return","src":"2589:14:2"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"2459:53:2","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:2","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"2532:2:2"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"2564:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:2"},"scope":1241,"src":"2517:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1403],"body":{"id":479,"nodeType":"Block","src":"2755:176:2","statements":[{"expression":{"arguments":[{"id":453,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2779:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":452,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2765:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":455,"nodeType":"ExpressionStatement","src":"2765:22:2"},{"assignments":[457],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:2","nodeType":"VariableDeclaration","scope":479,"src":"2798:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":456,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":460,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":458,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2822:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:2"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":463,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2855:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:2","typeDescriptions":{}}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:2","memberName":"length","nodeType":"MemberAccess","src":"2849:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:2","trueExpression":{"arguments":[{"id":471,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2891:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":472,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2900:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1641,"src":"2900:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":468,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:2","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:2","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:2","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":451,"id":478,"nodeType":"Return","src":"2842:82:2"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2616:55:2","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":480,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:2","nodeType":"VariableDeclaration","scope":480,"src":"2694:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:2"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"2740:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":449,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:2"},"scope":1241,"src":"2676:255:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":488,"nodeType":"Block","src":"3239:26:2","statements":[{"expression":{"hexValue":"","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":485,"id":487,"nodeType":"Return","src":"3249:9:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2937:231:2","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":489,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:2","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"3190:2:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":489,"src":"3224:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":483,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:2"},"scope":1241,"src":"3173:92:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1331],"body":{"id":504,"nodeType":"Block","src":"3383:52:2","statements":[{"expression":{"arguments":[{"id":498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3402:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3406:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":500,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"3415:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":497,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1108,"src":"3393:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"3393:35:2"}]},"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"3271:46:2","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":505,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:2","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"to","nameLocation":"3347:2:2","nodeType":"VariableDeclaration","scope":505,"src":"3339:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:2","nodeType":"VariableDeclaration","scope":505,"src":"3351:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:2"},"returnParameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"3383:0:2"},"scope":1241,"src":"3322:113:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1347],"body":{"id":521,"nodeType":"Block","src":"3572:78:2","statements":[{"expression":{"arguments":[{"id":514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3596:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3582:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":516,"nodeType":"ExpressionStatement","src":"3582:22:2"},{"expression":{"arguments":[{"id":518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3635:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":517,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"3622:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":512,"id":520,"nodeType":"Return","src":"3615:28:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"3441:50:2","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":522,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:2","nodeType":"VariableDeclaration","scope":522,"src":"3517:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:2"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"3563:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:2"},"scope":1241,"src":"3496:154:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1339],"body":{"id":537,"nodeType":"Block","src":"3792:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":531,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"3821:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3835:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3845:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":530,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3802:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"3802:52:2"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3656:56:2","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":538,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:2","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"operator","nameLocation":"3752:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3744:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"approved","nameLocation":"3767:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3762:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":526,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"3792:0:2"},"scope":1241,"src":"3717:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1357],"body":{"id":554,"nodeType":"Block","src":"4021:59:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":548,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4038:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":550,"indexExpression":{"id":549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"4057:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":552,"indexExpression":{"id":551,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4064:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":547,"id":553,"nodeType":"Return","src":"4031:42:2"}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"3867:55:2","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":555,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:2","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"owner","nameLocation":"3961:5:2","nodeType":"VariableDeclaration","scope":555,"src":"3953:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"operator","nameLocation":"3976:8:2","nodeType":"VariableDeclaration","scope":555,"src":"3968:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:2"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"4015:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":545,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:2"},"scope":1241,"src":"3927:153:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":600,"nodeType":"Block","src":"4222:498:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4236:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":579,"nodeType":"IfStatement","src":"4232:87:2","trueBody":{"id":578,"nodeType":"Block","src":"4254:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:2","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":571,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4275:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"RevertStatement","src":"4268:40:2"}]}},{"assignments":[581],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:2","nodeType":"VariableDeclaration","scope":600,"src":"4537:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":588,"initialValue":{"arguments":[{"id":583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4569:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4573:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":585,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"4582:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":582,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"4561:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":589,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4609:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":590,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4626:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":599,"nodeType":"IfStatement","src":"4605:109:2","trueBody":{"id":598,"nodeType":"Block","src":"4632:82:2","statements":[{"errorCall":{"arguments":[{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4674:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":594,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4680:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":595,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4689:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4653:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":597,"nodeType":"RevertStatement","src":"4646:57:2"}]}}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"4086:51:2","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:2","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"from","nameLocation":"4172:4:2","nodeType":"VariableDeclaration","scope":601,"src":"4164:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"to","nameLocation":"4186:2:2","nodeType":"VariableDeclaration","scope":601,"src":"4178:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:2","nodeType":"VariableDeclaration","scope":601,"src":"4190:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:2"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"4222:0:2"},"scope":1241,"src":"4142:578:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1313],"body":{"id":618,"nodeType":"Block","src":"4862:56:2","statements":[{"expression":{"arguments":[{"id":612,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4889:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"4895:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"4899:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":611,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[619,649],"referencedDeclaration":649,"src":"4872:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"4872:39:2"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"4726:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":619,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"from","nameLocation":"4820:4:2","nodeType":"VariableDeclaration","scope":619,"src":"4812:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"to","nameLocation":"4834:2:2","nodeType":"VariableDeclaration","scope":619,"src":"4826:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:2","nodeType":"VariableDeclaration","scope":619,"src":"4838:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"4862:0:2"},"scope":1241,"src":"4786:132:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1303],"body":{"id":648,"nodeType":"Block","src":"5087:130:2","statements":[{"expression":{"arguments":[{"id":632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5110:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5116:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5120:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":631,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"5097:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"ExpressionStatement","src":"5097:31:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":640,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5172:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5186:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":643,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5192:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":644,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5196:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":645,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5205:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":637,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"5138:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"5138:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"ExpressionStatement","src":"5138:72:2"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"4924:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":649,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:2","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"from","nameLocation":"5018:4:2","nodeType":"VariableDeclaration","scope":649,"src":"5010:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"5032:2:2","nodeType":"VariableDeclaration","scope":649,"src":"5024:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:2","nodeType":"VariableDeclaration","scope":649,"src":"5036:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"data","nameLocation":"5066:4:2","nodeType":"VariableDeclaration","scope":649,"src":"5053:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:2"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"5087:0:2"},"scope":1241,"src":"4984:233:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":661,"nodeType":"Block","src":"5807:40:2","statements":[{"expression":{"baseExpression":{"id":657,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"5824:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":659,"indexExpression":{"id":658,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"5832:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":656,"id":660,"nodeType":"Return","src":"5817:23:2"}]},"documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"5223:504:2","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":662,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:2","nodeType":"FunctionDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:2","nodeType":"VariableDeclaration","scope":662,"src":"5750:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:2"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":662,"src":"5798:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:2"},"scope":1241,"src":"5732:115:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"6042:48:2","statements":[{"expression":{"baseExpression":{"id":670,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"6059:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":672,"indexExpression":{"id":671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"6075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":669,"id":673,"nodeType":"Return","src":"6052:31:2"}]},"documentation":{"id":663,"nodeType":"StructuredDocumentation","src":"5853:105:2","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:2","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:2","nodeType":"VariableDeclaration","scope":675,"src":"5985:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:2"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"6033:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:2"},"scope":1241,"src":"5963:127:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"6510:163:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":687,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6539:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:2","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6577:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":694,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6586:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":697,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6614:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":698,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6621:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":696,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"6597:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":702,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6646:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":701,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"6633:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":704,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6658:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":686,"id":709,"nodeType":"Return","src":"6520:146:2"}]},"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"6096:300:2","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:2","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"owner","nameLocation":"6432:5:2","nodeType":"VariableDeclaration","scope":711,"src":"6424:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"spender","nameLocation":"6447:7:2","nodeType":"VariableDeclaration","scope":711,"src":"6439:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:2","nodeType":"VariableDeclaration","scope":711,"src":"6456:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:2"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"6504:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":684,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:2"},"scope":1241,"src":"6401:272:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"7202:271:2","statements":[{"condition":{"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:2","subExpression":{"arguments":[{"id":722,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7231:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"7238:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7247:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":721,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"7217:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":746,"nodeType":"IfStatement","src":"7212:255:2","trueBody":{"id":745,"nodeType":"Block","src":"7257:210:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7275:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:2","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":743,"nodeType":"Block","src":"7373:84:2","statements":[{"errorCall":{"arguments":[{"id":739,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"7425:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":740,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7434:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":738,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7398:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":742,"nodeType":"RevertStatement","src":"7391:51:2"}]},"id":744,"nodeType":"IfStatement","src":"7271:186:2","trueBody":{"id":737,"nodeType":"Block","src":"7296:71:2","statements":[{"errorCall":{"arguments":[{"id":734,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7344:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":733,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7321:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":736,"nodeType":"RevertStatement","src":"7314:38:2"}]}}]}}]},"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"6679:421:2","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:2","nodeType":"FunctionDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"owner","nameLocation":"7139:5:2","nodeType":"VariableDeclaration","scope":748,"src":"7131:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"spender","nameLocation":"7154:7:2","nodeType":"VariableDeclaration","scope":748,"src":"7146:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:2","nodeType":"VariableDeclaration","scope":748,"src":"7163:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:2"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"7202:0:2"},"scope":1241,"src":"7105:368:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":763,"nodeType":"Block","src":"8190:78:2","statements":[{"id":762,"nodeType":"UncheckedBlock","src":"8200:62:2","statements":[{"expression":{"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":756,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8224:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":758,"indexExpression":{"id":757,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"8234:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"8246:5:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"nodeType":"ExpressionStatement","src":"8224:27:2"}]}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"7479:631:2","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":764,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:2","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"account","nameLocation":"8149:7:2","nodeType":"VariableDeclaration","scope":764,"src":"8141:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"value","nameLocation":"8166:5:2","nodeType":"VariableDeclaration","scope":764,"src":"8158:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":752,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:2"},"returnParameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"8190:0:2"},"scope":1241,"src":"8115:153:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"8956:700:2","statements":[{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"from","nameLocation":"8974:4:2","nodeType":"VariableDeclaration","scope":853,"src":"8966:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":781,"initialValue":{"arguments":[{"id":779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"8990:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"8981:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":782,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"9058:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:2","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":795,"nodeType":"IfStatement","src":"9054:86:2","trueBody":{"id":794,"nodeType":"Block","src":"9078:62:2","statements":[{"expression":{"arguments":[{"id":789,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9109:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"9115:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":791,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9121:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":788,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9092:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"9092:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":796,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9184:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:2","typeDescriptions":{}}},"id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":823,"nodeType":"IfStatement","src":"9180:256:2","trueBody":{"id":822,"nodeType":"Block","src":"9204:232:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:2","typeDescriptions":{}}},"id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9321:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:2","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":802,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1174,"src":"9300:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"9300:48:2"},{"id":821,"nodeType":"UncheckedBlock","src":"9363:63:2","statements":[{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":815,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9391:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":817,"indexExpression":{"id":816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9401:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ExpressionStatement","src":"9391:20:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9450:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:2","typeDescriptions":{}}},"id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":838,"nodeType":"IfStatement","src":"9446:107:2","trueBody":{"id":837,"nodeType":"Block","src":"9468:85:2","statements":[{"id":836,"nodeType":"UncheckedBlock","src":"9482:61:2","statements":[{"expression":{"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":830,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9510:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":832,"indexExpression":{"id":831,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9520:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":835,"nodeType":"ExpressionStatement","src":"9510:18:2"}]}]}},{"expression":{"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":839,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"9563:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":841,"indexExpression":{"id":840,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9571:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":842,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9582:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":844,"nodeType":"ExpressionStatement","src":"9563:21:2"},{"eventCall":{"arguments":[{"id":846,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9609:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9615:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9619:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":845,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9600:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"EmitStatement","src":"9595:32:2"},{"expression":{"id":851,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9645:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":775,"id":852,"nodeType":"Return","src":"9638:11:2"}]},"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"8274:582:2","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"to","nameLocation":"8886:2:2","nodeType":"VariableDeclaration","scope":854,"src":"8878:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:2","nodeType":"VariableDeclaration","scope":854,"src":"8890:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"auth","nameLocation":"8915:4:2","nodeType":"VariableDeclaration","scope":854,"src":"8907:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"8947:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:2"},"scope":1241,"src":"8861:795:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":903,"nodeType":"Block","src":"10031:274:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":862,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10045:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:2","typeDescriptions":{}}},"id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":876,"nodeType":"IfStatement","src":"10041:87:2","trueBody":{"id":875,"nodeType":"Block","src":"10063:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:2","typeDescriptions":{}}},"id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":868,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"10084:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"RevertStatement","src":"10077:40:2"}]}},{"assignments":[878],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:2","nodeType":"VariableDeclaration","scope":903,"src":"10137:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":887,"initialValue":{"arguments":[{"id":880,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10169:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"10173:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:2","typeDescriptions":{}}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":879,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10161:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":888,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"10207:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:2","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":902,"nodeType":"IfStatement","src":"10203:96:2","trueBody":{"id":901,"nodeType":"Block","src":"10236:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:2","typeDescriptions":{}}},"id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":894,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"10257:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":900,"nodeType":"RevertStatement","src":"10250:38:2"}]}}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"9662:311:2","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":904,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:2","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"to","nameLocation":"10001:2:2","nodeType":"VariableDeclaration","scope":904,"src":"9993:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:2","nodeType":"VariableDeclaration","scope":904,"src":"10005:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:2"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"10031:0:2"},"scope":1241,"src":"9978:327:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":918,"nodeType":"Block","src":"10713:43:2","statements":[{"expression":{"arguments":[{"id":913,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"10733:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":914,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"10737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":912,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[919,949],"referencedDeclaration":949,"src":"10723:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":917,"nodeType":"ExpressionStatement","src":"10723:26:2"}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"10311:340:2","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":919,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:2","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"to","nameLocation":"10683:2:2","nodeType":"VariableDeclaration","scope":919,"src":"10675:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:2","nodeType":"VariableDeclaration","scope":919,"src":"10687:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:2"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"10713:0:2"},"scope":1241,"src":"10656:100:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":948,"nodeType":"Block","src":"11061:123:2","statements":[{"expression":{"arguments":[{"id":930,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"11077:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":931,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"11081:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":929,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"11071:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"11071:18:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":937,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"11133:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:2","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"11159:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"11163:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":945,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"11172:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":934,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11099:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"11099:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"ExpressionStatement","src":"11099:78:2"}]},"documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"10762:210:2","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":949,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:2","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"to","nameLocation":"11004:2:2","nodeType":"VariableDeclaration","scope":949,"src":"10996:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:2","nodeType":"VariableDeclaration","scope":949,"src":"11008:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"data","nameLocation":"11038:4:2","nodeType":"VariableDeclaration","scope":949,"src":"11025:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":925,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:2"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"11061:0:2"},"scope":1241,"src":"10977:207:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"11551:186:2","statements":[{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:2","nodeType":"VariableDeclaration","scope":981,"src":"11561:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":968,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:2","typeDescriptions":{}}},"id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":962,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"11605:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:2","typeDescriptions":{}}},"id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":957,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"11585:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11639:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:2","typeDescriptions":{}}},"id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":980,"nodeType":"IfStatement","src":"11635:96:2","trueBody":{"id":979,"nodeType":"Block","src":"11668:63:2","statements":[{"errorCall":{"arguments":[{"id":976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"11712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":975,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11689:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"RevertStatement","src":"11682:38:2"}]}}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"11190:315:2","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:2","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:2","nodeType":"VariableDeclaration","scope":982,"src":"11525:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:2"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"11551:0:2"},"scope":1241,"src":"11510:227:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1041,"nodeType":"Block","src":"12132:389:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":992,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"12146:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:2","typeDescriptions":{}}},"id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1006,"nodeType":"IfStatement","src":"12142:87:2","trueBody":{"id":1005,"nodeType":"Block","src":"12164:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:2","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":998,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"12185:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"RevertStatement","src":"12178:40:2"}]}},{"assignments":[1008],"declarations":[{"constant":false,"id":1008,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:2","nodeType":"VariableDeclaration","scope":1041,"src":"12238:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1017,"initialValue":{"arguments":[{"id":1010,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"12270:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1011,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12274:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:2","typeDescriptions":{}}},"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1009,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"12262:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1018,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12308:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:2","typeDescriptions":{}}},"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1029,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12410:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1030,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12427:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1039,"nodeType":"IfStatement","src":"12406:109:2","trueBody":{"id":1038,"nodeType":"Block","src":"12433:82:2","statements":[{"errorCall":{"arguments":[{"id":1033,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12475:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1034,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12481:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1035,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12490:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1032,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12454:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"RevertStatement","src":"12447:57:2"}]}},"id":1040,"nodeType":"IfStatement","src":"12304:211:2","trueBody":{"id":1028,"nodeType":"Block","src":"12337:63:2","statements":[{"errorCall":{"arguments":[{"id":1025,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12381:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1024,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12358:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1027,"nodeType":"RevertStatement","src":"12351:38:2"}]}}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"11743:313:2","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:2","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"from","nameLocation":"12088:4:2","nodeType":"VariableDeclaration","scope":1042,"src":"12080:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"to","nameLocation":"12102:2:2","nodeType":"VariableDeclaration","scope":1042,"src":"12094:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:2","nodeType":"VariableDeclaration","scope":1042,"src":"12106:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:2"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[],"src":"12132:0:2"},"scope":1241,"src":"12061:460:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1059,"nodeType":"Block","src":"13530:53:2","statements":[{"expression":{"arguments":[{"id":1053,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"13554:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"13560:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"13564:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1052,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1060,1090],"referencedDeclaration":1090,"src":"13540:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"ExpressionStatement","src":"13540:36:2"}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"12527:923:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:2","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"from","nameLocation":"13486:4:2","nodeType":"VariableDeclaration","scope":1060,"src":"13478:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"to","nameLocation":"13500:2:2","nodeType":"VariableDeclaration","scope":1060,"src":"13492:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:2","nodeType":"VariableDeclaration","scope":1060,"src":"13504:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:2"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"13530:0:2"},"scope":1241,"src":"13455:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1089,"nodeType":"Block","src":"13922:127:2","statements":[{"expression":{"arguments":[{"id":1073,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"13942:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"13948:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"13952:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1072,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"13932:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"13932:28:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1081,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"14004:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1083,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"14018:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"14024:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"14028:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1086,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"14037:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1078,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"13970:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"13970:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"ExpressionStatement","src":"13970:72:2"}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"13589:226:2","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:2","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"from","nameLocation":"13851:4:2","nodeType":"VariableDeclaration","scope":1090,"src":"13843:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"to","nameLocation":"13865:2:2","nodeType":"VariableDeclaration","scope":1090,"src":"13857:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:2","nodeType":"VariableDeclaration","scope":1090,"src":"13869:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"data","nameLocation":"13899:4:2","nodeType":"VariableDeclaration","scope":1090,"src":"13886:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1068,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:2"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"13922:0:2"},"scope":1241,"src":"13820:229:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1107,"nodeType":"Block","src":"14562:50:2","statements":[{"expression":{"arguments":[{"id":1101,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"14581:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1102,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"14585:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1103,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"14594:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1100,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1174,"src":"14572:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"ExpressionStatement","src":"14572:33:2"}]},"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"14055:432:2","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:2","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"to","nameLocation":"14518:2:2","nodeType":"VariableDeclaration","scope":1108,"src":"14510:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:2","nodeType":"VariableDeclaration","scope":1108,"src":"14522:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"auth","nameLocation":"14547:4:2","nodeType":"VariableDeclaration","scope":1108,"src":"14539:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:2"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"14562:0:2"},"scope":1241,"src":"14492:120:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1173,"nodeType":"Block","src":"14888:568:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"14954:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"14967:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:2","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1166,"nodeType":"IfStatement","src":"14950:460:2","trueBody":{"id":1165,"nodeType":"Block","src":"14987:423:2","statements":[{"assignments":[1129],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"owner","nameLocation":"15009:5:2","nodeType":"VariableDeclaration","scope":1165,"src":"15001:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1133,"initialValue":{"arguments":[{"id":1131,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15031:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1130,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"15017:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1134,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15167:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:2","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1140,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15189:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1141,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15198:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:2","subExpression":{"arguments":[{"id":1145,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15224:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1146,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15231:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1144,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"15207:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1155,"nodeType":"IfStatement","src":"15163:142:2","trueBody":{"id":1154,"nodeType":"Block","src":"15238:67:2","statements":[{"errorCall":{"arguments":[{"id":1151,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15285:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1150,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"15263:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1153,"nodeType":"RevertStatement","src":"15256:34:2"}]}},{"condition":{"id":1156,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"15323:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1164,"nodeType":"IfStatement","src":"15319:81:2","trueBody":{"id":1163,"nodeType":"Block","src":"15334:66:2","statements":[{"eventCall":{"arguments":[{"id":1158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15366:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"15373:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1160,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15377:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1157,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"15357:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"EmitStatement","src":"15352:33:2"}]}}]}},{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1167,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"15420:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1169,"indexExpression":{"id":1168,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15436:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1170,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"15447:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1172,"nodeType":"ExpressionStatement","src":"15420:29:2"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"14618:171:2","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:2","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"to","nameLocation":"14820:2:2","nodeType":"VariableDeclaration","scope":1174,"src":"14812:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:2","nodeType":"VariableDeclaration","scope":1174,"src":"14824:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"auth","nameLocation":"14849:4:2","nodeType":"VariableDeclaration","scope":1174,"src":"14841:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:2","nodeType":"VariableDeclaration","scope":1174,"src":"14855:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1116,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:2"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[],"src":"14888:0:2"},"scope":1241,"src":"14794:662:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1210,"nodeType":"Block","src":"15758:219:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15772:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:2","typeDescriptions":{}}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1195,"nodeType":"IfStatement","src":"15768:91:2","trueBody":{"id":1194,"nodeType":"Block","src":"15796:63:2","statements":[{"errorCall":{"arguments":[{"id":1191,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15839:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1190,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15817:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"RevertStatement","src":"15810:38:2"}]}},{"expression":{"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1196,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"15868:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1199,"indexExpression":{"id":1197,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"15887:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1200,"indexExpression":{"id":1198,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15894:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1201,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"15906:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1203,"nodeType":"ExpressionStatement","src":"15868:46:2"},{"eventCall":{"arguments":[{"id":1205,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"15944:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1206,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15951:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1207,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"15961:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1204,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"15929:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"EmitStatement","src":"15924:46:2"}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"15462:198:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:2","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"owner","nameLocation":"15701:5:2","nodeType":"VariableDeclaration","scope":1211,"src":"15693:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"operator","nameLocation":"15716:8:2","nodeType":"VariableDeclaration","scope":1211,"src":"15708:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"approved","nameLocation":"15731:8:2","nodeType":"VariableDeclaration","scope":1211,"src":"15726:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1180,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:2"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"15758:0:2"},"scope":1241,"src":"15665:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1239,"nodeType":"Block","src":"16284:169:2","statements":[{"assignments":[1220],"declarations":[{"constant":false,"id":1220,"mutability":"mutable","name":"owner","nameLocation":"16302:5:2","nodeType":"VariableDeclaration","scope":1239,"src":"16294:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1224,"initialValue":{"arguments":[{"id":1222,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"16319:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1221,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"16310:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1225,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"16341:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:2","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1236,"nodeType":"IfStatement","src":"16337:88:2","trueBody":{"id":1235,"nodeType":"Block","src":"16362:63:2","statements":[{"errorCall":{"arguments":[{"id":1232,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"16406:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1231,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16383:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"RevertStatement","src":"16376:38:2"}]}},{"expression":{"id":1237,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"16441:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1218,"id":1238,"nodeType":"Return","src":"16434:12:2"}]},"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"15983:224:2","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1240,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:2","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:2","nodeType":"VariableDeclaration","scope":1240,"src":"16235:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:2"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1240,"src":"16275:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:2"},"scope":1241,"src":"16212:241:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1242,"src":"775:15680:2","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[1257,1266,1275]}],"src":"107:16349:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2799],"IERC721":[1358]},"id":1359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1243,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1359,"sourceUnit":2800,"src":"134:62:3","symbolAliases":[{"foreign":{"id":1244,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"142:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1247,"name":"IERC165","nameLocations":["288:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2799,"src":"288:7:3"},"id":1248,"nodeType":"InheritanceSpecifier","src":"288:7:3"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"198:68:3","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1358,"linearizedBaseContracts":[1358,2799],"name":"IERC721","nameLocation":"277:7:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"302:88:3","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1257,"name":"Transfer","nameLocation":"401:8:3","nodeType":"EventDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:3","nodeType":"VariableDeclaration","scope":1257,"src":"410:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:3","nodeType":"VariableDeclaration","scope":1257,"src":"432:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:3","nodeType":"VariableDeclaration","scope":1257,"src":"452:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:3"},"src":"395:82:3"},{"anonymous":false,"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"483:94:3","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1266,"name":"Approval","nameLocation":"588:8:3","nodeType":"EventDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:3","nodeType":"VariableDeclaration","scope":1266,"src":"597:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1262,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:3","nodeType":"VariableDeclaration","scope":1266,"src":"620:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1264,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:3","nodeType":"VariableDeclaration","scope":1266,"src":"646:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:3"},"src":"582:89:3"},{"anonymous":false,"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"677:117:3","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1275,"name":"ApprovalForAll","nameLocation":"805:14:3","nodeType":"EventDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:3","nodeType":"VariableDeclaration","scope":1275,"src":"820:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"843:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1273,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"869:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1272,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:3"},"src":"799:85:3"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"890:76:3","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:3","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"owner","nameLocation":"998:5:3","nodeType":"VariableDeclaration","scope":1283,"src":"990:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:3"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"balance","nameLocation":"1036:7:3","nodeType":"VariableDeclaration","scope":1283,"src":"1028:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:3"},"scope":1358,"src":"971:74:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"1051:131:3","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1291,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:3","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:3","nodeType":"VariableDeclaration","scope":1291,"src":"1204:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:3"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"owner","nameLocation":"1252:5:3","nodeType":"VariableDeclaration","scope":1291,"src":"1244:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:3"},"scope":1358,"src":"1187:72:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"1265:565:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1303,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:3","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"from","nameLocation":"1869:4:3","nodeType":"VariableDeclaration","scope":1303,"src":"1861:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"to","nameLocation":"1883:2:3","nodeType":"VariableDeclaration","scope":1303,"src":"1875:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:3","nodeType":"VariableDeclaration","scope":1303,"src":"1887:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"data","nameLocation":"1919:4:3","nodeType":"VariableDeclaration","scope":1303,"src":"1904:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1299,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:3"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"1933:0:3"},"scope":1358,"src":"1835:99:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"1940:706:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1313,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:3","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":1313,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"to","nameLocation":"2699:2:3","nodeType":"VariableDeclaration","scope":1313,"src":"2691:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:3","nodeType":"VariableDeclaration","scope":1313,"src":"2703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:3"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[],"src":"2728:0:3"},"scope":1358,"src":"2651:78:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"2735:733:3","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:3","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"from","nameLocation":"3503:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"3495:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"to","nameLocation":"3517:2:3","nodeType":"VariableDeclaration","scope":1323,"src":"3509:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:3","nodeType":"VariableDeclaration","scope":1323,"src":"3521:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:3"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"3546:0:3"},"scope":1358,"src":"3473:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"3553:452:3","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1331,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:3","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"to","nameLocation":"4035:2:3","nodeType":"VariableDeclaration","scope":1331,"src":"4027:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:3","nodeType":"VariableDeclaration","scope":1331,"src":"4039:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:3"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[],"src":"4064:0:3"},"scope":1358,"src":"4010:55:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"4071:315:3","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1339,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:3","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"operator","nameLocation":"4426:8:3","nodeType":"VariableDeclaration","scope":1339,"src":"4418:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"approved","nameLocation":"4441:8:3","nodeType":"VariableDeclaration","scope":1339,"src":"4436:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1335,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:3"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[],"src":"4459:0:3"},"scope":1358,"src":"4391:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"4466:139:3","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1347,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:3","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:3","nodeType":"VariableDeclaration","scope":1347,"src":"4631:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:3"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"operator","nameLocation":"4679:8:3","nodeType":"VariableDeclaration","scope":1347,"src":"4671:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:3"},"scope":1358,"src":"4610:79:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"4695:138:3","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1357,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:3","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"owner","nameLocation":"4872:5:3","nodeType":"VariableDeclaration","scope":1357,"src":"4864:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"operator","nameLocation":"4887:8:3","nodeType":"VariableDeclaration","scope":1357,"src":"4879:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:3"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"4920:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1354,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:3"},"scope":1358,"src":"4838:88:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1359,"src":"267:4661:3","usedErrors":[],"usedEvents":[1257,1266,1275]}],"src":"108:4821:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1376]},"id":1377,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1360,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"142:154:4","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1376,"linearizedBaseContracts":[1376],"name":"IERC721Receiver","nameLocation":"307:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"329:500:4","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1375,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:4","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"operator","nameLocation":"877:8:4","nodeType":"VariableDeclaration","scope":1375,"src":"869:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"from","nameLocation":"903:4:4","nodeType":"VariableDeclaration","scope":1375,"src":"895:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:4","nodeType":"VariableDeclaration","scope":1375,"src":"917:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"data","nameLocation":"957:4:4","nodeType":"VariableDeclaration","scope":1375,"src":"942:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1369,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:4"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1375,"src":"986:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1372,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:4"},"scope":1376,"src":"834:160:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1377,"src":"297:699:4","usedErrors":[],"usedEvents":[]}],"src":"116:881:4"},"id":4},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1358],"IERC721Metadata":[1404]},"id":1405,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1378,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1405,"sourceUnit":1359,"src":"153:39:5","symbolAliases":[{"foreign":{"id":1379,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"161:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1382,"name":"IERC721","nameLocations":["357:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"357:7:5"},"id":1383,"nodeType":"InheritanceSpecifier","src":"357:7:5"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"194:133:5","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1404,"linearizedBaseContracts":[1404,1358,2799],"name":"IERC721Metadata","nameLocation":"338:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"371:58:5","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1389,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:5","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[],"src":"447:2:5"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"473:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1386,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:5"},"scope":1404,"src":"434:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"494:60:5","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1395,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:5","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[],"src":"574:2:5"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"600:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1392,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:5"},"scope":1404,"src":"559:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"621:90:5","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1403,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:5","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:5","nodeType":"VariableDeclaration","scope":1403,"src":"734:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:5"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1403,"src":"774:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1400,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:5"},"scope":1404,"src":"716:73:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1405,"src":"328:463:5","usedErrors":[],"usedEvents":[1257,1266,1275]}],"src":"127:665:5"},"id":5},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1481],"IERC721Errors":[237],"IERC721Receiver":[1376]},"id":1482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1406,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":1377,"src":"144:55:6","symbolAliases":[{"foreign":{"id":1407,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"152:15:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":285,"src":"200:69:6","symbolAliases":[{"foreign":{"id":1409,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"208:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1411,"nodeType":"StructuredDocumentation","src":"271:159:6","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1481,"linearizedBaseContracts":[1481],"name":"ERC721Utils","nameLocation":"439:11:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1479,"nodeType":"Block","src":"1151:758:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1425,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1165:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:6","memberName":"code","nodeType":"MemberAccess","src":"1165:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:6","memberName":"length","nodeType":"MemberAccess","src":"1165:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1478,"nodeType":"IfStatement","src":"1161:742:6","trueBody":{"id":1477,"nodeType":"Block","src":"1185:718:6","statements":[{"clauses":[{"block":{"id":1455,"nodeType":"Block","src":"1295:214:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"1317:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1443,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1327:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1376_$","typeString":"type(contract IERC721Receiver)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:6","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"1327:32:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1454,"nodeType":"IfStatement","src":"1313:182:6","trueBody":{"id":1453,"nodeType":"Block","src":"1370:125:6","statements":[{"errorCall":{"arguments":[{"id":1450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1473:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1447,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1437:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:6","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1437:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1452,"nodeType":"RevertStatement","src":"1430:46:6"}]}}]},"errorName":"","id":1456,"nodeType":"TryCatchClause","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"retval","nameLocation":"1287:6:6","nodeType":"VariableDeclaration","scope":1456,"src":"1280:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1439,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:6"},"src":"1271:238:6"},{"block":{"id":1474,"nodeType":"Block","src":"1538:355:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1460,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1560:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:6","memberName":"length","nodeType":"MemberAccess","src":"1560:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1472,"nodeType":"Block","src":"1728:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1775:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1812:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1816:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1808:3:6"},"nodeType":"YulFunctionCall","src":"1808:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1831:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1825:5:6"},"nodeType":"YulFunctionCall","src":"1825:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1801:6:6"},"nodeType":"YulFunctionCall","src":"1801:38:6"},"nodeType":"YulExpressionStatement","src":"1801:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1458,"isOffset":false,"isSlot":false,"src":"1816:6:6","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"1831:6:6","valueSize":1}],"flags":["memory-safe"],"id":1471,"nodeType":"InlineAssembly","src":"1750:111:6"}]},"id":1473,"nodeType":"IfStatement","src":"1556:323:6","trueBody":{"id":1470,"nodeType":"Block","src":"1580:142:6","statements":[{"errorCall":{"arguments":[{"id":1467,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1700:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1464,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1664:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:6","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1664:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"RevertStatement","src":"1657:46:6"}]}}]},"errorName":"","id":1475,"nodeType":"TryCatchClause","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"reason","nameLocation":"1530:6:6","nodeType":"VariableDeclaration","scope":1475,"src":"1517:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1457,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:6"},"src":"1510:383:6"}],"externalCall":{"arguments":[{"id":1434,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"1240:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1435,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1250:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1436,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1256:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1437,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"1265:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1219:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1430,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1203:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1376_$","typeString":"type(contract IERC721Receiver)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1376","typeString":"contract IERC721Receiver"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:6","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"1203:36:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1476,"nodeType":"TryStatement","src":"1199:694:6"}]}}]},"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"457:523:6","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1480,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:6","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"operator","nameLocation":"1033:8:6","nodeType":"VariableDeclaration","scope":1480,"src":"1025:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"from","nameLocation":"1059:4:6","nodeType":"VariableDeclaration","scope":1480,"src":"1051:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"to","nameLocation":"1081:2:6","nodeType":"VariableDeclaration","scope":1480,"src":"1073:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:6","nodeType":"VariableDeclaration","scope":1480,"src":"1093:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"data","nameLocation":"1131:4:6","nodeType":"VariableDeclaration","scope":1480,"src":"1118:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:6"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"1151:0:6"},"scope":1481,"src":"985:924:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1482,"src":"431:1480:6","usedErrors":[],"usedEvents":[]}],"src":"118:1794:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1511]},"id":1512,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1483,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"127:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1511,"linearizedBaseContracts":[1511],"name":"Context","nameLocation":"642:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1492,"nodeType":"Block","src":"718:34:7","statements":[{"expression":{"expression":{"id":1489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:7","memberName":"sender","nodeType":"MemberAccess","src":"735:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1488,"id":1491,"nodeType":"Return","src":"728:17:7"}]},"id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:7","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[],"src":"675:2:7"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1493,"src":"709:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:7"},"scope":1511,"src":"656:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1501,"nodeType":"Block","src":"825:32:7","statements":[{"expression":{"expression":{"id":1498,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:7","memberName":"data","nodeType":"MemberAccess","src":"842:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1497,"id":1500,"nodeType":"Return","src":"835:15:7"}]},"id":1502,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:7","nodeType":"FunctionDefinition","parameters":{"id":1494,"nodeType":"ParameterList","parameters":[],"src":"775:2:7"},"returnParameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1502,"src":"809:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1495,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:7"},"scope":1511,"src":"758:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1509,"nodeType":"Block","src":"935:25:7","statements":[{"expression":{"hexValue":"30","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1506,"id":1508,"nodeType":"Return","src":"945:8:7"}]},"id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:7","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[],"src":"892:2:7"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"926:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:7"},"scope":1511,"src":"863:97:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1512,"src":"624:338:7","usedErrors":[],"usedEvents":[]}],"src":"101:862:7"},"id":7},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1563]},"id":1564,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1513,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"125:489:8","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1563,"linearizedBaseContracts":[1563],"name":"Panic","nameLocation":"665:5:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"677:36:8","text":"@dev generic / unspecified error"},"id":1518,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:8","nodeType":"VariableDeclaration","scope":1563,"src":"718:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"764:37:8","text":"@dev used by the assert() builtin"},"id":1522,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:8","nodeType":"VariableDeclaration","scope":1563,"src":"806:39:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"851:41:8","text":"@dev arithmetic underflow or overflow"},"id":1526,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:8","nodeType":"VariableDeclaration","scope":1563,"src":"897:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:8","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"950:35:8","text":"@dev division or modulo by zero"},"id":1530,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:8","nodeType":"VariableDeclaration","scope":1563,"src":"990:49:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"1045:30:8","text":"@dev enum conversion error"},"id":1534,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:8","nodeType":"VariableDeclaration","scope":1563,"src":"1080:54:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:8","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"1140:36:8","text":"@dev invalid encoding in storage"},"id":1538,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:8","nodeType":"VariableDeclaration","scope":1563,"src":"1181:55:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:8","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"1242:24:8","text":"@dev empty array pop"},"id":1542,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:8","nodeType":"VariableDeclaration","scope":1563,"src":"1271:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:8","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"1325:35:8","text":"@dev array out of bounds access"},"id":1546,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:8","nodeType":"VariableDeclaration","scope":1563,"src":"1365:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"1423:65:8","text":"@dev resource error (too large allocation or too large array)"},"id":1550,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:8","nodeType":"VariableDeclaration","scope":1563,"src":"1493:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:8","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"1546:42:8","text":"@dev calling invalid internal function"},"id":1554,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:8","nodeType":"VariableDeclaration","scope":1563,"src":"1593:58:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:8","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1561,"nodeType":"Block","src":"1819:151:8","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:8","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:8"},"nodeType":"YulFunctionCall","src":"1868:24:8"},"nodeType":"YulExpressionStatement","src":"1868:24:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:8","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:8"},"nodeType":"YulFunctionCall","src":"1905:18:8"},"nodeType":"YulExpressionStatement","src":"1905:18:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:8","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:8"},"nodeType":"YulFunctionCall","src":"1936:18:8"},"nodeType":"YulExpressionStatement","src":"1936:18:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1557,"isOffset":false,"isSlot":false,"src":"1918:4:8","valueSize":1}],"flags":["memory-safe"],"id":1560,"nodeType":"InlineAssembly","src":"1829:135:8"}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"1658:113:8","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1562,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:8","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"code","nameLocation":"1799:4:8","nodeType":"VariableDeclaration","scope":1562,"src":"1791:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:8"},"returnParameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"1819:0:8"},"scope":1563,"src":"1776:194:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1564,"src":"657:1315:8","usedErrors":[],"usedEvents":[]}],"src":"99:1874:8"},"id":8},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4405],"SafeCast":[6170],"SignedMath":[6314],"Strings":[2763]},"id":2764,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1565,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1567,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2764,"sourceUnit":4406,"src":"127:37:9","symbolAliases":[{"foreign":{"id":1566,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"135:4:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2764,"sourceUnit":6171,"src":"165:45:9","symbolAliases":[{"foreign":{"id":1568,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"173:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2764,"sourceUnit":6315,"src":"211:49:9","symbolAliases":[{"foreign":{"id":1570,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"219:10:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"262:34:9","text":" @dev String operations."},"fullyImplemented":true,"id":2763,"linearizedBaseContracts":[2763],"name":"Strings","nameLocation":"305:7:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1574,"libraryName":{"id":1573,"name":"SafeCast","nameLocations":["325:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":6170,"src":"325:8:9"},"nodeType":"UsingForDirective","src":"319:21:9"},{"constant":true,"id":1577,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:9","nodeType":"VariableDeclaration","scope":2763,"src":"346:56:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1575,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1580,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:9","nodeType":"VariableDeclaration","scope":2763,"src":"408:42:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1578,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"457:81:9","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1587,"name":"StringsInsufficientHexLength","nameLocation":"549:28:9","nodeType":"ErrorDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"value","nameLocation":"586:5:9","nodeType":"VariableDeclaration","scope":1587,"src":"578:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1585,"mutability":"mutable","name":"length","nameLocation":"601:6:9","nodeType":"VariableDeclaration","scope":1587,"src":"593:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:9"},"src":"543:66:9"},{"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"615:108:9","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1590,"name":"StringsInvalidChar","nameLocation":"734:18:9","nodeType":"ErrorDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[],"src":"752:2:9"},"src":"728:27:9"},{"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"761:84:9","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1593,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:9","nodeType":"ErrorDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[],"src":"883:2:9"},"src":"850:36:9"},{"body":{"id":1640,"nodeType":"Block","src":"1058:561:9","statements":[{"id":1639,"nodeType":"UncheckedBlock","src":"1068:545:9","statements":[{"assignments":[1602],"declarations":[{"constant":false,"id":1602,"mutability":"mutable","name":"length","nameLocation":"1100:6:9","nodeType":"VariableDeclaration","scope":1639,"src":"1092:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1609,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1120:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1603,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"1109:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4405_$","typeString":"type(library Math)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:9","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4177,"src":"1109:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:9"},{"assignments":[1611],"declarations":[{"constant":false,"id":1611,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:9","nodeType":"VariableDeclaration","scope":1639,"src":"1144:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1610,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1616,"initialValue":{"arguments":[{"id":1614,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"1178:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1612,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:9"},{"assignments":[1618],"declarations":[{"constant":false,"id":1618,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:9","nodeType":"VariableDeclaration","scope":1639,"src":"1199:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1619,"nodeType":"VariableDeclarationStatement","src":"1199:11:9"},{"AST":{"nodeType":"YulBlock","src":"1249:67:9","statements":[{"nodeType":"YulAssignment","src":"1267:35:9","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1278:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1290:2:9","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1294:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:9"},"nodeType":"YulFunctionCall","src":"1286:15:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:9"},"nodeType":"YulFunctionCall","src":"1274:28:9"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1267:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1611,"isOffset":false,"isSlot":false,"src":"1278:6:9","valueSize":1},{"declaration":1602,"isOffset":false,"isSlot":false,"src":"1294:6:9","valueSize":1},{"declaration":1618,"isOffset":false,"isSlot":false,"src":"1267:3:9","valueSize":1}],"flags":["memory-safe"],"id":1620,"nodeType":"InlineAssembly","src":"1224:92:9"},{"body":{"id":1635,"nodeType":"Block","src":"1342:234:9","statements":[{"expression":{"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:9","subExpression":{"id":1622,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"1360:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1624,"nodeType":"ExpressionStatement","src":"1360:5:9"},{"AST":{"nodeType":"YulBlock","src":"1408:86:9","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:9"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:9","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1448:3:9"},"nodeType":"YulFunctionCall","src":"1448:14:9"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1464:10:9"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1443:4:9"},"nodeType":"YulFunctionCall","src":"1443:32:9"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1430:7:9"},"nodeType":"YulFunctionCall","src":"1430:46:9"},"nodeType":"YulExpressionStatement","src":"1430:46:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1577,"isOffset":false,"isSlot":false,"src":"1464:10:9","valueSize":1},{"declaration":1618,"isOffset":false,"isSlot":false,"src":"1438:3:9","valueSize":1},{"declaration":1596,"isOffset":false,"isSlot":false,"src":"1452:5:9","valueSize":1}],"flags":["memory-safe"],"id":1625,"nodeType":"InlineAssembly","src":"1383:111:9"},{"expression":{"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1511:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1629,"nodeType":"ExpressionStatement","src":"1511:11:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"1544:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1634,"nodeType":"IfStatement","src":"1540:21:9","trueBody":{"id":1633,"nodeType":"Break","src":"1556:5:9"}}]},"condition":{"hexValue":"74727565","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1636,"nodeType":"WhileStatement","src":"1329:247:9"},{"expression":{"id":1637,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"1596:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1600,"id":1638,"nodeType":"Return","src":"1589:13:9"}]}]},"documentation":{"id":1594,"nodeType":"StructuredDocumentation","src":"892:90:9","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1641,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:9","nodeType":"FunctionDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"value","nameLocation":"1013:5:9","nodeType":"VariableDeclaration","scope":1641,"src":"1005:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:9"},"returnParameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1641,"src":"1043:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1598,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:9"},"scope":2763,"src":"987:632:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1666,"nodeType":"Block","src":"1795:92:9","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"1826:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:9","trueExpression":{"hexValue":"2d","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"1872:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1659,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"1857:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6314_$","typeString":"type(library SignedMath)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:9","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6313,"src":"1857:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1658,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"1848:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1649,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:9","typeDescriptions":{}}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:9","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:9","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1648,"id":1665,"nodeType":"Return","src":"1805:75:9"}]},"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"1625:89:9","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1667,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:9","nodeType":"FunctionDefinition","parameters":{"id":1645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"value","nameLocation":"1750:5:9","nodeType":"VariableDeclaration","scope":1667,"src":"1743:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1643,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:9"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1667,"src":"1780:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1646,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:9"},"scope":2763,"src":"1719:168:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1686,"nodeType":"Block","src":"2066:100:9","statements":[{"id":1685,"nodeType":"UncheckedBlock","src":"2076:84:9","statements":[{"expression":{"arguments":[{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2119:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2138:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1677,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"2126:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4405_$","typeString":"type(library Math)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:9","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4348,"src":"2126:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1675,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1687,1770,1790],"referencedDeclaration":1770,"src":"2107:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1674,"id":1684,"nodeType":"Return","src":"2100:49:9"}]}]},"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"1893:94:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:9","nodeType":"FunctionDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"value","nameLocation":"2021:5:9","nodeType":"VariableDeclaration","scope":1687,"src":"2013:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:9"},"returnParameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"2051:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1672,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:9"},"scope":2763,"src":"1992:174:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1769,"nodeType":"Block","src":"2379:435:9","statements":[{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:9","nodeType":"VariableDeclaration","scope":1769,"src":"2389:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1700,"initialValue":{"id":1699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"2410:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:9"},{"assignments":[1702],"declarations":[{"constant":false,"id":1702,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:9","nodeType":"VariableDeclaration","scope":1769,"src":"2425:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1701,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1711,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1706,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"2461:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1703,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:9"},{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1712,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"2482:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1714,"indexExpression":{"hexValue":"30","id":1713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1717,"nodeType":"ExpressionStatement","src":"2482:15:9"},{"expression":{"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1718,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"2507:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1720,"indexExpression":{"hexValue":"31","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1723,"nodeType":"ExpressionStatement","src":"2507:15:9"},{"body":{"id":1752,"nodeType":"Block","src":"2577:95:9","statements":[{"expression":{"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1738,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"2591:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1740,"indexExpression":{"id":1739,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2598:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1741,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2603:10:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1745,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1742,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"2614:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1747,"nodeType":"ExpressionStatement","src":"2591:40:9"},{"expression":{"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1748,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"2645:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1751,"nodeType":"ExpressionStatement","src":"2645:16:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1732,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2565:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1753,"initializationExpression":{"assignments":[1725],"declarations":[{"constant":false,"id":1725,"mutability":"mutable","name":"i","nameLocation":"2545:1:9","nodeType":"VariableDeclaration","scope":1753,"src":"2537:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1731,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1727,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"2553:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:9"},"loopExpression":{"expression":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:9","subExpression":{"id":1735,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2574:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1737,"nodeType":"ExpressionStatement","src":"2572:3:9"},"nodeType":"ForStatement","src":"2532:140:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"2685:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1763,"nodeType":"IfStatement","src":"2681:96:9","trueBody":{"id":1762,"nodeType":"Block","src":"2702:75:9","statements":[{"errorCall":{"arguments":[{"id":1758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"2752:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1759,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"2759:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1757,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"2723:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1761,"nodeType":"RevertStatement","src":"2716:50:9"}]}},{"expression":{"arguments":[{"id":1766,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"2800:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1764,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:9","typeDescriptions":{}}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1696,"id":1768,"nodeType":"Return","src":"2786:21:9"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"2172:112:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1770,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:9","nodeType":"FunctionDefinition","parameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"value","nameLocation":"2318:5:9","nodeType":"VariableDeclaration","scope":1770,"src":"2310:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"length","nameLocation":"2333:6:9","nodeType":"VariableDeclaration","scope":1770,"src":"2325:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:9"},"returnParameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1770,"src":"2364:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1694,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:9"},"scope":2763,"src":"2289:525:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1789,"nodeType":"Block","src":"3046:75:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1783,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"3091:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1781,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:9","typeDescriptions":{}}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:9","typeDescriptions":{}}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1786,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"3099:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1778,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1687,1770,1790],"referencedDeclaration":1770,"src":"3063:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1777,"id":1788,"nodeType":"Return","src":"3056:58:9"}]},"documentation":{"id":1771,"nodeType":"StructuredDocumentation","src":"2820:148:9","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1790,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:9","nodeType":"FunctionDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"addr","nameLocation":"3002:4:9","nodeType":"VariableDeclaration","scope":1790,"src":"2994:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:9"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1790,"src":"3031:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1775,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:9"},"scope":2763,"src":"2973:148:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1854,"nodeType":"Block","src":"3378:642:9","statements":[{"assignments":[1799],"declarations":[{"constant":false,"id":1799,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:9","nodeType":"VariableDeclaration","scope":1854,"src":"3388:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1798,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1806,"initialValue":{"arguments":[{"arguments":[{"id":1803,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"3428:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1802,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1687,1770,1790],"referencedDeclaration":1790,"src":"3416:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1800,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:9","typeDescriptions":{}}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:9"},{"assignments":[1808],"declarations":[{"constant":false,"id":1808,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:9","nodeType":"VariableDeclaration","scope":1854,"src":"3519:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1809,"nodeType":"VariableDeclarationStatement","src":"3519:17:9"},{"AST":{"nodeType":"YulBlock","src":"3571:78:9","statements":[{"nodeType":"YulAssignment","src":"3585:54:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:2:9","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3620:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:9","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:9"},"nodeType":"YulFunctionCall","src":"3616:17:9"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:9","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3606:9:9"},"nodeType":"YulFunctionCall","src":"3606:32:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3598:3:9"},"nodeType":"YulFunctionCall","src":"3598:41:9"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3585:9:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1799,"isOffset":false,"isSlot":false,"src":"3620:6:9","valueSize":1},{"declaration":1808,"isOffset":false,"isSlot":false,"src":"3585:9:9","valueSize":1}],"flags":["memory-safe"],"id":1810,"nodeType":"InlineAssembly","src":"3546:103:9"},{"body":{"id":1847,"nodeType":"Block","src":"3692:291:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1821,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"3798:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:9","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1828,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"3827:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1830,"indexExpression":{"id":1829,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"3834:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1826,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:9","typeDescriptions":{}}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1842,"nodeType":"IfStatement","src":"3794:150:9","trueBody":{"id":1841,"nodeType":"Block","src":"3844:100:9","statements":[{"expression":{"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1835,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"3912:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1837,"indexExpression":{"id":1836,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"3919:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1840,"nodeType":"ExpressionStatement","src":"3912:17:9"}]}},{"expression":{"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1843,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"3957:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1846,"nodeType":"ExpressionStatement","src":"3957:15:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1815,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"3680:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1848,"initializationExpression":{"assignments":[1812],"declarations":[{"constant":false,"id":1812,"mutability":"mutable","name":"i","nameLocation":"3672:1:9","nodeType":"VariableDeclaration","scope":1848,"src":"3664:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1814,"initialValue":{"hexValue":"3431","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:9","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:9"},"loopExpression":{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:9","subExpression":{"id":1818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"3689:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1820,"nodeType":"ExpressionStatement","src":"3687:3:9"},"nodeType":"ForStatement","src":"3659:324:9"},{"expression":{"arguments":[{"id":1851,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"4006:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1849,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:9","typeDescriptions":{}}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1797,"id":1853,"nodeType":"Return","src":"3992:21:9"}]},"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"3127:165:9","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1855,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:9","nodeType":"FunctionDefinition","parameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"addr","nameLocation":"3334:4:9","nodeType":"VariableDeclaration","scope":1855,"src":"3326:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:9"},"returnParameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1855,"src":"3363:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1795,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:9"},"scope":2763,"src":"3297:723:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1891,"nodeType":"Block","src":"4175:104:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4198:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1865,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:9","typeDescriptions":{}}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:9","memberName":"length","nodeType":"MemberAccess","src":"4192:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1872,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"4217:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1870,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:9","typeDescriptions":{}}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:9","memberName":"length","nodeType":"MemberAccess","src":"4211:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1879,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4246:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1877,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:9","typeDescriptions":{}}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1876,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1885,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"4269:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1883,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:9","typeDescriptions":{}}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1882,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1864,"id":1890,"nodeType":"Return","src":"4185:87:9"}]},"documentation":{"id":1856,"nodeType":"StructuredDocumentation","src":"4026:66:9","text":" @dev Returns true if the two strings are equal."},"id":1892,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:9","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"a","nameLocation":"4126:1:9","nodeType":"VariableDeclaration","scope":1892,"src":"4112:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1857,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"b","nameLocation":"4143:1:9","nodeType":"VariableDeclaration","scope":1892,"src":"4129:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1859,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:9"},"returnParameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1892,"src":"4169:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1862,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:9"},"scope":2763,"src":"4097:182:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1910,"nodeType":"Block","src":"4576:64:9","statements":[{"expression":{"arguments":[{"id":1901,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"4603:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1905,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"4619:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1903,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:9","typeDescriptions":{}}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:9","memberName":"length","nodeType":"MemberAccess","src":"4613:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1900,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1911,1942],"referencedDeclaration":1942,"src":"4593:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1899,"id":1909,"nodeType":"Return","src":"4586:47:9"}]},"documentation":{"id":1893,"nodeType":"StructuredDocumentation","src":"4285:214:9","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1911,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:9","nodeType":"FunctionDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"input","nameLocation":"4537:5:9","nodeType":"VariableDeclaration","scope":1911,"src":"4523:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1894,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:9"},"returnParameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1911,"src":"4567:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:9"},"scope":2763,"src":"4504:136:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1941,"nodeType":"Block","src":"5038:153:9","statements":[{"assignments":[1924,1926],"declarations":[{"constant":false,"id":1924,"mutability":"mutable","name":"success","nameLocation":"5054:7:9","nodeType":"VariableDeclaration","scope":1941,"src":"5049:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1923,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"value","nameLocation":"5071:5:9","nodeType":"VariableDeclaration","scope":1941,"src":"5063:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1932,"initialValue":{"arguments":[{"id":1928,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"5093:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1929,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"5100:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1930,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"5107:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1927,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1963,2000],"referencedDeclaration":2000,"src":"5080:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:9"},{"condition":{"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:9","subExpression":{"id":1933,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"5126:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1938,"nodeType":"IfStatement","src":"5121:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1935,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"5142:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1937,"nodeType":"RevertStatement","src":"5135:27:9"}},{"expression":{"id":1939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"5179:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1922,"id":1940,"nodeType":"Return","src":"5172:12:9"}]},"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"4646:287:9","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1942,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:9","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"input","nameLocation":"4971:5:9","nodeType":"VariableDeclaration","scope":1942,"src":"4957:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1913,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"begin","nameLocation":"4986:5:9","nodeType":"VariableDeclaration","scope":1942,"src":"4978:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1915,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"end","nameLocation":"5001:3:9","nodeType":"VariableDeclaration","scope":1942,"src":"4993:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:9"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1942,"src":"5029:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1920,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:9"},"scope":2763,"src":"4938:253:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1962,"nodeType":"Block","src":"5512:83:9","statements":[{"expression":{"arguments":[{"id":1953,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"5558:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1957,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"5574:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1955,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:9","typeDescriptions":{}}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:9","memberName":"length","nodeType":"MemberAccess","src":"5568:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1952,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"5529:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1951,"id":1961,"nodeType":"Return","src":"5522:66:9"}]},"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"5197:215:9","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1963,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:9","nodeType":"FunctionDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"input","nameLocation":"5453:5:9","nodeType":"VariableDeclaration","scope":1963,"src":"5439:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1944,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:9"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"success","nameLocation":"5488:7:9","nodeType":"VariableDeclaration","scope":1963,"src":"5483:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1947,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1950,"mutability":"mutable","name":"value","nameLocation":"5505:5:9","nodeType":"VariableDeclaration","scope":1963,"src":"5497:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1949,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:9"},"scope":2763,"src":"5417:178:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1999,"nodeType":"Block","src":"5997:144:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"6011:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1980,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"6023:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1978,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:9","typeDescriptions":{}}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:9","memberName":"length","nodeType":"MemberAccess","src":"6017:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1984,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"6040:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1985,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"6048:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1992,"nodeType":"IfStatement","src":"6007:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1990,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1976,"id":1991,"nodeType":"Return","src":"6053:17:9"}},{"expression":{"arguments":[{"id":1994,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"6116:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1995,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"6123:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1996,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"6130:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1993,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"6087:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1976,"id":1998,"nodeType":"Return","src":"6080:54:9"}]},"documentation":{"id":1964,"nodeType":"StructuredDocumentation","src":"5601:238:9","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2000,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:9","nodeType":"FunctionDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"input","nameLocation":"5889:5:9","nodeType":"VariableDeclaration","scope":2000,"src":"5875:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1965,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"begin","nameLocation":"5912:5:9","nodeType":"VariableDeclaration","scope":2000,"src":"5904:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"end","nameLocation":"5935:3:9","nodeType":"VariableDeclaration","scope":2000,"src":"5927:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:9"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"success","nameLocation":"5973:7:9","nodeType":"VariableDeclaration","scope":2000,"src":"5968:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1972,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"value","nameLocation":"5990:5:9","nodeType":"VariableDeclaration","scope":2000,"src":"5982:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:9"},"scope":2763,"src":"5844:297:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2069,"nodeType":"Block","src":"6521:347:9","statements":[{"assignments":[2015],"declarations":[{"constant":false,"id":2015,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:9","nodeType":"VariableDeclaration","scope":2069,"src":"6531:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2014,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2020,"initialValue":{"arguments":[{"id":2018,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"6559:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2016,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:9","typeDescriptions":{}}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:9"},{"assignments":[2022],"declarations":[{"constant":false,"id":2022,"mutability":"mutable","name":"result","nameLocation":"6584:6:9","nodeType":"VariableDeclaration","scope":2069,"src":"6576:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2024,"initialValue":{"hexValue":"30","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:9"},{"body":{"id":2063,"nodeType":"Block","src":"6642:189:9","statements":[{"assignments":[2036],"declarations":[{"constant":false,"id":2036,"mutability":"mutable","name":"chr","nameLocation":"6662:3:9","nodeType":"VariableDeclaration","scope":2063,"src":"6656:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2035,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2046,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2041,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"6711:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"6719:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2040,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"6688:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2038,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:9","typeDescriptions":{}}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2037,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"6668:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2047,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"6741:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:9","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2054,"nodeType":"IfStatement","src":"6737:30:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2013,"id":2053,"nodeType":"Return","src":"6750:17:9"}},{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2055,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"6781:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"nodeType":"ExpressionStatement","src":"6781:12:9"},{"expression":{"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2059,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"6807:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2060,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"6817:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2062,"nodeType":"ExpressionStatement","src":"6807:13:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2029,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"6628:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2030,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"6632:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2064,"initializationExpression":{"assignments":[2026],"declarations":[{"constant":false,"id":2026,"mutability":"mutable","name":"i","nameLocation":"6617:1:9","nodeType":"VariableDeclaration","scope":2064,"src":"6609:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2028,"initialValue":{"id":2027,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"6621:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:9"},"loopExpression":{"expression":{"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:9","subExpression":{"id":2032,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"6639:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2034,"nodeType":"ExpressionStatement","src":"6637:3:9"},"nodeType":"ForStatement","src":"6604:227:9"},{"expression":{"components":[{"hexValue":"74727565","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"6854:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2013,"id":2068,"nodeType":"Return","src":"6840:21:9"}]},"documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"6147:201:9","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2070,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:9","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"input","nameLocation":"6414:5:9","nodeType":"VariableDeclaration","scope":2070,"src":"6400:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2002,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"begin","nameLocation":"6437:5:9","nodeType":"VariableDeclaration","scope":2070,"src":"6429:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2004,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"end","nameLocation":"6460:3:9","nodeType":"VariableDeclaration","scope":2070,"src":"6452:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:9"},"returnParameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"success","nameLocation":"6497:7:9","nodeType":"VariableDeclaration","scope":2070,"src":"6492:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2009,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"value","nameLocation":"6514:5:9","nodeType":"VariableDeclaration","scope":2070,"src":"6506:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:9"},"scope":2763,"src":"6353:515:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2088,"nodeType":"Block","src":"7165:63:9","statements":[{"expression":{"arguments":[{"id":2079,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"7191:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2083,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"7207:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2081,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:9","typeDescriptions":{}}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:9","memberName":"length","nodeType":"MemberAccess","src":"7201:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2078,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2089,2120],"referencedDeclaration":2120,"src":"7182:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2077,"id":2087,"nodeType":"Return","src":"7175:46:9"}]},"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"6874:216:9","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2089,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:9","nodeType":"FunctionDefinition","parameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"input","nameLocation":"7127:5:9","nodeType":"VariableDeclaration","scope":2089,"src":"7113:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2072,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:9"},"returnParameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2089,"src":"7157:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2075,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:9"},"scope":2763,"src":"7095:133:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2119,"nodeType":"Block","src":"7633:151:9","statements":[{"assignments":[2102,2104],"declarations":[{"constant":false,"id":2102,"mutability":"mutable","name":"success","nameLocation":"7649:7:9","nodeType":"VariableDeclaration","scope":2119,"src":"7644:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2101,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2104,"mutability":"mutable","name":"value","nameLocation":"7665:5:9","nodeType":"VariableDeclaration","scope":2119,"src":"7658:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2103,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2110,"initialValue":{"arguments":[{"id":2106,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"7686:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2107,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"7693:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2108,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"7700:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2105,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2141,2183],"referencedDeclaration":2183,"src":"7674:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:9"},{"condition":{"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:9","subExpression":{"id":2111,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"7719:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2116,"nodeType":"IfStatement","src":"7714:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2113,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"7735:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2115,"nodeType":"RevertStatement","src":"7728:27:9"}},{"expression":{"id":2117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"7772:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2100,"id":2118,"nodeType":"Return","src":"7765:12:9"}]},"documentation":{"id":2090,"nodeType":"StructuredDocumentation","src":"7234:296:9","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2120,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:9","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"input","nameLocation":"7567:5:9","nodeType":"VariableDeclaration","scope":2120,"src":"7553:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2091,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"begin","nameLocation":"7582:5:9","nodeType":"VariableDeclaration","scope":2120,"src":"7574:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"end","nameLocation":"7597:3:9","nodeType":"VariableDeclaration","scope":2120,"src":"7589:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:9"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2120,"src":"7625:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2098,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:9"},"scope":2763,"src":"7535:249:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2140,"nodeType":"Block","src":"8175:82:9","statements":[{"expression":{"arguments":[{"id":2131,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"8220:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2135,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"8236:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2133,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:9","typeDescriptions":{}}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:9","memberName":"length","nodeType":"MemberAccess","src":"8230:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2130,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"8192:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2129,"id":2139,"nodeType":"Return","src":"8185:65:9"}]},"documentation":{"id":2121,"nodeType":"StructuredDocumentation","src":"7790:287:9","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2141,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:9","nodeType":"FunctionDefinition","parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"input","nameLocation":"8117:5:9","nodeType":"VariableDeclaration","scope":2141,"src":"8103:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2122,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:9"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"success","nameLocation":"8152:7:9","nodeType":"VariableDeclaration","scope":2141,"src":"8147:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2125,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"value","nameLocation":"8168:5:9","nodeType":"VariableDeclaration","scope":2141,"src":"8161:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2127,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:9"},"scope":2763,"src":"8082:175:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2146,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:9","nodeType":"VariableDeclaration","scope":2763,"src":"8263:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:9","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2182,"nodeType":"Block","src":"8779:143:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2160,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"8793:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2163,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"8805:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2161,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:9","typeDescriptions":{}}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:9","memberName":"length","nodeType":"MemberAccess","src":"8799:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2167,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"8822:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2168,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"8830:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2175,"nodeType":"IfStatement","src":"8789:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2159,"id":2174,"nodeType":"Return","src":"8835:17:9"}},{"expression":{"arguments":[{"id":2177,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"8897:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2178,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"8904:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2179,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"8911:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2176,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"8869:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2159,"id":2181,"nodeType":"Return","src":"8862:53:9"}]},"documentation":{"id":2147,"nodeType":"StructuredDocumentation","src":"8320:303:9","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:9","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"input","nameLocation":"8672:5:9","nodeType":"VariableDeclaration","scope":2183,"src":"8658:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2148,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2151,"mutability":"mutable","name":"begin","nameLocation":"8695:5:9","nodeType":"VariableDeclaration","scope":2183,"src":"8687:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"end","nameLocation":"8718:3:9","nodeType":"VariableDeclaration","scope":2183,"src":"8710:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:9"},"returnParameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"success","nameLocation":"8756:7:9","nodeType":"VariableDeclaration","scope":2183,"src":"8751:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2155,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2158,"mutability":"mutable","name":"value","nameLocation":"8772:5:9","nodeType":"VariableDeclaration","scope":2183,"src":"8765:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2157,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:9"},"scope":2763,"src":"8628:294:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2303,"nodeType":"Block","src":"9299:812:9","statements":[{"assignments":[2198],"declarations":[{"constant":false,"id":2198,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:9","nodeType":"VariableDeclaration","scope":2303,"src":"9309:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2197,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2203,"initialValue":{"arguments":[{"id":2201,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9337:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2199,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:9","typeDescriptions":{}}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:9"},{"assignments":[2205],"declarations":[{"constant":false,"id":2205,"mutability":"mutable","name":"sign","nameLocation":"9407:4:9","nodeType":"VariableDeclaration","scope":2303,"src":"9400:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2204,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2221,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2206,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"9414:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2207,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"9423:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2216,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"9471:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2217,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"9479:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2215,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"9448:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2213,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:9","typeDescriptions":{}}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:9","trueExpression":{"arguments":[{"hexValue":"30","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2209,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:9","typeDescriptions":{}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:9"},{"assignments":[2223],"declarations":[{"constant":false,"id":2223,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:9","nodeType":"VariableDeclaration","scope":2303,"src":"9567:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2222,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2230,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2224,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"9587:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2225,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:9","typeDescriptions":{}}},"id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:9"},{"assignments":[2232],"declarations":[{"constant":false,"id":2232,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:9","nodeType":"VariableDeclaration","scope":2303,"src":"9616:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2231,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2239,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2233,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"9636:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2234,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:9","typeDescriptions":{}}},"id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:9"},{"assignments":[2241],"declarations":[{"constant":false,"id":2241,"mutability":"mutable","name":"offset","nameLocation":"9673:6:9","nodeType":"VariableDeclaration","scope":2303,"src":"9665:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2248,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2242,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"9683:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2243,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"9699:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"9682:37:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:9"},{"assignments":[2250,2252],"declarations":[{"constant":false,"id":2250,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:9","nodeType":"VariableDeclaration","scope":2303,"src":"9733:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2249,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:9","nodeType":"VariableDeclaration","scope":2303,"src":"9750:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2260,"initialValue":{"arguments":[{"id":2254,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9783:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2255,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"9790:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2256,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"9798:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2258,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"9806:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2253,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1963,2000],"referencedDeclaration":2000,"src":"9770:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2261,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"9825:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2262,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"9839:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2263,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"9850:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2281,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"9967:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2282,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"9981:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2284,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"9997:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2285,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"10009:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2196,"id":2300,"nodeType":"Return","src":"10087:17:9"},"id":2301,"nodeType":"IfStatement","src":"9963:141:9","trueBody":{"id":2296,"nodeType":"Block","src":"10025:56:9","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2290,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2289,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:9","memberName":"min","nodeType":"MemberAccess","src":"10053:16:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2196,"id":2295,"nodeType":"Return","src":"10039:31:9"}]}},"id":2302,"nodeType":"IfStatement","src":"9821:283:9","trueBody":{"id":2280,"nodeType":"Block","src":"9866:91:9","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2267,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"9894:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2275,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"9936:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2273,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:9","typeDescriptions":{}}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:9","trueExpression":{"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:9","subExpression":{"arguments":[{"id":2270,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"9917:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2268,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:9","typeDescriptions":{}}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2196,"id":2279,"nodeType":"Return","src":"9880:66:9"}]}}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"8928:200:9","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2304,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:9","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"input","nameLocation":"9193:5:9","nodeType":"VariableDeclaration","scope":2304,"src":"9179:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2185,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2188,"mutability":"mutable","name":"begin","nameLocation":"9216:5:9","nodeType":"VariableDeclaration","scope":2304,"src":"9208:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"end","nameLocation":"9239:3:9","nodeType":"VariableDeclaration","scope":2304,"src":"9231:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:9"},"returnParameters":{"id":2196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"success","nameLocation":"9276:7:9","nodeType":"VariableDeclaration","scope":2304,"src":"9271:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2192,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2195,"mutability":"mutable","name":"value","nameLocation":"9292:5:9","nodeType":"VariableDeclaration","scope":2304,"src":"9285:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2194,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:9"},"scope":2763,"src":"9133:978:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2322,"nodeType":"Block","src":"10456:67:9","statements":[{"expression":{"arguments":[{"id":2313,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"10486:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2317,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"10502:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2315,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:9","typeDescriptions":{}}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:9","memberName":"length","nodeType":"MemberAccess","src":"10496:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2312,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2323,2354],"referencedDeclaration":2354,"src":"10473:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2311,"id":2321,"nodeType":"Return","src":"10466:50:9"}]},"documentation":{"id":2305,"nodeType":"StructuredDocumentation","src":"10117:259:9","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2323,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:9","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"input","nameLocation":"10417:5:9","nodeType":"VariableDeclaration","scope":2323,"src":"10403:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2306,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:9"},"returnParameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2323,"src":"10447:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:9"},"scope":2763,"src":"10381:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2353,"nodeType":"Block","src":"10937:156:9","statements":[{"assignments":[2336,2338],"declarations":[{"constant":false,"id":2336,"mutability":"mutable","name":"success","nameLocation":"10953:7:9","nodeType":"VariableDeclaration","scope":2353,"src":"10948:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2335,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"value","nameLocation":"10970:5:9","nodeType":"VariableDeclaration","scope":2353,"src":"10962:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2344,"initialValue":{"arguments":[{"id":2340,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"10995:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2341,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"11002:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2342,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"11009:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2339,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2375,2412],"referencedDeclaration":2412,"src":"10979:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:9"},{"condition":{"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:9","subExpression":{"id":2345,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"11028:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2350,"nodeType":"IfStatement","src":"11023:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2347,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"11044:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2349,"nodeType":"RevertStatement","src":"11037:27:9"}},{"expression":{"id":2351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"11081:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2334,"id":2352,"nodeType":"Return","src":"11074:12:9"}]},"documentation":{"id":2324,"nodeType":"StructuredDocumentation","src":"10529:300:9","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2354,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:9","nodeType":"FunctionDefinition","parameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"input","nameLocation":"10870:5:9","nodeType":"VariableDeclaration","scope":2354,"src":"10856:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2325,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2328,"mutability":"mutable","name":"begin","nameLocation":"10885:5:9","nodeType":"VariableDeclaration","scope":2354,"src":"10877:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2330,"mutability":"mutable","name":"end","nameLocation":"10900:3:9","nodeType":"VariableDeclaration","scope":2354,"src":"10892:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:9"},"returnParameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2354,"src":"10928:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:9"},"scope":2763,"src":"10834:259:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2374,"nodeType":"Block","src":"11420:86:9","statements":[{"expression":{"arguments":[{"id":2365,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"11469:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2369,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"11485:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2367,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:9","typeDescriptions":{}}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:9","memberName":"length","nodeType":"MemberAccess","src":"11479:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2364,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"11437:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2363,"id":2373,"nodeType":"Return","src":"11430:69:9"}]},"documentation":{"id":2355,"nodeType":"StructuredDocumentation","src":"11099:218:9","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2375,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:9","nodeType":"FunctionDefinition","parameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"input","nameLocation":"11361:5:9","nodeType":"VariableDeclaration","scope":2375,"src":"11347:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2356,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:9"},"returnParameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"success","nameLocation":"11396:7:9","nodeType":"VariableDeclaration","scope":2375,"src":"11391:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2359,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"value","nameLocation":"11413:5:9","nodeType":"VariableDeclaration","scope":2375,"src":"11405:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:9"},"scope":2763,"src":"11322:184:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2411,"nodeType":"Block","src":"11914:147:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2389,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"11928:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2392,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"11940:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2390,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:9","typeDescriptions":{}}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:9","memberName":"length","nodeType":"MemberAccess","src":"11934:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2396,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"11957:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2397,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"11965:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2404,"nodeType":"IfStatement","src":"11924:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2388,"id":2403,"nodeType":"Return","src":"11970:17:9"}},{"expression":{"arguments":[{"id":2406,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"12036:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2407,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"12043:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2408,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"12050:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2405,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"12004:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2388,"id":2410,"nodeType":"Return","src":"11997:57:9"}]},"documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"11512:241:9","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2412,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:9","nodeType":"FunctionDefinition","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"input","nameLocation":"11806:5:9","nodeType":"VariableDeclaration","scope":2412,"src":"11792:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2377,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"begin","nameLocation":"11829:5:9","nodeType":"VariableDeclaration","scope":2412,"src":"11821:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2379,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"end","nameLocation":"11852:3:9","nodeType":"VariableDeclaration","scope":2412,"src":"11844:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:9"},"returnParameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"success","nameLocation":"11890:7:9","nodeType":"VariableDeclaration","scope":2412,"src":"11885:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2384,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"value","nameLocation":"11907:5:9","nodeType":"VariableDeclaration","scope":2412,"src":"11899:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:9"},"scope":2763,"src":"11758:303:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2514,"nodeType":"Block","src":"12447:880:9","statements":[{"assignments":[2427],"declarations":[{"constant":false,"id":2427,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:9","nodeType":"VariableDeclaration","scope":2514,"src":"12457:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2426,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2432,"initialValue":{"arguments":[{"id":2430,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"12485:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2428,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:9","typeDescriptions":{}}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:9"},{"assignments":[2434],"declarations":[{"constant":false,"id":2434,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:9","nodeType":"VariableDeclaration","scope":2514,"src":"12539:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2433,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2454,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"12557:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2436,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"12563:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2444,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"12607:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2445,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"12615:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2443,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"12584:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2441,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:9","typeDescriptions":{}}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2448,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:9","typeDescriptions":{}}},"id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:9"},{"assignments":[2456],"declarations":[{"constant":false,"id":2456,"mutability":"mutable","name":"offset","nameLocation":"12727:6:9","nodeType":"VariableDeclaration","scope":2514,"src":"12719:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2462,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2457,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"12736:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"12736:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:9"},{"assignments":[2464],"declarations":[{"constant":false,"id":2464,"mutability":"mutable","name":"result","nameLocation":"12777:6:9","nodeType":"VariableDeclaration","scope":2514,"src":"12769:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2466,"initialValue":{"hexValue":"30","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:9"},{"body":{"id":2508,"nodeType":"Block","src":"12844:446:9","statements":[{"assignments":[2480],"declarations":[{"constant":false,"id":2480,"mutability":"mutable","name":"chr","nameLocation":"12864:3:9","nodeType":"VariableDeclaration","scope":2508,"src":"12858:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2479,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2490,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2485,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"12913:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2486,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"12921:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2484,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"12890:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2482,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:9","typeDescriptions":{}}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2481,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"12870:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2491,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"12943:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2498,"nodeType":"IfStatement","src":"12939:31:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2425,"id":2497,"nodeType":"Return","src":"12953:17:9"}},{"expression":{"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2499,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"12984:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2502,"nodeType":"ExpressionStatement","src":"12984:12:9"},{"id":2507,"nodeType":"UncheckedBlock","src":"13010:270:9","statements":[{"expression":{"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"13252:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2504,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"13262:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2506,"nodeType":"ExpressionStatement","src":"13252:13:9"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2473,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"12830:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2474,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"12834:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2509,"initializationExpression":{"assignments":[2468],"declarations":[{"constant":false,"id":2468,"mutability":"mutable","name":"i","nameLocation":"12810:1:9","nodeType":"VariableDeclaration","scope":2509,"src":"12802:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2472,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2469,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"12814:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2470,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"12822:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:9"},"loopExpression":{"expression":{"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:9","subExpression":{"id":2476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"12841:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2478,"nodeType":"ExpressionStatement","src":"12839:3:9"},"nodeType":"ForStatement","src":"12797:493:9"},{"expression":{"components":[{"hexValue":"74727565","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2511,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"13313:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2425,"id":2513,"nodeType":"Return","src":"13299:21:9"}]},"documentation":{"id":2413,"nodeType":"StructuredDocumentation","src":"12067:204:9","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2515,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:9","nodeType":"FunctionDefinition","parameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"input","nameLocation":"12340:5:9","nodeType":"VariableDeclaration","scope":2515,"src":"12326:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2414,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"begin","nameLocation":"12363:5:9","nodeType":"VariableDeclaration","scope":2515,"src":"12355:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2419,"mutability":"mutable","name":"end","nameLocation":"12386:3:9","nodeType":"VariableDeclaration","scope":2515,"src":"12378:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:9"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"success","nameLocation":"12423:7:9","nodeType":"VariableDeclaration","scope":2515,"src":"12418:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2421,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2424,"mutability":"mutable","name":"value","nameLocation":"12440:5:9","nodeType":"VariableDeclaration","scope":2515,"src":"12432:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:9"},"scope":2763,"src":"12276:1051:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2533,"nodeType":"Block","src":"13625:67:9","statements":[{"expression":{"arguments":[{"id":2524,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"13655:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2528,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"13671:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2526,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:9","typeDescriptions":{}}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:9","memberName":"length","nodeType":"MemberAccess","src":"13665:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2523,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2534,2565],"referencedDeclaration":2565,"src":"13642:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2522,"id":2532,"nodeType":"Return","src":"13635:50:9"}]},"documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"13333:212:9","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2534,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:9","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"input","nameLocation":"13586:5:9","nodeType":"VariableDeclaration","scope":2534,"src":"13572:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2517,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:9"},"returnParameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2534,"src":"13616:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2520,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:9"},"scope":2763,"src":"13550:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2564,"nodeType":"Block","src":"14058:165:9","statements":[{"assignments":[2547,2549],"declarations":[{"constant":false,"id":2547,"mutability":"mutable","name":"success","nameLocation":"14074:7:9","nodeType":"VariableDeclaration","scope":2564,"src":"14069:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2546,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"value","nameLocation":"14091:5:9","nodeType":"VariableDeclaration","scope":2564,"src":"14083:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2548,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2555,"initialValue":{"arguments":[{"id":2551,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"14116:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2552,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"14123:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2553,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"14130:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2550,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2586,2690],"referencedDeclaration":2690,"src":"14100:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:9"},{"condition":{"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:9","subExpression":{"id":2556,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"14149:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2561,"nodeType":"IfStatement","src":"14144:50:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2558,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"14165:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2560,"nodeType":"RevertStatement","src":"14158:36:9"}},{"expression":{"id":2562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"14211:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2545,"id":2563,"nodeType":"Return","src":"14204:12:9"}]},"documentation":{"id":2535,"nodeType":"StructuredDocumentation","src":"13698:252:9","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2565,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:9","nodeType":"FunctionDefinition","parameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2537,"mutability":"mutable","name":"input","nameLocation":"13991:5:9","nodeType":"VariableDeclaration","scope":2565,"src":"13977:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2536,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2539,"mutability":"mutable","name":"begin","nameLocation":"14006:5:9","nodeType":"VariableDeclaration","scope":2565,"src":"13998:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2538,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2541,"mutability":"mutable","name":"end","nameLocation":"14021:3:9","nodeType":"VariableDeclaration","scope":2565,"src":"14013:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2540,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:9"},"returnParameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2565,"src":"14049:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2543,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:9"},"scope":2763,"src":"13955:268:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2585,"nodeType":"Block","src":"14523:70:9","statements":[{"expression":{"arguments":[{"id":2576,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"14556:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2580,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"14572:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2578,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:9","typeDescriptions":{}}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:9","memberName":"length","nodeType":"MemberAccess","src":"14566:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2575,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2586,2690],"referencedDeclaration":2690,"src":"14540:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2574,"id":2584,"nodeType":"Return","src":"14533:53:9"}]},"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"14229:191:9","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2586,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:9","nodeType":"FunctionDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"input","nameLocation":"14464:5:9","nodeType":"VariableDeclaration","scope":2586,"src":"14450:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2567,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:9"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"success","nameLocation":"14499:7:9","nodeType":"VariableDeclaration","scope":2586,"src":"14494:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2570,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"value","nameLocation":"14516:5:9","nodeType":"VariableDeclaration","scope":2586,"src":"14508:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2572,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:9"},"scope":2763,"src":"14425:168:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2689,"nodeType":"Block","src":"14963:733:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2600,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"14977:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2603,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"14989:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2601,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:9","typeDescriptions":{}}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:9","memberName":"length","nodeType":"MemberAccess","src":"14983:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2607,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"15006:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2608,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"15014:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2618,"nodeType":"IfStatement","src":"14973:72:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:9","typeDescriptions":{}}},"id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2599,"id":2617,"nodeType":"Return","src":"15019:26:9"}},{"assignments":[2620],"declarations":[{"constant":false,"id":2620,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:9","nodeType":"VariableDeclaration","scope":2689,"src":"15056:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2619,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2643,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2621,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"15074:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2622,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"15080:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2632,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"15130:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2630,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:9","typeDescriptions":{}}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2634,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"15138:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2629,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"15101:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2627,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:9","typeDescriptions":{}}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2637,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:9","typeDescriptions":{}}},"id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:9"},{"assignments":[2645],"declarations":[{"constant":false,"id":2645,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:9","nodeType":"VariableDeclaration","scope":2689,"src":"15242:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2653,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:9","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2647,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"15272:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"15272:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"15359:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2655,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"15365:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2657,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"15374:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2687,"nodeType":"Block","src":"15639:51:9","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2681,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:9","typeDescriptions":{}}},"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2599,"id":2686,"nodeType":"Return","src":"15653:26:9"}]},"id":2688,"nodeType":"IfStatement","src":"15355:335:9","trueBody":{"id":2679,"nodeType":"Block","src":"15390:243:9","statements":[{"assignments":[2660,2662],"declarations":[{"constant":false,"id":2660,"mutability":"mutable","name":"s","nameLocation":"15511:1:9","nodeType":"VariableDeclaration","scope":2679,"src":"15506:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2659,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"v","nameLocation":"15522:1:9","nodeType":"VariableDeclaration","scope":2679,"src":"15514:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2668,"initialValue":{"arguments":[{"id":2664,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"15559:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2665,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"15566:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2666,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"15573:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2663,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"15527:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:9"},{"expression":{"components":[{"id":2669,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"15599:1:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2674,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"15618:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2672,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:9","typeDescriptions":{}}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:9","typeDescriptions":{}}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2599,"id":2678,"nodeType":"Return","src":"15591:31:9"}]}}]},"documentation":{"id":2587,"nodeType":"StructuredDocumentation","src":"14599:203:9","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2690,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:9","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"input","nameLocation":"14855:5:9","nodeType":"VariableDeclaration","scope":2690,"src":"14841:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2588,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2591,"mutability":"mutable","name":"begin","nameLocation":"14878:5:9","nodeType":"VariableDeclaration","scope":2690,"src":"14870:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2593,"mutability":"mutable","name":"end","nameLocation":"14901:3:9","nodeType":"VariableDeclaration","scope":2690,"src":"14893:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:9"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"success","nameLocation":"14939:7:9","nodeType":"VariableDeclaration","scope":2690,"src":"14934:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2595,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2598,"mutability":"mutable","name":"value","nameLocation":"14956:5:9","nodeType":"VariableDeclaration","scope":2690,"src":"14948:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2597,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:9"},"scope":2763,"src":"14807:889:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2749,"nodeType":"Block","src":"15765:461:9","statements":[{"assignments":[2698],"declarations":[{"constant":false,"id":2698,"mutability":"mutable","name":"value","nameLocation":"15781:5:9","nodeType":"VariableDeclaration","scope":2749,"src":"15775:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2697,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2703,"initialValue":{"arguments":[{"id":2701,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"15795:3:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2699,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:9","typeDescriptions":{}}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:9"},{"id":2746,"nodeType":"UncheckedBlock","src":"15959:238:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"15987:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:9","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"16001:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:9","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"16047:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"16061:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:9","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"16108:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"16122:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:9","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2738,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2737,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:9","memberName":"max","nodeType":"MemberAccess","src":"16171:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2696,"id":2742,"nodeType":"Return","src":"16164:22:9"},"id":2743,"nodeType":"IfStatement","src":"16104:82:9","trueBody":{"expression":{"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"16134:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:9","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2736,"nodeType":"ExpressionStatement","src":"16134:11:9"}},"id":2744,"nodeType":"IfStatement","src":"16043:143:9","trueBody":{"expression":{"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"16074:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:9","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2725,"nodeType":"ExpressionStatement","src":"16074:11:9"}},"id":2745,"nodeType":"IfStatement","src":"15983:203:9","trueBody":{"expression":{"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"16013:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2714,"nodeType":"ExpressionStatement","src":"16013:11:9"}}]},{"expression":{"id":2747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"16214:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2696,"id":2748,"nodeType":"Return","src":"16207:12:9"}]},"id":2750,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:9","nodeType":"FunctionDefinition","parameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"chr","nameLocation":"15731:3:9","nodeType":"VariableDeclaration","scope":2750,"src":"15724:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2691,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:9"},"returnParameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2750,"src":"15758:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2694,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:9"},"scope":2763,"src":"15702:524:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2761,"nodeType":"Block","src":"16611:225:9","statements":[{"AST":{"nodeType":"YulBlock","src":"16760:70:9","statements":[{"nodeType":"YulAssignment","src":"16774:46:9","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"16793:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16805:4:9","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"16811:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:9"},"nodeType":"YulFunctionCall","src":"16801:17:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:9"},"nodeType":"YulFunctionCall","src":"16789:30:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16783:5:9"},"nodeType":"YulFunctionCall","src":"16783:37:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16774:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2753,"isOffset":false,"isSlot":false,"src":"16793:6:9","valueSize":1},{"declaration":2755,"isOffset":false,"isSlot":false,"src":"16811:6:9","valueSize":1},{"declaration":2758,"isOffset":false,"isSlot":false,"src":"16774:5:9","valueSize":1}],"flags":["memory-safe"],"id":2760,"nodeType":"InlineAssembly","src":"16735:95:9"}]},"documentation":{"id":2751,"nodeType":"StructuredDocumentation","src":"16232:268:9","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2762,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:9","nodeType":"FunctionDefinition","parameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:9","nodeType":"VariableDeclaration","scope":2762,"src":"16537:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2752,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2755,"mutability":"mutable","name":"offset","nameLocation":"16566:6:9","nodeType":"VariableDeclaration","scope":2762,"src":"16558:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:9"},"returnParameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"value","nameLocation":"16604:5:9","nodeType":"VariableDeclaration","scope":2762,"src":"16596:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:9"},"scope":2763,"src":"16505:331:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2764,"src":"297:16541:9","usedErrors":[1587,1590,1593],"usedEvents":[]}],"src":"101:16738:9"},"id":9},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2787],"IERC165":[2799]},"id":2788,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2765,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2767,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2788,"sourceUnit":2800,"src":"140:38:10","symbolAliases":[{"foreign":{"id":2766,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"148:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2769,"name":"IERC165","nameLocations":["688:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2799,"src":"688:7:10"},"id":2770,"nodeType":"InheritanceSpecifier","src":"688:7:10"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2768,"nodeType":"StructuredDocumentation","src":"180:479:10","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2787,"linearizedBaseContracts":[2787,2799],"name":"ERC165","nameLocation":"678:6:10","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2798],"body":{"id":2785,"nodeType":"Block","src":"845:64:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"862:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2780,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"882:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2799_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2799_$","typeString":"type(contract IERC165)"}],"id":2779,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2799","typeString":"type(contract IERC165)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2777,"id":2784,"nodeType":"Return","src":"855:47:10"}]},"documentation":{"id":2771,"nodeType":"StructuredDocumentation","src":"702:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:10","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:10","nodeType":"VariableDeclaration","scope":2786,"src":"790:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2772,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:10"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2786,"src":"839:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2775,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:10"},"scope":2787,"src":"763:146:10","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2788,"src":"660:251:10","usedErrors":[],"usedEvents":[]}],"src":"114:798:10"},"id":10},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2799]},"id":2800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2789,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2790,"nodeType":"StructuredDocumentation","src":"141:280:11","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2799,"linearizedBaseContracts":[2799],"name":"IERC165","nameLocation":"432:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2791,"nodeType":"StructuredDocumentation","src":"446:340:11","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2798,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:11","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:11","nodeType":"VariableDeclaration","scope":2798,"src":"818:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2792,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:11"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2798,"src":"861:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2795,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:11"},"scope":2799,"src":"791:76:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2800,"src":"422:447:11","usedErrors":[],"usedEvents":[]}],"src":"115:755:11"},"id":11},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4405],"Panic":[1563],"SafeCast":[6170]},"id":4406,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2801,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2803,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4406,"sourceUnit":1564,"src":"129:35:12","symbolAliases":[{"foreign":{"id":2802,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"137:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2805,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4406,"sourceUnit":6171,"src":"165:40:12","symbolAliases":[{"foreign":{"id":2804,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"173:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2806,"nodeType":"StructuredDocumentation","src":"207:73:12","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4405,"linearizedBaseContracts":[4405],"name":"Math","nameLocation":"289:4:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2811,"members":[{"id":2807,"name":"Floor","nameLocation":"324:5:12","nodeType":"EnumValue","src":"324:5:12"},{"id":2808,"name":"Ceil","nameLocation":"367:4:12","nodeType":"EnumValue","src":"367:4:12"},{"id":2809,"name":"Trunc","nameLocation":"409:5:12","nodeType":"EnumValue","src":"409:5:12"},{"id":2810,"name":"Expand","nameLocation":"439:6:12","nodeType":"EnumValue","src":"439:6:12"}],"name":"Rounding","nameLocation":"305:8:12","nodeType":"EnumDefinition","src":"300:169:12"},{"body":{"id":2842,"nodeType":"Block","src":"677:140:12","statements":[{"id":2841,"nodeType":"UncheckedBlock","src":"687:124:12","statements":[{"assignments":[2824],"declarations":[{"constant":false,"id":2824,"mutability":"mutable","name":"c","nameLocation":"719:1:12","nodeType":"VariableDeclaration","scope":2841,"src":"711:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2828,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2825,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"723:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2826,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"727:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"746:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"750:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2836,"nodeType":"IfStatement","src":"742:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2822,"id":2835,"nodeType":"Return","src":"753:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2838,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"798:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2822,"id":2840,"nodeType":"Return","src":"784:16:12"}]}]},"documentation":{"id":2812,"nodeType":"StructuredDocumentation","src":"475:106:12","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":2843,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:12","nodeType":"FunctionDefinition","parameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"a","nameLocation":"610:1:12","nodeType":"VariableDeclaration","scope":2843,"src":"602:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2816,"mutability":"mutable","name":"b","nameLocation":"621:1:12","nodeType":"VariableDeclaration","scope":2843,"src":"613:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:12"},"returnParameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"success","nameLocation":"652:7:12","nodeType":"VariableDeclaration","scope":2843,"src":"647:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2818,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"result","nameLocation":"669:6:12","nodeType":"VariableDeclaration","scope":2843,"src":"661:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:12"},"scope":4405,"src":"586:231:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2870,"nodeType":"Block","src":"1028:113:12","statements":[{"id":2869,"nodeType":"UncheckedBlock","src":"1038:97:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"1066:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2856,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"1070:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2862,"nodeType":"IfStatement","src":"1062:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2854,"id":2861,"nodeType":"Return","src":"1073:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2864,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"1118:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2865,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"1122:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2854,"id":2868,"nodeType":"Return","src":"1104:20:12"}]}]},"documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"823:109:12","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":2871,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:12","nodeType":"FunctionDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"a","nameLocation":"961:1:12","nodeType":"VariableDeclaration","scope":2871,"src":"953:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"b","nameLocation":"972:1:12","nodeType":"VariableDeclaration","scope":2871,"src":"964:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:12"},"returnParameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"success","nameLocation":"1003:7:12","nodeType":"VariableDeclaration","scope":2871,"src":"998:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2850,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2853,"mutability":"mutable","name":"result","nameLocation":"1020:6:12","nodeType":"VariableDeclaration","scope":2871,"src":"1012:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2852,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:12"},"scope":4405,"src":"937:204:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2912,"nodeType":"Block","src":"1355:417:12","statements":[{"id":2911,"nodeType":"UncheckedBlock","src":"1365:401:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2883,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"1623:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2890,"nodeType":"IfStatement","src":"1619:28:12","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2882,"id":2889,"nodeType":"Return","src":"1631:16:12"}},{"assignments":[2892],"declarations":[{"constant":false,"id":2892,"mutability":"mutable","name":"c","nameLocation":"1669:1:12","nodeType":"VariableDeclaration","scope":2911,"src":"1661:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2896,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2893,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"1673:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2894,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"1677:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2897,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"1696:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2898,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"1700:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2900,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"1705:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2906,"nodeType":"IfStatement","src":"1692:33:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2882,"id":2905,"nodeType":"Return","src":"1708:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2908,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"1753:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2909,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2882,"id":2910,"nodeType":"Return","src":"1739:16:12"}]}]},"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"1147:112:12","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:12","nodeType":"FunctionDefinition","parameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"a","nameLocation":"1288:1:12","nodeType":"VariableDeclaration","scope":2913,"src":"1280:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"b","nameLocation":"1299:1:12","nodeType":"VariableDeclaration","scope":2913,"src":"1291:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:12"},"returnParameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"success","nameLocation":"1330:7:12","nodeType":"VariableDeclaration","scope":2913,"src":"1325:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2878,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2881,"mutability":"mutable","name":"result","nameLocation":"1347:6:12","nodeType":"VariableDeclaration","scope":2913,"src":"1339:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:12"},"scope":4405,"src":"1264:508:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2940,"nodeType":"Block","src":"1987:114:12","statements":[{"id":2939,"nodeType":"UncheckedBlock","src":"1997:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"2025:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2932,"nodeType":"IfStatement","src":"2021:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2924,"id":2931,"nodeType":"Return","src":"2033:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2934,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"2078:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2935,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2918,"src":"2082:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2924,"id":2938,"nodeType":"Return","src":"2064:20:12"}]}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"1778:113:12","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2941,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:12","nodeType":"FunctionDefinition","parameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"a","nameLocation":"1920:1:12","nodeType":"VariableDeclaration","scope":2941,"src":"1912:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"b","nameLocation":"1931:1:12","nodeType":"VariableDeclaration","scope":2941,"src":"1923:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:12"},"returnParameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2921,"mutability":"mutable","name":"success","nameLocation":"1962:7:12","nodeType":"VariableDeclaration","scope":2941,"src":"1957:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2920,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2923,"mutability":"mutable","name":"result","nameLocation":"1979:6:12","nodeType":"VariableDeclaration","scope":2941,"src":"1971:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2922,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:12"},"scope":4405,"src":"1896:205:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2968,"nodeType":"Block","src":"2326:114:12","statements":[{"id":2967,"nodeType":"UncheckedBlock","src":"2336:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2953,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"2364:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2960,"nodeType":"IfStatement","src":"2360:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2958,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2952,"id":2959,"nodeType":"Return","src":"2372:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2962,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"2417:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2963,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"2421:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2952,"id":2966,"nodeType":"Return","src":"2403:20:12"}]}]},"documentation":{"id":2942,"nodeType":"StructuredDocumentation","src":"2107:123:12","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2969,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:12","nodeType":"FunctionDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"a","nameLocation":"2259:1:12","nodeType":"VariableDeclaration","scope":2969,"src":"2251:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2946,"mutability":"mutable","name":"b","nameLocation":"2270:1:12","nodeType":"VariableDeclaration","scope":2969,"src":"2262:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:12"},"returnParameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"success","nameLocation":"2301:7:12","nodeType":"VariableDeclaration","scope":2969,"src":"2296:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2948,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2951,"mutability":"mutable","name":"result","nameLocation":"2318:6:12","nodeType":"VariableDeclaration","scope":2969,"src":"2310:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2950,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:12"},"scope":4405,"src":"2235:205:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2995,"nodeType":"Block","src":"2912:207:12","statements":[{"id":2994,"nodeType":"UncheckedBlock","src":"2922:191:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2981,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"3060:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2982,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"3066:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2983,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"3070:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2988,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"3091:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2986,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"3075:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"3075:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2980,"id":2993,"nodeType":"Return","src":"3053:49:12"}]}]},"documentation":{"id":2970,"nodeType":"StructuredDocumentation","src":"2446:374:12","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":2996,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:12","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"condition","nameLocation":"2847:9:12","nodeType":"VariableDeclaration","scope":2996,"src":"2842:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2971,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"a","nameLocation":"2866:1:12","nodeType":"VariableDeclaration","scope":2996,"src":"2858:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"b","nameLocation":"2877:1:12","nodeType":"VariableDeclaration","scope":2996,"src":"2869:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:12"},"returnParameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2996,"src":"2903:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:12"},"scope":4405,"src":"2825:294:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3014,"nodeType":"Block","src":"3256:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3007,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"3281:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3008,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"3285:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3010,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"3288:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3011,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"3291:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3006,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"3273:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3005,"id":3013,"nodeType":"Return","src":"3266:27:12"}]},"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"3125:59:12","text":" @dev Returns the largest of two numbers."},"id":3015,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:12","nodeType":"FunctionDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"a","nameLocation":"3210:1:12","nodeType":"VariableDeclaration","scope":3015,"src":"3202:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"b","nameLocation":"3221:1:12","nodeType":"VariableDeclaration","scope":3015,"src":"3213:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:12"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3015,"src":"3247:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:12"},"scope":4405,"src":"3189:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3033,"nodeType":"Block","src":"3438:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"3463:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3027,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"3467:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3029,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"3470:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3030,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"3473:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3025,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"3455:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3024,"id":3032,"nodeType":"Return","src":"3448:27:12"}]},"documentation":{"id":3016,"nodeType":"StructuredDocumentation","src":"3306:60:12","text":" @dev Returns the smallest of two numbers."},"id":3034,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:12","nodeType":"FunctionDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"a","nameLocation":"3392:1:12","nodeType":"VariableDeclaration","scope":3034,"src":"3384:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"b","nameLocation":"3403:1:12","nodeType":"VariableDeclaration","scope":3034,"src":"3395:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:12"},"returnParameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3034,"src":"3429:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:12"},"scope":4405,"src":"3371:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3056,"nodeType":"Block","src":"3666:82:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3044,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"3721:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3045,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"3725:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3048,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"3731:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3049,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"3735:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3043,"id":3055,"nodeType":"Return","src":"3713:28:12"}]},"documentation":{"id":3035,"nodeType":"StructuredDocumentation","src":"3488:102:12","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3057,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:12","nodeType":"FunctionDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"a","nameLocation":"3620:1:12","nodeType":"VariableDeclaration","scope":3057,"src":"3612:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"b","nameLocation":"3631:1:12","nodeType":"VariableDeclaration","scope":3057,"src":"3623:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:12"},"returnParameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3057,"src":"3657:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:12"},"scope":4405,"src":"3595:153:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3097,"nodeType":"Block","src":"4040:633:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3067,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"4054:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3078,"nodeType":"IfStatement","src":"4050:150:12","trueBody":{"id":3077,"nodeType":"Block","src":"4062:138:12","statements":[{"expression":{"arguments":[{"expression":{"id":3073,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"4166:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"4166:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3070,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"4154:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"4154:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3076,"nodeType":"ExpressionStatement","src":"4154:35:12"}]}},{"id":3096,"nodeType":"UncheckedBlock","src":"4583:84:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3081,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"4630:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3079,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"4614:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"4614:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"4641:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3089,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"4650:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3066,"id":3095,"nodeType":"Return","src":"4607:49:12"}]}]},"documentation":{"id":3058,"nodeType":"StructuredDocumentation","src":"3754:210:12","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3098,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:12","nodeType":"FunctionDefinition","parameters":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"a","nameLocation":"3994:1:12","nodeType":"VariableDeclaration","scope":3098,"src":"3986:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"b","nameLocation":"4005:1:12","nodeType":"VariableDeclaration","scope":3098,"src":"3997:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3061,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:12"},"returnParameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3098,"src":"4031:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:12"},"scope":4405,"src":"3969:704:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3234,"nodeType":"Block","src":"5094:4128:12","statements":[{"id":3233,"nodeType":"UncheckedBlock","src":"5104:4112:12","statements":[{"assignments":[3111],"declarations":[{"constant":false,"id":3111,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:12","nodeType":"VariableDeclaration","scope":3233,"src":"5433:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3115,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3112,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"5449:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3113,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"5453:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:12"},{"assignments":[3117],"declarations":[{"constant":false,"id":3117,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:12","nodeType":"VariableDeclaration","scope":3233,"src":"5513:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3116,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3118,"nodeType":"VariableDeclarationStatement","src":"5513:13:12"},{"AST":{"nodeType":"YulBlock","src":"5593:122:12","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:12"},"nodeType":"YulFunctionCall","src":"5634:6:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:12"},"nodeType":"YulFunctionCall","src":"5621:20:12"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:12","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:12","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:12"},"nodeType":"YulFunctionCall","src":"5671:14:12"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:12"},"nodeType":"YulFunctionCall","src":"5687:13:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:12"},"nodeType":"YulFunctionCall","src":"5667:34:12"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3111,"isOffset":false,"isSlot":false,"src":"5679:5:12","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"5694:5:12","valueSize":1},{"declaration":3117,"isOffset":false,"isSlot":false,"src":"5658:5:12","valueSize":1},{"declaration":3101,"isOffset":false,"isSlot":false,"src":"5628:1:12","valueSize":1},{"declaration":3103,"isOffset":false,"isSlot":false,"src":"5631:1:12","valueSize":1}],"id":3119,"nodeType":"InlineAssembly","src":"5584:131:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3120,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"5796:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3128,"nodeType":"IfStatement","src":"5792:368:12","trueBody":{"id":3127,"nodeType":"Block","src":"5808:352:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3123,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"6126:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3124,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"6134:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3109,"id":3126,"nodeType":"Return","src":"6119:26:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3129,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"6270:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3130,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"6285:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3147,"nodeType":"IfStatement","src":"6266:143:12","trueBody":{"id":3146,"nodeType":"Block","src":"6292:117:12","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3136,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"6330:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3139,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"6348:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"6348:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3141,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"6372:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:12","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1526,"src":"6372:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3135,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"6322:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3132,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"6310:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"6310:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3145,"nodeType":"ExpressionStatement","src":"6310:84:12"}]}},{"assignments":[3149],"declarations":[{"constant":false,"id":3149,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:12","nodeType":"VariableDeclaration","scope":3233,"src":"6664:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3148,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3150,"nodeType":"VariableDeclarationStatement","src":"6664:17:12"},{"AST":{"nodeType":"YulBlock","src":"6704:291:12","statements":[{"nodeType":"YulAssignment","src":"6773:38:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:12"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:12"},"nodeType":"YulFunctionCall","src":"6786:25:12"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:12"}]},{"nodeType":"YulAssignment","src":"6893:41:12","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:12"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:12"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:12"},"nodeType":"YulFunctionCall","src":"6913:20:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:12"},"nodeType":"YulFunctionCall","src":"6902:32:12"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:12"}]},{"nodeType":"YulAssignment","src":"6951:30:12","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:12"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:12"},"nodeType":"YulFunctionCall","src":"6960:21:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3105,"isOffset":false,"isSlot":false,"src":"6799:11:12","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"6927:5:12","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"6951:5:12","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"6964:5:12","valueSize":1},{"declaration":3117,"isOffset":false,"isSlot":false,"src":"6893:5:12","valueSize":1},{"declaration":3117,"isOffset":false,"isSlot":false,"src":"6906:5:12","valueSize":1},{"declaration":3149,"isOffset":false,"isSlot":false,"src":"6773:9:12","valueSize":1},{"declaration":3149,"isOffset":false,"isSlot":false,"src":"6916:9:12","valueSize":1},{"declaration":3149,"isOffset":false,"isSlot":false,"src":"6971:9:12","valueSize":1},{"declaration":3101,"isOffset":false,"isSlot":false,"src":"6793:1:12","valueSize":1},{"declaration":3103,"isOffset":false,"isSlot":false,"src":"6796:1:12","valueSize":1}],"id":3151,"nodeType":"InlineAssembly","src":"6695:300:12"},{"assignments":[3153],"declarations":[{"constant":false,"id":3153,"mutability":"mutable","name":"twos","nameLocation":"7207:4:12","nodeType":"VariableDeclaration","scope":3233,"src":"7199:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3160,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"7214:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3156,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"7233:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:12"},{"AST":{"nodeType":"YulBlock","src":"7268:366:12","statements":[{"nodeType":"YulAssignment","src":"7333:37:12","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:12"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:12"},"nodeType":"YulFunctionCall","src":"7348:22:12"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:12"}]},{"nodeType":"YulAssignment","src":"7437:25:12","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:12"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:12"},"nodeType":"YulFunctionCall","src":"7446:16:12"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:12"}]},{"nodeType":"YulAssignment","src":"7581:39:12","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:12","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:12"},"nodeType":"YulFunctionCall","src":"7597:12:12"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:12"},"nodeType":"YulFunctionCall","src":"7593:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:12"},"nodeType":"YulFunctionCall","src":"7589:31:12"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3105,"isOffset":false,"isSlot":false,"src":"7333:11:12","valueSize":1},{"declaration":3105,"isOffset":false,"isSlot":false,"src":"7352:11:12","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"7437:5:12","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"7450:5:12","valueSize":1},{"declaration":3153,"isOffset":false,"isSlot":false,"src":"7365:4:12","valueSize":1},{"declaration":3153,"isOffset":false,"isSlot":false,"src":"7457:4:12","valueSize":1},{"declaration":3153,"isOffset":false,"isSlot":false,"src":"7581:4:12","valueSize":1},{"declaration":3153,"isOffset":false,"isSlot":false,"src":"7604:4:12","valueSize":1},{"declaration":3153,"isOffset":false,"isSlot":false,"src":"7611:4:12","valueSize":1}],"id":3161,"nodeType":"InlineAssembly","src":"7259:375:12"},{"expression":{"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3162,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"7700:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3163,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"7709:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3164,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"7717:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3167,"nodeType":"ExpressionStatement","src":"7700:21:12"},{"assignments":[3169],"declarations":[{"constant":false,"id":3169,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:12","nodeType":"VariableDeclaration","scope":3233,"src":"8056:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3176,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3171,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"8079:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:12"},{"expression":{"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3177,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"8312:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3179,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"8327:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3180,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"8341:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3184,"nodeType":"ExpressionStatement","src":"8312:36:12"},{"expression":{"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3185,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"8382:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3187,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"8397:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3188,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"8411:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3192,"nodeType":"ExpressionStatement","src":"8382:36:12"},{"expression":{"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3193,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"8454:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3195,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"8469:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3196,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"8483:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3200,"nodeType":"ExpressionStatement","src":"8454:36:12"},{"expression":{"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3201,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"8525:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3203,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"8540:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3204,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"8554:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3208,"nodeType":"ExpressionStatement","src":"8525:36:12"},{"expression":{"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3209,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"8598:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3211,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"8613:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3212,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"8627:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3216,"nodeType":"ExpressionStatement","src":"8598:36:12"},{"expression":{"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3217,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"8672:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3219,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"8687:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3220,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"8701:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3224,"nodeType":"ExpressionStatement","src":"8672:36:12"},{"expression":{"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3225,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"9154:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3226,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"9163:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3227,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"9171:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3230,"nodeType":"ExpressionStatement","src":"9154:24:12"},{"expression":{"id":3231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"9199:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3109,"id":3232,"nodeType":"Return","src":"9192:13:12"}]}]},"documentation":{"id":3099,"nodeType":"StructuredDocumentation","src":"4679:312:12","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3235,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:12","nodeType":"FunctionDefinition","parameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"x","nameLocation":"5020:1:12","nodeType":"VariableDeclaration","scope":3235,"src":"5012:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3103,"mutability":"mutable","name":"y","nameLocation":"5031:1:12","nodeType":"VariableDeclaration","scope":3235,"src":"5023:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:12","nodeType":"VariableDeclaration","scope":3235,"src":"5034:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:12"},"returnParameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"result","nameLocation":"5086:6:12","nodeType":"VariableDeclaration","scope":3235,"src":"5078:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3107,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:12"},"scope":4405,"src":"4996:4226:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3271,"nodeType":"Block","src":"9461:128:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3251,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"9485:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3252,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"9488:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3253,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"9491:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3250,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3235,3272],"referencedDeclaration":3235,"src":"9478:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3258,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"9539:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}],"id":3257,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"9522:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2811_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3261,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"9559:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3262,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"9562:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3263,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"9565:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3260,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3255,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"9506:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"9506:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3249,"id":3270,"nodeType":"Return","src":"9471:111:12"}]},"documentation":{"id":3236,"nodeType":"StructuredDocumentation","src":"9228:118:12","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3272,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:12","nodeType":"FunctionDefinition","parameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"x","nameLocation":"9375:1:12","nodeType":"VariableDeclaration","scope":3272,"src":"9367:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3240,"mutability":"mutable","name":"y","nameLocation":"9386:1:12","nodeType":"VariableDeclaration","scope":3272,"src":"9378:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3239,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3242,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:12","nodeType":"VariableDeclaration","scope":3272,"src":"9389:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3241,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3245,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:12","nodeType":"VariableDeclaration","scope":3272,"src":"9410:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"},"typeName":{"id":3244,"nodeType":"UserDefinedTypeName","pathNode":{"id":3243,"name":"Rounding","nameLocations":["9410:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2811,"src":"9410:8:12"},"referencedDeclaration":2811,"src":"9410:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:12"},"returnParameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3272,"src":"9452:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:12"},"scope":4405,"src":"9351:238:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3368,"nodeType":"Block","src":"10223:1849:12","statements":[{"id":3367,"nodeType":"UncheckedBlock","src":"10233:1833:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3282,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10261:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3287,"nodeType":"IfStatement","src":"10257:20:12","trueBody":{"expression":{"hexValue":"30","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3281,"id":3286,"nodeType":"Return","src":"10269:8:12"}},{"assignments":[3289],"declarations":[{"constant":false,"id":3289,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:12","nodeType":"VariableDeclaration","scope":3367,"src":"10748:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3293,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"10768:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3291,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10772:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:12"},{"assignments":[3295],"declarations":[{"constant":false,"id":3295,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:12","nodeType":"VariableDeclaration","scope":3367,"src":"10787:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3297,"initialValue":{"id":3296,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10801:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:12"},{"assignments":[3299],"declarations":[{"constant":false,"id":3299,"mutability":"mutable","name":"x","nameLocation":"10945:1:12","nodeType":"VariableDeclaration","scope":3367,"src":"10938:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3298,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3301,"initialValue":{"hexValue":"30","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:12"},{"assignments":[3303],"declarations":[{"constant":false,"id":3303,"mutability":"mutable","name":"y","nameLocation":"10971:1:12","nodeType":"VariableDeclaration","scope":3367,"src":"10964:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3302,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3305,"initialValue":{"hexValue":"31","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:12"},{"body":{"id":3342,"nodeType":"Block","src":"11014:882:12","statements":[{"assignments":[3310],"declarations":[{"constant":false,"id":3310,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:12","nodeType":"VariableDeclaration","scope":3342,"src":"11032:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3314,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"11051:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3312,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"11057:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:12"},{"expression":{"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3315,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"11086:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3316,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"11091:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3317,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3318,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"11191:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3319,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"11436:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3320,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"11442:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3321,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"11454:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3326,"nodeType":"ExpressionStatement","src":"11085:395:12"},{"expression":{"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3327,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"11500:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3328,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"11503:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3329,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3330,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"11585:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"11839:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"11843:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3335,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"11854:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3333,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:12","typeDescriptions":{}}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3341,"nodeType":"ExpressionStatement","src":"11499:382:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3306,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"10998:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3343,"nodeType":"WhileStatement","src":"10991:905:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"11914:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3349,"nodeType":"IfStatement","src":"11910:22:12","trueBody":{"expression":{"hexValue":"30","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3281,"id":3348,"nodeType":"Return","src":"11924:8:12"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3351,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"11983:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"11990:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:12","subExpression":{"id":3357,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"12003:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:12","typeDescriptions":{}}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3363,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"12015:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3361,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:12","typeDescriptions":{}}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3350,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"11975:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3281,"id":3366,"nodeType":"Return","src":"11968:50:12"}]}]},"documentation":{"id":3273,"nodeType":"StructuredDocumentation","src":"9595:553:12","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3369,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:12","nodeType":"FunctionDefinition","parameters":{"id":3278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"a","nameLocation":"10177:1:12","nodeType":"VariableDeclaration","scope":3369,"src":"10169:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3274,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3277,"mutability":"mutable","name":"n","nameLocation":"10188:1:12","nodeType":"VariableDeclaration","scope":3369,"src":"10180:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:12"},"returnParameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3369,"src":"10214:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:12"},"scope":4405,"src":"10153:1919:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3389,"nodeType":"Block","src":"12672:82:12","statements":[{"id":3388,"nodeType":"UncheckedBlock","src":"12682:66:12","statements":[{"expression":{"arguments":[{"id":3381,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"12725:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3382,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"12728:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3385,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"12735:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3379,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"12713:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4405_$","typeString":"type(library Math)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:12","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3426,"src":"12713:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3378,"id":3387,"nodeType":"Return","src":"12706:31:12"}]}]},"documentation":{"id":3370,"nodeType":"StructuredDocumentation","src":"12078:514:12","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3390,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:12","nodeType":"FunctionDefinition","parameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"a","nameLocation":"12626:1:12","nodeType":"VariableDeclaration","scope":3390,"src":"12618:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3374,"mutability":"mutable","name":"p","nameLocation":"12637:1:12","nodeType":"VariableDeclaration","scope":3390,"src":"12629:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:12"},"returnParameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3390,"src":"12663:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:12"},"scope":4405,"src":"12597:157:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3425,"nodeType":"Block","src":"13524:174:12","statements":[{"assignments":[3403,3405],"declarations":[{"constant":false,"id":3403,"mutability":"mutable","name":"success","nameLocation":"13540:7:12","nodeType":"VariableDeclaration","scope":3425,"src":"13535:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3402,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3405,"mutability":"mutable","name":"result","nameLocation":"13557:6:12","nodeType":"VariableDeclaration","scope":3425,"src":"13549:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3411,"initialValue":{"arguments":[{"id":3407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"13577:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3408,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"13580:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3409,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"13583:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3406,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3450,3532],"referencedDeclaration":3450,"src":"13567:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:12"},{"condition":{"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:12","subExpression":{"id":3412,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"13600:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3422,"nodeType":"IfStatement","src":"13595:74:12","trueBody":{"id":3421,"nodeType":"Block","src":"13609:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":3417,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"13635:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"13635:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3414,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"13623:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"13623:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3420,"nodeType":"ExpressionStatement","src":"13623:35:12"}]}},{"expression":{"id":3423,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"13685:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3401,"id":3424,"nodeType":"Return","src":"13678:13:12"}]},"documentation":{"id":3391,"nodeType":"StructuredDocumentation","src":"12760:678:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3426,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:12","nodeType":"FunctionDefinition","parameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"b","nameLocation":"13467:1:12","nodeType":"VariableDeclaration","scope":3426,"src":"13459:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3395,"mutability":"mutable","name":"e","nameLocation":"13478:1:12","nodeType":"VariableDeclaration","scope":3426,"src":"13470:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3397,"mutability":"mutable","name":"m","nameLocation":"13489:1:12","nodeType":"VariableDeclaration","scope":3426,"src":"13481:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:12"},"returnParameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3426,"src":"13515:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:12"},"scope":4405,"src":"13443:255:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3449,"nodeType":"Block","src":"14552:1493:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3440,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"14566:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3447,"nodeType":"IfStatement","src":"14562:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3439,"id":3446,"nodeType":"Return","src":"14574:17:12"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:12","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:12"},"nodeType":"YulFunctionCall","src":"14651:11:12"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:12","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:12"},"nodeType":"YulFunctionCall","src":"15563:17:12"},"nodeType":"YulExpressionStatement","src":"15563:17:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:12"},"nodeType":"YulFunctionCall","src":"15600:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:12"},"nodeType":"YulFunctionCall","src":"15593:28:12"},"nodeType":"YulExpressionStatement","src":"15593:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:12"},"nodeType":"YulFunctionCall","src":"15641:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:12"},"nodeType":"YulFunctionCall","src":"15634:28:12"},"nodeType":"YulExpressionStatement","src":"15634:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:12"},"nodeType":"YulFunctionCall","src":"15682:14:12"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:12"},"nodeType":"YulFunctionCall","src":"15675:25:12"},"nodeType":"YulExpressionStatement","src":"15675:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:12","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:12"},"nodeType":"YulFunctionCall","src":"15720:14:12"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:12"},"nodeType":"YulFunctionCall","src":"15713:25:12"},"nodeType":"YulExpressionStatement","src":"15713:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:12","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:12"},"nodeType":"YulFunctionCall","src":"15758:14:12"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:12"},"nodeType":"YulFunctionCall","src":"15751:25:12"},"nodeType":"YulExpressionStatement","src":"15751:25:12"},{"nodeType":"YulAssignment","src":"15938:57:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:12"},"nodeType":"YulFunctionCall","src":"15960:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:12","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:12","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:12","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:12","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:12"},"nodeType":"YulFunctionCall","src":"15949:46:12"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:12"}]},{"nodeType":"YulAssignment","src":"16008:21:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:12","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:12"},"nodeType":"YulFunctionCall","src":"16018:11:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3429,"isOffset":false,"isSlot":false,"src":"15698:1:12","valueSize":1},{"declaration":3431,"isOffset":false,"isSlot":false,"src":"15736:1:12","valueSize":1},{"declaration":3433,"isOffset":false,"isSlot":false,"src":"15774:1:12","valueSize":1},{"declaration":3438,"isOffset":false,"isSlot":false,"src":"16008:6:12","valueSize":1},{"declaration":3436,"isOffset":false,"isSlot":false,"src":"15938:7:12","valueSize":1}],"flags":["memory-safe"],"id":3448,"nodeType":"InlineAssembly","src":"14601:1438:12"}]},"documentation":{"id":3427,"nodeType":"StructuredDocumentation","src":"13704:738:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3450,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:12","nodeType":"FunctionDefinition","parameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"b","nameLocation":"14474:1:12","nodeType":"VariableDeclaration","scope":3450,"src":"14466:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3428,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3431,"mutability":"mutable","name":"e","nameLocation":"14485:1:12","nodeType":"VariableDeclaration","scope":3450,"src":"14477:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3433,"mutability":"mutable","name":"m","nameLocation":"14496:1:12","nodeType":"VariableDeclaration","scope":3450,"src":"14488:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:12"},"returnParameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"success","nameLocation":"14527:7:12","nodeType":"VariableDeclaration","scope":3450,"src":"14522:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3435,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3438,"mutability":"mutable","name":"result","nameLocation":"14544:6:12","nodeType":"VariableDeclaration","scope":3450,"src":"14536:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:12"},"scope":4405,"src":"14447:1598:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3485,"nodeType":"Block","src":"16242:179:12","statements":[{"assignments":[3463,3465],"declarations":[{"constant":false,"id":3463,"mutability":"mutable","name":"success","nameLocation":"16258:7:12","nodeType":"VariableDeclaration","scope":3485,"src":"16253:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3462,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3465,"mutability":"mutable","name":"result","nameLocation":"16280:6:12","nodeType":"VariableDeclaration","scope":3485,"src":"16267:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3464,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3471,"initialValue":{"arguments":[{"id":3467,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"16300:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3468,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"16303:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3469,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"16306:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3466,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3450,3532],"referencedDeclaration":3532,"src":"16290:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:12"},{"condition":{"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:12","subExpression":{"id":3472,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"16323:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3482,"nodeType":"IfStatement","src":"16318:74:12","trueBody":{"id":3481,"nodeType":"Block","src":"16332:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":3477,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"16358:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"16358:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3474,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"16346:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"16346:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3480,"nodeType":"ExpressionStatement","src":"16346:35:12"}]}},{"expression":{"id":3483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"16408:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3461,"id":3484,"nodeType":"Return","src":"16401:13:12"}]},"documentation":{"id":3451,"nodeType":"StructuredDocumentation","src":"16051:85:12","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3486,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:12","nodeType":"FunctionDefinition","parameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"b","nameLocation":"16170:1:12","nodeType":"VariableDeclaration","scope":3486,"src":"16157:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3452,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3455,"mutability":"mutable","name":"e","nameLocation":"16186:1:12","nodeType":"VariableDeclaration","scope":3486,"src":"16173:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3454,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3457,"mutability":"mutable","name":"m","nameLocation":"16202:1:12","nodeType":"VariableDeclaration","scope":3486,"src":"16189:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3456,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:12"},"returnParameters":{"id":3461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3486,"src":"16228:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3459,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:12"},"scope":4405,"src":"16141:280:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3531,"nodeType":"Block","src":"16675:771:12","statements":[{"condition":{"arguments":[{"id":3501,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"16700:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3500,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"16689:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3510,"nodeType":"IfStatement","src":"16685:47:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3504,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3499,"id":3509,"nodeType":"Return","src":"16704:28:12"}},{"assignments":[3512],"declarations":[{"constant":false,"id":3512,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:12","nodeType":"VariableDeclaration","scope":3531,"src":"16743:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3515,"initialValue":{"expression":{"id":3513,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"16758:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:12","memberName":"length","nodeType":"MemberAccess","src":"16758:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:12"},{"expression":{"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3516,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"16848:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3519,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"16874:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:12","memberName":"length","nodeType":"MemberAccess","src":"16874:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3521,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"16884:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:12","memberName":"length","nodeType":"MemberAccess","src":"16884:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3523,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"16894:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3524,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"16900:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3525,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"16903:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3526,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"16906:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3517,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3529,"nodeType":"ExpressionStatement","src":"16848:60:12"},{"AST":{"nodeType":"YulBlock","src":"16944:496:12","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:12","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:12"},"nodeType":"YulFunctionCall","src":"16973:17:12"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:12","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:12"},"nodeType":"YulFunctionCall","src":"17102:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:12","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:12"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:12"},"nodeType":"YulFunctionCall","src":"17124:13:12"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:12"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:12"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:12"},"nodeType":"YulFunctionCall","src":"17091:62:12"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:12"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:12"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:12"},"nodeType":"YulFunctionCall","src":"17302:20:12"},"nodeType":"YulExpressionStatement","src":"17302:20:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:12","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:12"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:12"},"nodeType":"YulFunctionCall","src":"17411:18:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:12"},"nodeType":"YulFunctionCall","src":"17398:32:12"},"nodeType":"YulExpressionStatement","src":"17398:32:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3512,"isOffset":false,"isSlot":false,"src":"17148:4:12","valueSize":1},{"declaration":3512,"isOffset":false,"isSlot":false,"src":"17317:4:12","valueSize":1},{"declaration":3512,"isOffset":false,"isSlot":false,"src":"17424:4:12","valueSize":1},{"declaration":3498,"isOffset":false,"isSlot":false,"src":"16977:6:12","valueSize":1},{"declaration":3498,"isOffset":false,"isSlot":false,"src":"17130:6:12","valueSize":1},{"declaration":3498,"isOffset":false,"isSlot":false,"src":"17309:6:12","valueSize":1},{"declaration":3496,"isOffset":false,"isSlot":false,"src":"17080:7:12","valueSize":1}],"flags":["memory-safe"],"id":3530,"nodeType":"InlineAssembly","src":"16919:521:12"}]},"documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"16427:88:12","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3532,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:12","nodeType":"FunctionDefinition","parameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"b","nameLocation":"16561:1:12","nodeType":"VariableDeclaration","scope":3532,"src":"16548:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3488,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"e","nameLocation":"16585:1:12","nodeType":"VariableDeclaration","scope":3532,"src":"16572:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3490,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3493,"mutability":"mutable","name":"m","nameLocation":"16609:1:12","nodeType":"VariableDeclaration","scope":3532,"src":"16596:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3492,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:12"},"returnParameters":{"id":3499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"success","nameLocation":"16645:7:12","nodeType":"VariableDeclaration","scope":3532,"src":"16640:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3495,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3498,"mutability":"mutable","name":"result","nameLocation":"16667:6:12","nodeType":"VariableDeclaration","scope":3532,"src":"16654:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3497,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:12"},"scope":4405,"src":"16520:926:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3564,"nodeType":"Block","src":"17601:176:12","statements":[{"body":{"id":3560,"nodeType":"Block","src":"17658:92:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3551,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"17676:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3553,"indexExpression":{"id":3552,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"17686:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3559,"nodeType":"IfStatement","src":"17672:68:12","trueBody":{"id":3558,"nodeType":"Block","src":"17695:45:12","statements":[{"expression":{"hexValue":"66616c7365","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3539,"id":3557,"nodeType":"Return","src":"17713:12:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"17631:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3545,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"17635:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:12","memberName":"length","nodeType":"MemberAccess","src":"17635:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3561,"initializationExpression":{"assignments":[3541],"declarations":[{"constant":false,"id":3541,"mutability":"mutable","name":"i","nameLocation":"17624:1:12","nodeType":"VariableDeclaration","scope":3561,"src":"17616:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3543,"initialValue":{"hexValue":"30","id":3542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:12"},"loopExpression":{"expression":{"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:12","subExpression":{"id":3548,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"17655:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3550,"nodeType":"ExpressionStatement","src":"17653:3:12"},"nodeType":"ForStatement","src":"17611:139:12"},{"expression":{"hexValue":"74727565","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3539,"id":3563,"nodeType":"Return","src":"17759:11:12"}]},"documentation":{"id":3533,"nodeType":"StructuredDocumentation","src":"17452:72:12","text":" @dev Returns whether the provided byte array is zero."},"id":3565,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:12","nodeType":"FunctionDefinition","parameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:12","nodeType":"VariableDeclaration","scope":3565,"src":"17549:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3534,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:12"},"returnParameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3565,"src":"17595:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3537,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:12"},"scope":4405,"src":"17529:248:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3783,"nodeType":"Block","src":"18137:5124:12","statements":[{"id":3782,"nodeType":"UncheckedBlock","src":"18147:5108:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"18241:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3579,"nodeType":"IfStatement","src":"18237:53:12","trueBody":{"id":3578,"nodeType":"Block","src":"18249:41:12","statements":[{"expression":{"id":3576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"18274:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3572,"id":3577,"nodeType":"Return","src":"18267:8:12"}]}},{"assignments":[3581],"declarations":[{"constant":false,"id":3581,"mutability":"mutable","name":"aa","nameLocation":"19225:2:12","nodeType":"VariableDeclaration","scope":3782,"src":"19217:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3583,"initialValue":{"id":3582,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"19230:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:12"},{"assignments":[3585],"declarations":[{"constant":false,"id":3585,"mutability":"mutable","name":"xn","nameLocation":"19253:2:12","nodeType":"VariableDeclaration","scope":3782,"src":"19245:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3587,"initialValue":{"hexValue":"31","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"19278:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3603,"nodeType":"IfStatement","src":"19274:92:12","trueBody":{"id":3602,"nodeType":"Block","src":"19296:70:12","statements":[{"expression":{"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3594,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"19314:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3597,"nodeType":"ExpressionStatement","src":"19314:10:12"},{"expression":{"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3598,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"19342:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3601,"nodeType":"ExpressionStatement","src":"19342:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3604,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"19383:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3619,"nodeType":"IfStatement","src":"19379:90:12","trueBody":{"id":3618,"nodeType":"Block","src":"19400:69:12","statements":[{"expression":{"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3610,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"19418:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3613,"nodeType":"ExpressionStatement","src":"19418:9:12"},{"expression":{"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3614,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"19445:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3617,"nodeType":"ExpressionStatement","src":"19445:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3620,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"19486:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3635,"nodeType":"IfStatement","src":"19482:90:12","trueBody":{"id":3634,"nodeType":"Block","src":"19503:69:12","statements":[{"expression":{"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3626,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"19521:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3629,"nodeType":"ExpressionStatement","src":"19521:9:12"},{"expression":{"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3630,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"19548:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3633,"nodeType":"ExpressionStatement","src":"19548:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3636,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"19589:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3651,"nodeType":"IfStatement","src":"19585:89:12","trueBody":{"id":3650,"nodeType":"Block","src":"19606:68:12","statements":[{"expression":{"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3642,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"19624:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3645,"nodeType":"ExpressionStatement","src":"19624:9:12"},{"expression":{"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3646,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"19651:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3649,"nodeType":"ExpressionStatement","src":"19651:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3652,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"19691:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3667,"nodeType":"IfStatement","src":"19687:87:12","trueBody":{"id":3666,"nodeType":"Block","src":"19707:67:12","statements":[{"expression":{"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3658,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"19725:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3661,"nodeType":"ExpressionStatement","src":"19725:8:12"},{"expression":{"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3662,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"19751:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3665,"nodeType":"ExpressionStatement","src":"19751:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3668,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"19791:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3683,"nodeType":"IfStatement","src":"19787:87:12","trueBody":{"id":3682,"nodeType":"Block","src":"19807:67:12","statements":[{"expression":{"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3674,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"19825:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3677,"nodeType":"ExpressionStatement","src":"19825:8:12"},{"expression":{"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3678,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"19851:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3681,"nodeType":"ExpressionStatement","src":"19851:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3684,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"19891:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3695,"nodeType":"IfStatement","src":"19887:61:12","trueBody":{"id":3694,"nodeType":"Block","src":"19907:41:12","statements":[{"expression":{"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3690,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"19925:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3693,"nodeType":"ExpressionStatement","src":"19925:8:12"}]}},{"expression":{"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3696,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"20368:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3698,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"20378:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3704,"nodeType":"ExpressionStatement","src":"20368:18:12"},{"expression":{"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3705,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22273:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3706,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22279:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3707,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"22284:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3708,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22288:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3711,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3715,"nodeType":"ExpressionStatement","src":"22273:23:12"},{"expression":{"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3716,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22382:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3717,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22388:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"22393:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3719,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22397:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3726,"nodeType":"ExpressionStatement","src":"22382:23:12"},{"expression":{"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3727,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22493:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3728,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22499:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3729,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"22504:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3730,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22508:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3737,"nodeType":"ExpressionStatement","src":"22493:23:12"},{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3738,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22602:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3739,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22608:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"22613:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3741,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22617:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3748,"nodeType":"ExpressionStatement","src":"22602:23:12"},{"expression":{"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3749,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22712:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3750,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22718:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3751,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"22723:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3752,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22727:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3759,"nodeType":"ExpressionStatement","src":"22712:23:12"},{"expression":{"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3760,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22822:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3761,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22828:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3762,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"22833:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3763,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"22837:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3766,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3770,"nodeType":"ExpressionStatement","src":"22822:23:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3771,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"23211:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3774,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"23232:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3775,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"23237:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3776,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"23241:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3772,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"23216:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"23216:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3572,"id":3781,"nodeType":"Return","src":"23204:40:12"}]}]},"documentation":{"id":3566,"nodeType":"StructuredDocumentation","src":"17783:292:12","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3784,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:12","nodeType":"FunctionDefinition","parameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"a","nameLocation":"18102:1:12","nodeType":"VariableDeclaration","scope":3784,"src":"18094:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:12"},"returnParameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3784,"src":"18128:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:12"},"scope":4405,"src":"18080:5181:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3817,"nodeType":"Block","src":"23434:171:12","statements":[{"id":3816,"nodeType":"UncheckedBlock","src":"23444:155:12","statements":[{"assignments":[3796],"declarations":[{"constant":false,"id":3796,"mutability":"mutable","name":"result","nameLocation":"23476:6:12","nodeType":"VariableDeclaration","scope":3816,"src":"23468:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3800,"initialValue":{"arguments":[{"id":3798,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"23490:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3797,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3784,3818],"referencedDeclaration":3784,"src":"23485:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3801,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"23513:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3805,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"23555:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}],"id":3804,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"23538:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2811_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"23568:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"23577:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"23586:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3802,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"23522:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"23522:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3794,"id":3815,"nodeType":"Return","src":"23506:82:12"}]}]},"documentation":{"id":3785,"nodeType":"StructuredDocumentation","src":"23267:86:12","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3818,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:12","nodeType":"FunctionDefinition","parameters":{"id":3791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"mutability":"mutable","name":"a","nameLocation":"23380:1:12","nodeType":"VariableDeclaration","scope":3818,"src":"23372:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:12","nodeType":"VariableDeclaration","scope":3818,"src":"23383:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"},"typeName":{"id":3789,"nodeType":"UserDefinedTypeName","pathNode":{"id":3788,"name":"Rounding","nameLocations":["23383:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2811,"src":"23383:8:12"},"referencedDeclaration":2811,"src":"23383:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:12"},"returnParameters":{"id":3794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3818,"src":"23425:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:12"},"scope":4405,"src":"23358:247:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4013,"nodeType":"Block","src":"23796:981:12","statements":[{"assignments":[3827],"declarations":[{"constant":false,"id":3827,"mutability":"mutable","name":"result","nameLocation":"23814:6:12","nodeType":"VariableDeclaration","scope":4013,"src":"23806:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3829,"initialValue":{"hexValue":"30","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:12"},{"assignments":[3831],"declarations":[{"constant":false,"id":3831,"mutability":"mutable","name":"exp","nameLocation":"23842:3:12","nodeType":"VariableDeclaration","scope":4013,"src":"23834:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3832,"nodeType":"VariableDeclarationStatement","src":"23834:11:12"},{"id":4010,"nodeType":"UncheckedBlock","src":"23855:893:12","statements":[{"expression":{"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3833,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"23879:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"23907:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3835,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"23891:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"23891:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3848,"nodeType":"ExpressionStatement","src":"23879:51:12"},{"expression":{"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"23944:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3850,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"23954:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3852,"nodeType":"ExpressionStatement","src":"23944:13:12"},{"expression":{"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"23971:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3854,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"23981:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3856,"nodeType":"ExpressionStatement","src":"23971:13:12"},{"expression":{"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3857,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"23999:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"24026:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3859,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"24010:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"24010:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3872,"nodeType":"ExpressionStatement","src":"23999:49:12"},{"expression":{"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"24062:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3874,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24072:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3876,"nodeType":"ExpressionStatement","src":"24062:13:12"},{"expression":{"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"24089:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3878,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24099:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3880,"nodeType":"ExpressionStatement","src":"24089:13:12"},{"expression":{"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3881,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24117:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"24144:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3883,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"24128:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"24128:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3896,"nodeType":"ExpressionStatement","src":"24117:49:12"},{"expression":{"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"24180:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3898,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24190:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3900,"nodeType":"ExpressionStatement","src":"24180:13:12"},{"expression":{"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"24207:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3902,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24217:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3904,"nodeType":"ExpressionStatement","src":"24207:13:12"},{"expression":{"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3905,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24235:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"24262:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":3915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3913,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3907,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"24246:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"24246:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3920,"nodeType":"ExpressionStatement","src":"24235:49:12"},{"expression":{"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"24298:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3922,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24308:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3924,"nodeType":"ExpressionStatement","src":"24298:13:12"},{"expression":{"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"24325:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3926,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24335:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3928,"nodeType":"ExpressionStatement","src":"24325:13:12"},{"expression":{"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3929,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24353:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"24379:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":3939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3931,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"24363:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"24363:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3944,"nodeType":"ExpressionStatement","src":"24353:47:12"},{"expression":{"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"24414:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3946,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24424:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3948,"nodeType":"ExpressionStatement","src":"24414:13:12"},{"expression":{"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"24441:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3950,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24451:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3952,"nodeType":"ExpressionStatement","src":"24441:13:12"},{"expression":{"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3953,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24469:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"24495:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":3963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3955,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"24479:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"24479:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3968,"nodeType":"ExpressionStatement","src":"24469:47:12"},{"expression":{"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"24530:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3970,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24540:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3972,"nodeType":"ExpressionStatement","src":"24530:13:12"},{"expression":{"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"24557:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3974,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24567:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3976,"nodeType":"ExpressionStatement","src":"24557:13:12"},{"expression":{"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3977,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24585:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"24611:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3985,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3979,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"24595:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"24595:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3992,"nodeType":"ExpressionStatement","src":"24585:47:12"},{"expression":{"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"24646:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3994,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24656:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3996,"nodeType":"ExpressionStatement","src":"24646:13:12"},{"expression":{"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3997,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"24673:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3998,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"24683:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4000,"nodeType":"ExpressionStatement","src":"24673:13:12"},{"expression":{"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"24701:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"24727:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4002,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"24711:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"24711:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4009,"nodeType":"ExpressionStatement","src":"24701:36:12"}]},{"expression":{"id":4011,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"24764:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3825,"id":4012,"nodeType":"Return","src":"24757:13:12"}]},"documentation":{"id":3819,"nodeType":"StructuredDocumentation","src":"23611:119:12","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4014,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:12","nodeType":"FunctionDefinition","parameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"value","nameLocation":"23757:5:12","nodeType":"VariableDeclaration","scope":4014,"src":"23749:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:12"},"returnParameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4014,"src":"23787:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3823,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:12"},"scope":4405,"src":"23735:1042:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4047,"nodeType":"Block","src":"25010:175:12","statements":[{"id":4046,"nodeType":"UncheckedBlock","src":"25020:159:12","statements":[{"assignments":[4026],"declarations":[{"constant":false,"id":4026,"mutability":"mutable","name":"result","nameLocation":"25052:6:12","nodeType":"VariableDeclaration","scope":4046,"src":"25044:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4025,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4030,"initialValue":{"arguments":[{"id":4028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"25066:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4027,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4014,4048],"referencedDeclaration":4014,"src":"25061:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"25093:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4035,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"25135:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}],"id":4034,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"25118:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2811_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"25153:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"25162:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4032,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"25102:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"25102:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4024,"id":4045,"nodeType":"Return","src":"25086:82:12"}]}]},"documentation":{"id":4015,"nodeType":"StructuredDocumentation","src":"24783:142:12","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4048,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:12","nodeType":"FunctionDefinition","parameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"value","nameLocation":"24952:5:12","nodeType":"VariableDeclaration","scope":4048,"src":"24944:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4016,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4020,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:12","nodeType":"VariableDeclaration","scope":4048,"src":"24959:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"},"typeName":{"id":4019,"nodeType":"UserDefinedTypeName","pathNode":{"id":4018,"name":"Rounding","nameLocations":["24959:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2811,"src":"24959:8:12"},"referencedDeclaration":2811,"src":"24959:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:12"},"returnParameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4048,"src":"25001:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4022,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:12"},"scope":4405,"src":"24930:255:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4176,"nodeType":"Block","src":"25378:854:12","statements":[{"assignments":[4057],"declarations":[{"constant":false,"id":4057,"mutability":"mutable","name":"result","nameLocation":"25396:6:12","nodeType":"VariableDeclaration","scope":4176,"src":"25388:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4059,"initialValue":{"hexValue":"30","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:12"},{"id":4173,"nodeType":"UncheckedBlock","src":"25416:787:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25444:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4076,"nodeType":"IfStatement","src":"25440:103:12","trueBody":{"id":4075,"nodeType":"Block","src":"25463:80:12","statements":[{"expression":{"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25481:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4070,"nodeType":"ExpressionStatement","src":"25481:17:12"},{"expression":{"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"25516:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4074,"nodeType":"ExpressionStatement","src":"25516:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25560:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4093,"nodeType":"IfStatement","src":"25556:103:12","trueBody":{"id":4092,"nodeType":"Block","src":"25579:80:12","statements":[{"expression":{"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25597:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4087,"nodeType":"ExpressionStatement","src":"25597:17:12"},{"expression":{"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4088,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"25632:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4091,"nodeType":"ExpressionStatement","src":"25632:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25676:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4110,"nodeType":"IfStatement","src":"25672:103:12","trueBody":{"id":4109,"nodeType":"Block","src":"25695:80:12","statements":[{"expression":{"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25713:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4104,"nodeType":"ExpressionStatement","src":"25713:17:12"},{"expression":{"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4105,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"25748:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4108,"nodeType":"ExpressionStatement","src":"25748:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25792:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4127,"nodeType":"IfStatement","src":"25788:100:12","trueBody":{"id":4126,"nodeType":"Block","src":"25810:78:12","statements":[{"expression":{"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25828:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4121,"nodeType":"ExpressionStatement","src":"25828:16:12"},{"expression":{"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"25862:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4125,"nodeType":"ExpressionStatement","src":"25862:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25905:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4144,"nodeType":"IfStatement","src":"25901:100:12","trueBody":{"id":4143,"nodeType":"Block","src":"25923:78:12","statements":[{"expression":{"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25941:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4138,"nodeType":"ExpressionStatement","src":"25941:16:12"},{"expression":{"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4139,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"25975:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4142,"nodeType":"ExpressionStatement","src":"25975:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"26018:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4161,"nodeType":"IfStatement","src":"26014:100:12","trueBody":{"id":4160,"nodeType":"Block","src":"26036:78:12","statements":[{"expression":{"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"26054:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4155,"nodeType":"ExpressionStatement","src":"26054:16:12"},{"expression":{"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"26088:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4159,"nodeType":"ExpressionStatement","src":"26088:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"26131:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4172,"nodeType":"IfStatement","src":"26127:66:12","trueBody":{"id":4171,"nodeType":"Block","src":"26149:44:12","statements":[{"expression":{"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"26167:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4170,"nodeType":"ExpressionStatement","src":"26167:11:12"}]}}]},{"expression":{"id":4174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"26219:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4055,"id":4175,"nodeType":"Return","src":"26212:13:12"}]},"documentation":{"id":4049,"nodeType":"StructuredDocumentation","src":"25191:120:12","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4177,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:12","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"value","nameLocation":"25339:5:12","nodeType":"VariableDeclaration","scope":4177,"src":"25331:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:12"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4177,"src":"25369:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:12"},"scope":4405,"src":"25316:916:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4210,"nodeType":"Block","src":"26467:177:12","statements":[{"id":4209,"nodeType":"UncheckedBlock","src":"26477:161:12","statements":[{"assignments":[4189],"declarations":[{"constant":false,"id":4189,"mutability":"mutable","name":"result","nameLocation":"26509:6:12","nodeType":"VariableDeclaration","scope":4209,"src":"26501:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4193,"initialValue":{"arguments":[{"id":4191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"26524:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4190,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4177,4211],"referencedDeclaration":4177,"src":"26518:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"26551:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4198,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"26593:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}],"id":4197,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"26576:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2811_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"26612:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"26621:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4195,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"26560:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"26560:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4187,"id":4208,"nodeType":"Return","src":"26544:83:12"}]}]},"documentation":{"id":4178,"nodeType":"StructuredDocumentation","src":"26238:143:12","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4211,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:12","nodeType":"FunctionDefinition","parameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"value","nameLocation":"26409:5:12","nodeType":"VariableDeclaration","scope":4211,"src":"26401:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4179,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4183,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:12","nodeType":"VariableDeclaration","scope":4211,"src":"26416:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"},"typeName":{"id":4182,"nodeType":"UserDefinedTypeName","pathNode":{"id":4181,"name":"Rounding","nameLocations":["26416:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2811,"src":"26416:8:12"},"referencedDeclaration":2811,"src":"26416:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:12"},"returnParameters":{"id":4187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4211,"src":"26458:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4185,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:12"},"scope":4405,"src":"26386:258:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4347,"nodeType":"Block","src":"26964:674:12","statements":[{"assignments":[4220],"declarations":[{"constant":false,"id":4220,"mutability":"mutable","name":"result","nameLocation":"26982:6:12","nodeType":"VariableDeclaration","scope":4347,"src":"26974:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4222,"initialValue":{"hexValue":"30","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:12"},{"assignments":[4224],"declarations":[{"constant":false,"id":4224,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:12","nodeType":"VariableDeclaration","scope":4347,"src":"27002:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4223,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4225,"nodeType":"VariableDeclarationStatement","src":"27002:12:12"},{"id":4344,"nodeType":"UncheckedBlock","src":"27024:585:12","statements":[{"expression":{"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4226,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27048:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"27071:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4227,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27055:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"27055:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4239,"nodeType":"ExpressionStatement","src":"27048:46:12"},{"expression":{"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"27108:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4241,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27118:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4245,"nodeType":"ExpressionStatement","src":"27108:20:12"},{"expression":{"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4246,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"27142:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4247,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27152:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4251,"nodeType":"ExpressionStatement","src":"27142:19:12"},{"expression":{"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4252,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27176:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"27199:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4253,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27183:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"27183:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4265,"nodeType":"ExpressionStatement","src":"27176:45:12"},{"expression":{"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"27235:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4267,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27245:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4271,"nodeType":"ExpressionStatement","src":"27235:19:12"},{"expression":{"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4272,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"27268:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4273,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27278:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4277,"nodeType":"ExpressionStatement","src":"27268:18:12"},{"expression":{"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4278,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27301:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"27324:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4279,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27308:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"27308:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4291,"nodeType":"ExpressionStatement","src":"27301:45:12"},{"expression":{"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"27360:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4293,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27370:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4297,"nodeType":"ExpressionStatement","src":"27360:19:12"},{"expression":{"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"27393:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4299,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27403:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4303,"nodeType":"ExpressionStatement","src":"27393:18:12"},{"expression":{"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4304,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27426:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"27449:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4305,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27433:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"27433:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4317,"nodeType":"ExpressionStatement","src":"27426:45:12"},{"expression":{"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"27485:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4319,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27495:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4323,"nodeType":"ExpressionStatement","src":"27485:19:12"},{"expression":{"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4324,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"27518:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4325,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"27528:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4329,"nodeType":"ExpressionStatement","src":"27518:18:12"},{"expression":{"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"27551:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"27577:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4331,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27561:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"27561:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4343,"nodeType":"ExpressionStatement","src":"27551:47:12"}]},{"expression":{"id":4345,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"27625:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4218,"id":4346,"nodeType":"Return","src":"27618:13:12"}]},"documentation":{"id":4212,"nodeType":"StructuredDocumentation","src":"26650:246:12","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4348,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:12","nodeType":"FunctionDefinition","parameters":{"id":4215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4214,"mutability":"mutable","name":"value","nameLocation":"26925:5:12","nodeType":"VariableDeclaration","scope":4348,"src":"26917:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4213,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:12"},"returnParameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4348,"src":"26955:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4216,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:12"},"scope":4405,"src":"26901:737:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4384,"nodeType":"Block","src":"27875:184:12","statements":[{"id":4383,"nodeType":"UncheckedBlock","src":"27885:168:12","statements":[{"assignments":[4360],"declarations":[{"constant":false,"id":4360,"mutability":"mutable","name":"result","nameLocation":"27917:6:12","nodeType":"VariableDeclaration","scope":4383,"src":"27909:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4364,"initialValue":{"arguments":[{"id":4362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"27933:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4361,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4348,4385],"referencedDeclaration":4348,"src":"27926:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"27960:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4369,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"28002:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}],"id":4368,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"27985:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2811_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"28021:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"28036:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4366,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"27969:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"27969:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4358,"id":4382,"nodeType":"Return","src":"27953:89:12"}]}]},"documentation":{"id":4349,"nodeType":"StructuredDocumentation","src":"27644:144:12","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4385,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:12","nodeType":"FunctionDefinition","parameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"value","nameLocation":"27817:5:12","nodeType":"VariableDeclaration","scope":4385,"src":"27809:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4354,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:12","nodeType":"VariableDeclaration","scope":4385,"src":"27824:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"},"typeName":{"id":4353,"nodeType":"UserDefinedTypeName","pathNode":{"id":4352,"name":"Rounding","nameLocations":["27824:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2811,"src":"27824:8:12"},"referencedDeclaration":2811,"src":"27824:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:12"},"returnParameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4385,"src":"27866:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:12"},"scope":4405,"src":"27793:266:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4403,"nodeType":"Block","src":"28257:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4396,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"28280:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}],"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4394,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:12","typeDescriptions":{}}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4393,"id":4402,"nodeType":"Return","src":"28267:31:12"}]},"documentation":{"id":4386,"nodeType":"StructuredDocumentation","src":"28065:113:12","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4404,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:12","nodeType":"FunctionDefinition","parameters":{"id":4390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4389,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:12","nodeType":"VariableDeclaration","scope":4404,"src":"28209:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"},"typeName":{"id":4388,"nodeType":"UserDefinedTypeName","pathNode":{"id":4387,"name":"Rounding","nameLocations":["28209:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2811,"src":"28209:8:12"},"referencedDeclaration":2811,"src":"28209:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2811","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:12"},"returnParameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4404,"src":"28251:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4391,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:12"},"scope":4405,"src":"28183:122:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4406,"src":"281:28026:12","usedErrors":[],"usedEvents":[]}],"src":"103:28205:12"},"id":12},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6170]},"id":6171,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4407,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4408,"nodeType":"StructuredDocumentation","src":"218:550:13","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6170,"linearizedBaseContracts":[6170],"name":"SafeCast","nameLocation":"777:8:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4409,"nodeType":"StructuredDocumentation","src":"792:68:13","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4415,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:13","nodeType":"ErrorDefinition","parameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4411,"mutability":"mutable","name":"bits","nameLocation":"908:4:13","nodeType":"VariableDeclaration","scope":4415,"src":"902:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4410,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4413,"mutability":"mutable","name":"value","nameLocation":"922:5:13","nodeType":"VariableDeclaration","scope":4415,"src":"914:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:13"},"src":"865:64:13"},{"documentation":{"id":4416,"nodeType":"StructuredDocumentation","src":"935:75:13","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4420,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:13","nodeType":"ErrorDefinition","parameters":{"id":4419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4418,"mutability":"mutable","name":"value","nameLocation":"1056:5:13","nodeType":"VariableDeclaration","scope":4420,"src":"1049:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4417,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:13"},"src":"1015:48:13"},{"documentation":{"id":4421,"nodeType":"StructuredDocumentation","src":"1069:67:13","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4427,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:13","nodeType":"ErrorDefinition","parameters":{"id":4426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"bits","nameLocation":"1183:4:13","nodeType":"VariableDeclaration","scope":4427,"src":"1177:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4422,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4425,"mutability":"mutable","name":"value","nameLocation":"1196:5:13","nodeType":"VariableDeclaration","scope":4427,"src":"1189:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4424,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:13"},"src":"1141:62:13"},{"documentation":{"id":4428,"nodeType":"StructuredDocumentation","src":"1209:75:13","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4432,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:13","nodeType":"ErrorDefinition","parameters":{"id":4431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4430,"mutability":"mutable","name":"value","nameLocation":"1331:5:13","nodeType":"VariableDeclaration","scope":4432,"src":"1323:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:13"},"src":"1289:49:13"},{"body":{"id":4459,"nodeType":"Block","src":"1695:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"1709:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4442,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4441,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:13","memberName":"max","nodeType":"MemberAccess","src":"1717:17:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4453,"nodeType":"IfStatement","src":"1705:105:13","trueBody":{"id":4452,"nodeType":"Block","src":"1736:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"1793:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4447,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"1757:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4451,"nodeType":"RevertStatement","src":"1750:49:13"}]}},{"expression":{"arguments":[{"id":4456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"1834:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4454,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:13","typeDescriptions":{}}},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4439,"id":4458,"nodeType":"Return","src":"1819:21:13"}]},"documentation":{"id":4433,"nodeType":"StructuredDocumentation","src":"1344:280:13","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4460,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:13","nodeType":"FunctionDefinition","parameters":{"id":4436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4435,"mutability":"mutable","name":"value","nameLocation":"1656:5:13","nodeType":"VariableDeclaration","scope":4460,"src":"1648:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:13"},"returnParameters":{"id":4439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4460,"src":"1686:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4437,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:13"},"scope":6170,"src":"1629:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4487,"nodeType":"Block","src":"2204:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"2218:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4470,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4469,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:13","memberName":"max","nodeType":"MemberAccess","src":"2226:17:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4481,"nodeType":"IfStatement","src":"2214:105:13","trueBody":{"id":4480,"nodeType":"Block","src":"2245:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"2302:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4475,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"2266:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4479,"nodeType":"RevertStatement","src":"2259:49:13"}]}},{"expression":{"arguments":[{"id":4484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"2343:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4482,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:13","typeDescriptions":{}}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4467,"id":4486,"nodeType":"Return","src":"2328:21:13"}]},"documentation":{"id":4461,"nodeType":"StructuredDocumentation","src":"1853:280:13","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4488,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:13","nodeType":"FunctionDefinition","parameters":{"id":4464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4463,"mutability":"mutable","name":"value","nameLocation":"2165:5:13","nodeType":"VariableDeclaration","scope":4488,"src":"2157:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:13"},"returnParameters":{"id":4467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4488,"src":"2195:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4465,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:13"},"scope":6170,"src":"2138:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4515,"nodeType":"Block","src":"2713:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"2727:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4498,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4497,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:13","memberName":"max","nodeType":"MemberAccess","src":"2735:17:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4509,"nodeType":"IfStatement","src":"2723:105:13","trueBody":{"id":4508,"nodeType":"Block","src":"2754:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"2811:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4503,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"2775:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4507,"nodeType":"RevertStatement","src":"2768:49:13"}]}},{"expression":{"arguments":[{"id":4512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"2852:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4510,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:13","typeDescriptions":{}}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4495,"id":4514,"nodeType":"Return","src":"2837:21:13"}]},"documentation":{"id":4489,"nodeType":"StructuredDocumentation","src":"2362:280:13","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4516,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:13","nodeType":"FunctionDefinition","parameters":{"id":4492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4491,"mutability":"mutable","name":"value","nameLocation":"2674:5:13","nodeType":"VariableDeclaration","scope":4516,"src":"2666:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:13"},"returnParameters":{"id":4495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4516,"src":"2704:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4493,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:13"},"scope":6170,"src":"2647:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4543,"nodeType":"Block","src":"3222:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"3236:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4526,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4525,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:13","memberName":"max","nodeType":"MemberAccess","src":"3244:17:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4537,"nodeType":"IfStatement","src":"3232:105:13","trueBody":{"id":4536,"nodeType":"Block","src":"3263:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"3320:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4531,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"3284:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4535,"nodeType":"RevertStatement","src":"3277:49:13"}]}},{"expression":{"arguments":[{"id":4540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"3361:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4538,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:13","typeDescriptions":{}}},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4523,"id":4542,"nodeType":"Return","src":"3346:21:13"}]},"documentation":{"id":4517,"nodeType":"StructuredDocumentation","src":"2871:280:13","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4544,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:13","nodeType":"FunctionDefinition","parameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"value","nameLocation":"3183:5:13","nodeType":"VariableDeclaration","scope":4544,"src":"3175:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4518,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:13"},"returnParameters":{"id":4523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4544,"src":"3213:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4521,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:13"},"scope":6170,"src":"3156:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4571,"nodeType":"Block","src":"3731:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"3745:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4554,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4553,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:13","memberName":"max","nodeType":"MemberAccess","src":"3753:17:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4565,"nodeType":"IfStatement","src":"3741:105:13","trueBody":{"id":4564,"nodeType":"Block","src":"3772:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"3829:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4559,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"3793:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4563,"nodeType":"RevertStatement","src":"3786:49:13"}]}},{"expression":{"arguments":[{"id":4568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"3870:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4566,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:13","typeDescriptions":{}}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4551,"id":4570,"nodeType":"Return","src":"3855:21:13"}]},"documentation":{"id":4545,"nodeType":"StructuredDocumentation","src":"3380:280:13","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4572,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:13","nodeType":"FunctionDefinition","parameters":{"id":4548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4547,"mutability":"mutable","name":"value","nameLocation":"3692:5:13","nodeType":"VariableDeclaration","scope":4572,"src":"3684:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:13"},"returnParameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4572,"src":"3722:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4549,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:13"},"scope":6170,"src":"3665:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4599,"nodeType":"Block","src":"4240:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"4254:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4582,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4581,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:13","memberName":"max","nodeType":"MemberAccess","src":"4262:17:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4593,"nodeType":"IfStatement","src":"4250:105:13","trueBody":{"id":4592,"nodeType":"Block","src":"4281:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"4338:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4587,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"4302:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4591,"nodeType":"RevertStatement","src":"4295:49:13"}]}},{"expression":{"arguments":[{"id":4596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"4379:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4594,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:13","typeDescriptions":{}}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4579,"id":4598,"nodeType":"Return","src":"4364:21:13"}]},"documentation":{"id":4573,"nodeType":"StructuredDocumentation","src":"3889:280:13","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4600,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:13","nodeType":"FunctionDefinition","parameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"value","nameLocation":"4201:5:13","nodeType":"VariableDeclaration","scope":4600,"src":"4193:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4574,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:13"},"returnParameters":{"id":4579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4600,"src":"4231:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4577,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:13"},"scope":6170,"src":"4174:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4627,"nodeType":"Block","src":"4749:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"4763:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4610,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4609,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:13","memberName":"max","nodeType":"MemberAccess","src":"4771:17:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4621,"nodeType":"IfStatement","src":"4759:105:13","trueBody":{"id":4620,"nodeType":"Block","src":"4790:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"4847:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4615,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"4811:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4619,"nodeType":"RevertStatement","src":"4804:49:13"}]}},{"expression":{"arguments":[{"id":4624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"4888:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4622,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:13","typeDescriptions":{}}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4607,"id":4626,"nodeType":"Return","src":"4873:21:13"}]},"documentation":{"id":4601,"nodeType":"StructuredDocumentation","src":"4398:280:13","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4628,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:13","nodeType":"FunctionDefinition","parameters":{"id":4604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4603,"mutability":"mutable","name":"value","nameLocation":"4710:5:13","nodeType":"VariableDeclaration","scope":4628,"src":"4702:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:13"},"returnParameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4628,"src":"4740:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4605,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:13"},"scope":6170,"src":"4683:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4655,"nodeType":"Block","src":"5258:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"5272:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4638,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4637,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:13","memberName":"max","nodeType":"MemberAccess","src":"5280:17:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4649,"nodeType":"IfStatement","src":"5268:105:13","trueBody":{"id":4648,"nodeType":"Block","src":"5299:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"5356:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4643,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"5320:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4647,"nodeType":"RevertStatement","src":"5313:49:13"}]}},{"expression":{"arguments":[{"id":4652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"5397:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4650,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:13","typeDescriptions":{}}},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4635,"id":4654,"nodeType":"Return","src":"5382:21:13"}]},"documentation":{"id":4629,"nodeType":"StructuredDocumentation","src":"4907:280:13","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4656,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:13","nodeType":"FunctionDefinition","parameters":{"id":4632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4631,"mutability":"mutable","name":"value","nameLocation":"5219:5:13","nodeType":"VariableDeclaration","scope":4656,"src":"5211:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:13"},"returnParameters":{"id":4635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4656,"src":"5249:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4633,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:13"},"scope":6170,"src":"5192:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4683,"nodeType":"Block","src":"5767:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"5781:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4666,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4665,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:13","memberName":"max","nodeType":"MemberAccess","src":"5789:17:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4677,"nodeType":"IfStatement","src":"5777:105:13","trueBody":{"id":4676,"nodeType":"Block","src":"5808:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"5865:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4671,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"5829:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4675,"nodeType":"RevertStatement","src":"5822:49:13"}]}},{"expression":{"arguments":[{"id":4680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"5906:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4678,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:13","typeDescriptions":{}}},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4663,"id":4682,"nodeType":"Return","src":"5891:21:13"}]},"documentation":{"id":4657,"nodeType":"StructuredDocumentation","src":"5416:280:13","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4684,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:13","nodeType":"FunctionDefinition","parameters":{"id":4660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4659,"mutability":"mutable","name":"value","nameLocation":"5728:5:13","nodeType":"VariableDeclaration","scope":4684,"src":"5720:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4658,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:13"},"returnParameters":{"id":4663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4684,"src":"5758:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4661,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:13"},"scope":6170,"src":"5701:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4711,"nodeType":"Block","src":"6276:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"6290:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4694,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4693,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:13","memberName":"max","nodeType":"MemberAccess","src":"6298:17:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4705,"nodeType":"IfStatement","src":"6286:105:13","trueBody":{"id":4704,"nodeType":"Block","src":"6317:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"6374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4699,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"6338:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4703,"nodeType":"RevertStatement","src":"6331:49:13"}]}},{"expression":{"arguments":[{"id":4708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"6415:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4706,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:13","typeDescriptions":{}}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4691,"id":4710,"nodeType":"Return","src":"6400:21:13"}]},"documentation":{"id":4685,"nodeType":"StructuredDocumentation","src":"5925:280:13","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4712,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:13","nodeType":"FunctionDefinition","parameters":{"id":4688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4687,"mutability":"mutable","name":"value","nameLocation":"6237:5:13","nodeType":"VariableDeclaration","scope":4712,"src":"6229:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:13"},"returnParameters":{"id":4691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4712,"src":"6267:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4689,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:13"},"scope":6170,"src":"6210:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4739,"nodeType":"Block","src":"6785:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"6799:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4722,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4721,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:13","memberName":"max","nodeType":"MemberAccess","src":"6807:17:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4733,"nodeType":"IfStatement","src":"6795:105:13","trueBody":{"id":4732,"nodeType":"Block","src":"6826:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"6883:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4727,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"6847:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4731,"nodeType":"RevertStatement","src":"6840:49:13"}]}},{"expression":{"arguments":[{"id":4736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"6924:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4734,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:13","typeDescriptions":{}}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4719,"id":4738,"nodeType":"Return","src":"6909:21:13"}]},"documentation":{"id":4713,"nodeType":"StructuredDocumentation","src":"6434:280:13","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4740,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:13","nodeType":"FunctionDefinition","parameters":{"id":4716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4715,"mutability":"mutable","name":"value","nameLocation":"6746:5:13","nodeType":"VariableDeclaration","scope":4740,"src":"6738:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4714,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:13"},"returnParameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4740,"src":"6776:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4717,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:13"},"scope":6170,"src":"6719:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4767,"nodeType":"Block","src":"7294:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"7308:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4750,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4749,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:13","memberName":"max","nodeType":"MemberAccess","src":"7316:17:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4761,"nodeType":"IfStatement","src":"7304:105:13","trueBody":{"id":4760,"nodeType":"Block","src":"7335:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"7392:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4755,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"7356:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4759,"nodeType":"RevertStatement","src":"7349:49:13"}]}},{"expression":{"arguments":[{"id":4764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"7433:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4762,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:13","typeDescriptions":{}}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4747,"id":4766,"nodeType":"Return","src":"7418:21:13"}]},"documentation":{"id":4741,"nodeType":"StructuredDocumentation","src":"6943:280:13","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4768,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:13","nodeType":"FunctionDefinition","parameters":{"id":4744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4743,"mutability":"mutable","name":"value","nameLocation":"7255:5:13","nodeType":"VariableDeclaration","scope":4768,"src":"7247:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4742,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:13"},"returnParameters":{"id":4747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4768,"src":"7285:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4745,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:13"},"scope":6170,"src":"7228:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4795,"nodeType":"Block","src":"7803:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"7817:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4778,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4777,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:13","memberName":"max","nodeType":"MemberAccess","src":"7825:17:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4789,"nodeType":"IfStatement","src":"7813:105:13","trueBody":{"id":4788,"nodeType":"Block","src":"7844:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"7901:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4783,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"7865:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4787,"nodeType":"RevertStatement","src":"7858:49:13"}]}},{"expression":{"arguments":[{"id":4792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"7942:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4790,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:13","typeDescriptions":{}}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4775,"id":4794,"nodeType":"Return","src":"7927:21:13"}]},"documentation":{"id":4769,"nodeType":"StructuredDocumentation","src":"7452:280:13","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4796,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:13","nodeType":"FunctionDefinition","parameters":{"id":4772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4771,"mutability":"mutable","name":"value","nameLocation":"7764:5:13","nodeType":"VariableDeclaration","scope":4796,"src":"7756:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:13"},"returnParameters":{"id":4775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4796,"src":"7794:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4773,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:13"},"scope":6170,"src":"7737:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4823,"nodeType":"Block","src":"8312:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"8326:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4806,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4805,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:13","memberName":"max","nodeType":"MemberAccess","src":"8334:17:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4817,"nodeType":"IfStatement","src":"8322:105:13","trueBody":{"id":4816,"nodeType":"Block","src":"8353:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"8410:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4811,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"8374:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4815,"nodeType":"RevertStatement","src":"8367:49:13"}]}},{"expression":{"arguments":[{"id":4820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"8451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4818,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:13","typeDescriptions":{}}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4803,"id":4822,"nodeType":"Return","src":"8436:21:13"}]},"documentation":{"id":4797,"nodeType":"StructuredDocumentation","src":"7961:280:13","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4824,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:13","nodeType":"FunctionDefinition","parameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4799,"mutability":"mutable","name":"value","nameLocation":"8273:5:13","nodeType":"VariableDeclaration","scope":4824,"src":"8265:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4798,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:13"},"returnParameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4824,"src":"8303:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4801,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:13"},"scope":6170,"src":"8246:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4851,"nodeType":"Block","src":"8821:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"8835:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4834,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4833,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:13","memberName":"max","nodeType":"MemberAccess","src":"8843:17:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4845,"nodeType":"IfStatement","src":"8831:105:13","trueBody":{"id":4844,"nodeType":"Block","src":"8862:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"8919:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4839,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"8883:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4843,"nodeType":"RevertStatement","src":"8876:49:13"}]}},{"expression":{"arguments":[{"id":4848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"8960:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4846,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:13","typeDescriptions":{}}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4831,"id":4850,"nodeType":"Return","src":"8945:21:13"}]},"documentation":{"id":4825,"nodeType":"StructuredDocumentation","src":"8470:280:13","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4852,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:13","nodeType":"FunctionDefinition","parameters":{"id":4828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4827,"mutability":"mutable","name":"value","nameLocation":"8782:5:13","nodeType":"VariableDeclaration","scope":4852,"src":"8774:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4826,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:13"},"returnParameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4852,"src":"8812:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4829,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:13"},"scope":6170,"src":"8755:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4879,"nodeType":"Block","src":"9330:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"9344:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4862,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4861,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:13","memberName":"max","nodeType":"MemberAccess","src":"9352:17:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4873,"nodeType":"IfStatement","src":"9340:105:13","trueBody":{"id":4872,"nodeType":"Block","src":"9371:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"9428:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4867,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"9392:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4871,"nodeType":"RevertStatement","src":"9385:49:13"}]}},{"expression":{"arguments":[{"id":4876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"9469:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4874,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:13","typeDescriptions":{}}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4859,"id":4878,"nodeType":"Return","src":"9454:21:13"}]},"documentation":{"id":4853,"nodeType":"StructuredDocumentation","src":"8979:280:13","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4880,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:13","nodeType":"FunctionDefinition","parameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"value","nameLocation":"9291:5:13","nodeType":"VariableDeclaration","scope":4880,"src":"9283:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4854,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:13"},"returnParameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4880,"src":"9321:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4857,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:13"},"scope":6170,"src":"9264:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4907,"nodeType":"Block","src":"9839:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"9853:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4890,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4889,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:13","memberName":"max","nodeType":"MemberAccess","src":"9861:17:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4901,"nodeType":"IfStatement","src":"9849:105:13","trueBody":{"id":4900,"nodeType":"Block","src":"9880:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"9937:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4895,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"9901:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4899,"nodeType":"RevertStatement","src":"9894:49:13"}]}},{"expression":{"arguments":[{"id":4904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"9978:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4902,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:13","typeDescriptions":{}}},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4887,"id":4906,"nodeType":"Return","src":"9963:21:13"}]},"documentation":{"id":4881,"nodeType":"StructuredDocumentation","src":"9488:280:13","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4908,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:13","nodeType":"FunctionDefinition","parameters":{"id":4884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"value","nameLocation":"9800:5:13","nodeType":"VariableDeclaration","scope":4908,"src":"9792:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4882,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:13"},"returnParameters":{"id":4887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4908,"src":"9830:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4885,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:13"},"scope":6170,"src":"9773:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4935,"nodeType":"Block","src":"10348:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"10362:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4918,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4917,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:13","memberName":"max","nodeType":"MemberAccess","src":"10370:17:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4929,"nodeType":"IfStatement","src":"10358:105:13","trueBody":{"id":4928,"nodeType":"Block","src":"10389:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"10446:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4923,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"10410:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4927,"nodeType":"RevertStatement","src":"10403:49:13"}]}},{"expression":{"arguments":[{"id":4932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"10487:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4930,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:13","typeDescriptions":{}}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4915,"id":4934,"nodeType":"Return","src":"10472:21:13"}]},"documentation":{"id":4909,"nodeType":"StructuredDocumentation","src":"9997:280:13","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4936,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:13","nodeType":"FunctionDefinition","parameters":{"id":4912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4911,"mutability":"mutable","name":"value","nameLocation":"10309:5:13","nodeType":"VariableDeclaration","scope":4936,"src":"10301:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4910,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:13"},"returnParameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4936,"src":"10339:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4913,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:13"},"scope":6170,"src":"10282:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4963,"nodeType":"Block","src":"10857:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"10871:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4946,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4945,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:13","memberName":"max","nodeType":"MemberAccess","src":"10879:17:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4957,"nodeType":"IfStatement","src":"10867:105:13","trueBody":{"id":4956,"nodeType":"Block","src":"10898:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"10955:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4951,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"10919:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4955,"nodeType":"RevertStatement","src":"10912:49:13"}]}},{"expression":{"arguments":[{"id":4960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"10996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4958,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:13","typeDescriptions":{}}},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4943,"id":4962,"nodeType":"Return","src":"10981:21:13"}]},"documentation":{"id":4937,"nodeType":"StructuredDocumentation","src":"10506:280:13","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4964,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:13","nodeType":"FunctionDefinition","parameters":{"id":4940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4939,"mutability":"mutable","name":"value","nameLocation":"10818:5:13","nodeType":"VariableDeclaration","scope":4964,"src":"10810:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4938,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:13"},"returnParameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4964,"src":"10848:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4941,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:13"},"scope":6170,"src":"10791:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4991,"nodeType":"Block","src":"11360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"11374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4974,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4973,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:13","memberName":"max","nodeType":"MemberAccess","src":"11382:16:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4985,"nodeType":"IfStatement","src":"11370:103:13","trueBody":{"id":4984,"nodeType":"Block","src":"11400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"11456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4979,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"11421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4983,"nodeType":"RevertStatement","src":"11414:48:13"}]}},{"expression":{"arguments":[{"id":4988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"11496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4986,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:13","typeDescriptions":{}}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4971,"id":4990,"nodeType":"Return","src":"11482:20:13"}]},"documentation":{"id":4965,"nodeType":"StructuredDocumentation","src":"11015:276:13","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4992,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:13","nodeType":"FunctionDefinition","parameters":{"id":4968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4967,"mutability":"mutable","name":"value","nameLocation":"11322:5:13","nodeType":"VariableDeclaration","scope":4992,"src":"11314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4966,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:13"},"returnParameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4992,"src":"11352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4969,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:13"},"scope":6170,"src":"11296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5019,"nodeType":"Block","src":"11860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"11874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5002,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5001,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:13","memberName":"max","nodeType":"MemberAccess","src":"11882:16:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5013,"nodeType":"IfStatement","src":"11870:103:13","trueBody":{"id":5012,"nodeType":"Block","src":"11900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"11956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5007,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"11921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5011,"nodeType":"RevertStatement","src":"11914:48:13"}]}},{"expression":{"arguments":[{"id":5016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"11996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5014,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:13","typeDescriptions":{}}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4999,"id":5018,"nodeType":"Return","src":"11982:20:13"}]},"documentation":{"id":4993,"nodeType":"StructuredDocumentation","src":"11515:276:13","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5020,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:13","nodeType":"FunctionDefinition","parameters":{"id":4996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"value","nameLocation":"11822:5:13","nodeType":"VariableDeclaration","scope":5020,"src":"11814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:13"},"returnParameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5020,"src":"11852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4997,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:13"},"scope":6170,"src":"11796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5047,"nodeType":"Block","src":"12360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"12374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5030,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5029,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:13","memberName":"max","nodeType":"MemberAccess","src":"12382:16:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5041,"nodeType":"IfStatement","src":"12370:103:13","trueBody":{"id":5040,"nodeType":"Block","src":"12400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"12456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5035,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"12421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5039,"nodeType":"RevertStatement","src":"12414:48:13"}]}},{"expression":{"arguments":[{"id":5044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"12496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5042,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:13","typeDescriptions":{}}},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5027,"id":5046,"nodeType":"Return","src":"12482:20:13"}]},"documentation":{"id":5021,"nodeType":"StructuredDocumentation","src":"12015:276:13","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5048,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"value","nameLocation":"12322:5:13","nodeType":"VariableDeclaration","scope":5048,"src":"12314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:13"},"returnParameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5048,"src":"12352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5025,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:13"},"scope":6170,"src":"12296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5075,"nodeType":"Block","src":"12860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"12874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5058,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5057,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:13","memberName":"max","nodeType":"MemberAccess","src":"12882:16:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5069,"nodeType":"IfStatement","src":"12870:103:13","trueBody":{"id":5068,"nodeType":"Block","src":"12900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"12956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5063,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"12921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5067,"nodeType":"RevertStatement","src":"12914:48:13"}]}},{"expression":{"arguments":[{"id":5072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"12996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5070,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:13","typeDescriptions":{}}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5055,"id":5074,"nodeType":"Return","src":"12982:20:13"}]},"documentation":{"id":5049,"nodeType":"StructuredDocumentation","src":"12515:276:13","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5076,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"value","nameLocation":"12822:5:13","nodeType":"VariableDeclaration","scope":5076,"src":"12814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5050,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:13"},"returnParameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5076,"src":"12852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5053,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:13"},"scope":6170,"src":"12796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5103,"nodeType":"Block","src":"13360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"13374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5086,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5085,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:13","memberName":"max","nodeType":"MemberAccess","src":"13382:16:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5097,"nodeType":"IfStatement","src":"13370:103:13","trueBody":{"id":5096,"nodeType":"Block","src":"13400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"13456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5091,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"13421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5095,"nodeType":"RevertStatement","src":"13414:48:13"}]}},{"expression":{"arguments":[{"id":5100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"13496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5098,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:13","typeDescriptions":{}}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5083,"id":5102,"nodeType":"Return","src":"13482:20:13"}]},"documentation":{"id":5077,"nodeType":"StructuredDocumentation","src":"13015:276:13","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5104,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5079,"mutability":"mutable","name":"value","nameLocation":"13322:5:13","nodeType":"VariableDeclaration","scope":5104,"src":"13314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5078,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:13"},"returnParameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5104,"src":"13352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5081,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:13"},"scope":6170,"src":"13296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5131,"nodeType":"Block","src":"13860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"13874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5114,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5113,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:13","memberName":"max","nodeType":"MemberAccess","src":"13882:16:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5125,"nodeType":"IfStatement","src":"13870:103:13","trueBody":{"id":5124,"nodeType":"Block","src":"13900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"13956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5119,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"13921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5123,"nodeType":"RevertStatement","src":"13914:48:13"}]}},{"expression":{"arguments":[{"id":5128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"13996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5126,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:13","typeDescriptions":{}}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5111,"id":5130,"nodeType":"Return","src":"13982:20:13"}]},"documentation":{"id":5105,"nodeType":"StructuredDocumentation","src":"13515:276:13","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5132,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5107,"mutability":"mutable","name":"value","nameLocation":"13822:5:13","nodeType":"VariableDeclaration","scope":5132,"src":"13814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5106,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:13"},"returnParameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5132,"src":"13852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5109,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:13"},"scope":6170,"src":"13796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5159,"nodeType":"Block","src":"14360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"14374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5142,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5141,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:13","memberName":"max","nodeType":"MemberAccess","src":"14382:16:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5153,"nodeType":"IfStatement","src":"14370:103:13","trueBody":{"id":5152,"nodeType":"Block","src":"14400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"14456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5147,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"14421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5151,"nodeType":"RevertStatement","src":"14414:48:13"}]}},{"expression":{"arguments":[{"id":5156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"14496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5154,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:13","typeDescriptions":{}}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5139,"id":5158,"nodeType":"Return","src":"14482:20:13"}]},"documentation":{"id":5133,"nodeType":"StructuredDocumentation","src":"14015:276:13","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5160,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5135,"mutability":"mutable","name":"value","nameLocation":"14322:5:13","nodeType":"VariableDeclaration","scope":5160,"src":"14314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5134,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:13"},"returnParameters":{"id":5139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5160,"src":"14352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5137,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:13"},"scope":6170,"src":"14296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5187,"nodeType":"Block","src":"14860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"14874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5170,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5169,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:13","memberName":"max","nodeType":"MemberAccess","src":"14882:16:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5181,"nodeType":"IfStatement","src":"14870:103:13","trueBody":{"id":5180,"nodeType":"Block","src":"14900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"14956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5175,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"14921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5179,"nodeType":"RevertStatement","src":"14914:48:13"}]}},{"expression":{"arguments":[{"id":5184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"14996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5182,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:13","typeDescriptions":{}}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5167,"id":5186,"nodeType":"Return","src":"14982:20:13"}]},"documentation":{"id":5161,"nodeType":"StructuredDocumentation","src":"14515:276:13","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5188,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5163,"mutability":"mutable","name":"value","nameLocation":"14822:5:13","nodeType":"VariableDeclaration","scope":5188,"src":"14814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5162,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:13"},"returnParameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5188,"src":"14852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5165,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:13"},"scope":6170,"src":"14796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5215,"nodeType":"Block","src":"15360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"15374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5198,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5197,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:13","memberName":"max","nodeType":"MemberAccess","src":"15382:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5209,"nodeType":"IfStatement","src":"15370:103:13","trueBody":{"id":5208,"nodeType":"Block","src":"15400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"15456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5203,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"15421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5207,"nodeType":"RevertStatement","src":"15414:48:13"}]}},{"expression":{"arguments":[{"id":5212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"15496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5210,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:13","typeDescriptions":{}}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5195,"id":5214,"nodeType":"Return","src":"15482:20:13"}]},"documentation":{"id":5189,"nodeType":"StructuredDocumentation","src":"15015:276:13","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5216,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5191,"mutability":"mutable","name":"value","nameLocation":"15322:5:13","nodeType":"VariableDeclaration","scope":5216,"src":"15314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5190,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:13"},"returnParameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5216,"src":"15352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5193,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:13"},"scope":6170,"src":"15296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5243,"nodeType":"Block","src":"15860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"15874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5226,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5225,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:13","memberName":"max","nodeType":"MemberAccess","src":"15882:16:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5237,"nodeType":"IfStatement","src":"15870:103:13","trueBody":{"id":5236,"nodeType":"Block","src":"15900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"15956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5231,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"15921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5235,"nodeType":"RevertStatement","src":"15914:48:13"}]}},{"expression":{"arguments":[{"id":5240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"15996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5238,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:13","typeDescriptions":{}}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5223,"id":5242,"nodeType":"Return","src":"15982:20:13"}]},"documentation":{"id":5217,"nodeType":"StructuredDocumentation","src":"15515:276:13","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5244,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5219,"mutability":"mutable","name":"value","nameLocation":"15822:5:13","nodeType":"VariableDeclaration","scope":5244,"src":"15814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5218,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:13"},"returnParameters":{"id":5223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5244,"src":"15852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5221,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:13"},"scope":6170,"src":"15796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5271,"nodeType":"Block","src":"16360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"16374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5254,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5253,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:13","memberName":"max","nodeType":"MemberAccess","src":"16382:16:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5265,"nodeType":"IfStatement","src":"16370:103:13","trueBody":{"id":5264,"nodeType":"Block","src":"16400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"16456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5259,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"16421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5263,"nodeType":"RevertStatement","src":"16414:48:13"}]}},{"expression":{"arguments":[{"id":5268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"16496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5266,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:13","typeDescriptions":{}}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5251,"id":5270,"nodeType":"Return","src":"16482:20:13"}]},"documentation":{"id":5245,"nodeType":"StructuredDocumentation","src":"16015:276:13","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5272,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5247,"mutability":"mutable","name":"value","nameLocation":"16322:5:13","nodeType":"VariableDeclaration","scope":5272,"src":"16314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5246,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:13"},"returnParameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5272,"src":"16352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5249,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:13"},"scope":6170,"src":"16296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5299,"nodeType":"Block","src":"16854:146:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"16868:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5282,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5281,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:13","memberName":"max","nodeType":"MemberAccess","src":"16876:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5293,"nodeType":"IfStatement","src":"16864:101:13","trueBody":{"id":5292,"nodeType":"Block","src":"16893:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"16948:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5287,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"16914:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5291,"nodeType":"RevertStatement","src":"16907:47:13"}]}},{"expression":{"arguments":[{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"16987:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5294,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:13","typeDescriptions":{}}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5279,"id":5298,"nodeType":"Return","src":"16974:19:13"}]},"documentation":{"id":5273,"nodeType":"StructuredDocumentation","src":"16515:272:13","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5300,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:13","nodeType":"FunctionDefinition","parameters":{"id":5276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5275,"mutability":"mutable","name":"value","nameLocation":"16817:5:13","nodeType":"VariableDeclaration","scope":5300,"src":"16809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5274,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:13"},"returnParameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5300,"src":"16847:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5277,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:13"},"scope":6170,"src":"16792:208:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5322,"nodeType":"Block","src":"17236:128:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"17250:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5316,"nodeType":"IfStatement","src":"17246:81:13","trueBody":{"id":5315,"nodeType":"Block","src":"17261:66:13","statements":[{"errorCall":{"arguments":[{"id":5312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"17310:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5311,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"17282:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5314,"nodeType":"RevertStatement","src":"17275:41:13"}]}},{"expression":{"arguments":[{"id":5319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"17351:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5317,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:13","typeDescriptions":{}}},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5307,"id":5321,"nodeType":"Return","src":"17336:21:13"}]},"documentation":{"id":5301,"nodeType":"StructuredDocumentation","src":"17006:160:13","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5323,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:13","nodeType":"FunctionDefinition","parameters":{"id":5304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5303,"mutability":"mutable","name":"value","nameLocation":"17197:5:13","nodeType":"VariableDeclaration","scope":5323,"src":"17190:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5302,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:13"},"returnParameters":{"id":5307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5323,"src":"17227:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5305,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:13"},"scope":6170,"src":"17171:193:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5348,"nodeType":"Block","src":"17761:150:13","statements":[{"expression":{"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5331,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"17771:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"17791:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5332,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:13","typeDescriptions":{}}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5337,"nodeType":"ExpressionStatement","src":"17771:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5338,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"17811:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"17825:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5347,"nodeType":"IfStatement","src":"17807:98:13","trueBody":{"id":5346,"nodeType":"Block","src":"17832:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"17888:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5341,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"17853:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5345,"nodeType":"RevertStatement","src":"17846:48:13"}]}}]},"documentation":{"id":5324,"nodeType":"StructuredDocumentation","src":"17370:312:13","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5349,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:13","nodeType":"FunctionDefinition","parameters":{"id":5327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5326,"mutability":"mutable","name":"value","nameLocation":"17712:5:13","nodeType":"VariableDeclaration","scope":5349,"src":"17705:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5325,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:13"},"returnParameters":{"id":5330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5329,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:13","nodeType":"VariableDeclaration","scope":5349,"src":"17742:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5328,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:13"},"scope":6170,"src":"17687:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5374,"nodeType":"Block","src":"18308:150:13","statements":[{"expression":{"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5357,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"18318:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"18338:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5358,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:13","typeDescriptions":{}}},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5363,"nodeType":"ExpressionStatement","src":"18318:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"18358:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"18372:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5373,"nodeType":"IfStatement","src":"18354:98:13","trueBody":{"id":5372,"nodeType":"Block","src":"18379:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"18435:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5367,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"18400:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5371,"nodeType":"RevertStatement","src":"18393:48:13"}]}}]},"documentation":{"id":5350,"nodeType":"StructuredDocumentation","src":"17917:312:13","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5375,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:13","nodeType":"FunctionDefinition","parameters":{"id":5353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5352,"mutability":"mutable","name":"value","nameLocation":"18259:5:13","nodeType":"VariableDeclaration","scope":5375,"src":"18252:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5351,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:13"},"returnParameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:13","nodeType":"VariableDeclaration","scope":5375,"src":"18289:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5354,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:13"},"scope":6170,"src":"18234:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5400,"nodeType":"Block","src":"18855:150:13","statements":[{"expression":{"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"18865:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"18885:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5384,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:13","typeDescriptions":{}}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5389,"nodeType":"ExpressionStatement","src":"18865:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5390,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"18905:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"18919:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5399,"nodeType":"IfStatement","src":"18901:98:13","trueBody":{"id":5398,"nodeType":"Block","src":"18926:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"18982:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5393,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"18947:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5397,"nodeType":"RevertStatement","src":"18940:48:13"}]}}]},"documentation":{"id":5376,"nodeType":"StructuredDocumentation","src":"18464:312:13","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5401,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:13","nodeType":"FunctionDefinition","parameters":{"id":5379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5378,"mutability":"mutable","name":"value","nameLocation":"18806:5:13","nodeType":"VariableDeclaration","scope":5401,"src":"18799:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5377,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:13"},"returnParameters":{"id":5382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5381,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:13","nodeType":"VariableDeclaration","scope":5401,"src":"18836:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5380,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:13"},"scope":6170,"src":"18781:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5426,"nodeType":"Block","src":"19402:150:13","statements":[{"expression":{"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5409,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"19412:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"19432:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5410,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:13","typeDescriptions":{}}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5415,"nodeType":"ExpressionStatement","src":"19412:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5416,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"19452:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"19466:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5425,"nodeType":"IfStatement","src":"19448:98:13","trueBody":{"id":5424,"nodeType":"Block","src":"19473:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"19529:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5419,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"19494:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5423,"nodeType":"RevertStatement","src":"19487:48:13"}]}}]},"documentation":{"id":5402,"nodeType":"StructuredDocumentation","src":"19011:312:13","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5427,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:13","nodeType":"FunctionDefinition","parameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"value","nameLocation":"19353:5:13","nodeType":"VariableDeclaration","scope":5427,"src":"19346:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5403,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:13"},"returnParameters":{"id":5408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5407,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:13","nodeType":"VariableDeclaration","scope":5427,"src":"19383:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5406,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:13"},"scope":6170,"src":"19328:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5452,"nodeType":"Block","src":"19949:150:13","statements":[{"expression":{"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5435,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"19959:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"19979:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5436,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:13","typeDescriptions":{}}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5441,"nodeType":"ExpressionStatement","src":"19959:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5442,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"19999:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"20013:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5451,"nodeType":"IfStatement","src":"19995:98:13","trueBody":{"id":5450,"nodeType":"Block","src":"20020:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"20076:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5445,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"20041:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5449,"nodeType":"RevertStatement","src":"20034:48:13"}]}}]},"documentation":{"id":5428,"nodeType":"StructuredDocumentation","src":"19558:312:13","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5453,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:13","nodeType":"FunctionDefinition","parameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"value","nameLocation":"19900:5:13","nodeType":"VariableDeclaration","scope":5453,"src":"19893:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5429,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:13"},"returnParameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:13","nodeType":"VariableDeclaration","scope":5453,"src":"19930:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5432,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:13"},"scope":6170,"src":"19875:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5478,"nodeType":"Block","src":"20496:150:13","statements":[{"expression":{"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5461,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"20506:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"20526:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5462,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:13","typeDescriptions":{}}},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5467,"nodeType":"ExpressionStatement","src":"20506:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5468,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"20546:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"20560:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5477,"nodeType":"IfStatement","src":"20542:98:13","trueBody":{"id":5476,"nodeType":"Block","src":"20567:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"20623:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5471,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"20588:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5475,"nodeType":"RevertStatement","src":"20581:48:13"}]}}]},"documentation":{"id":5454,"nodeType":"StructuredDocumentation","src":"20105:312:13","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5479,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:13","nodeType":"FunctionDefinition","parameters":{"id":5457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5456,"mutability":"mutable","name":"value","nameLocation":"20447:5:13","nodeType":"VariableDeclaration","scope":5479,"src":"20440:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5455,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:13"},"returnParameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5459,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:13","nodeType":"VariableDeclaration","scope":5479,"src":"20477:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5458,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:13"},"scope":6170,"src":"20422:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5504,"nodeType":"Block","src":"21043:150:13","statements":[{"expression":{"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5487,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"21053:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"21073:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5488,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:13","typeDescriptions":{}}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5493,"nodeType":"ExpressionStatement","src":"21053:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5494,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"21093:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"21107:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5503,"nodeType":"IfStatement","src":"21089:98:13","trueBody":{"id":5502,"nodeType":"Block","src":"21114:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"21170:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5497,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"21135:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5501,"nodeType":"RevertStatement","src":"21128:48:13"}]}}]},"documentation":{"id":5480,"nodeType":"StructuredDocumentation","src":"20652:312:13","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5505,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:13","nodeType":"FunctionDefinition","parameters":{"id":5483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5482,"mutability":"mutable","name":"value","nameLocation":"20994:5:13","nodeType":"VariableDeclaration","scope":5505,"src":"20987:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5481,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:13"},"returnParameters":{"id":5486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5485,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:13","nodeType":"VariableDeclaration","scope":5505,"src":"21024:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5484,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:13"},"scope":6170,"src":"20969:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5530,"nodeType":"Block","src":"21590:150:13","statements":[{"expression":{"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5513,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"21600:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"21620:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5514,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:13","typeDescriptions":{}}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5519,"nodeType":"ExpressionStatement","src":"21600:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5520,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"21640:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"21654:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5529,"nodeType":"IfStatement","src":"21636:98:13","trueBody":{"id":5528,"nodeType":"Block","src":"21661:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"21717:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5523,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"21682:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5527,"nodeType":"RevertStatement","src":"21675:48:13"}]}}]},"documentation":{"id":5506,"nodeType":"StructuredDocumentation","src":"21199:312:13","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5531,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:13","nodeType":"FunctionDefinition","parameters":{"id":5509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5508,"mutability":"mutable","name":"value","nameLocation":"21541:5:13","nodeType":"VariableDeclaration","scope":5531,"src":"21534:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5507,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:13"},"returnParameters":{"id":5512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:13","nodeType":"VariableDeclaration","scope":5531,"src":"21571:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5510,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:13"},"scope":6170,"src":"21516:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5556,"nodeType":"Block","src":"22137:150:13","statements":[{"expression":{"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5539,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"22147:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"22167:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5540,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:13","typeDescriptions":{}}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5545,"nodeType":"ExpressionStatement","src":"22147:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5546,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"22187:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"22201:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5555,"nodeType":"IfStatement","src":"22183:98:13","trueBody":{"id":5554,"nodeType":"Block","src":"22208:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"22264:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5549,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"22229:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5553,"nodeType":"RevertStatement","src":"22222:48:13"}]}}]},"documentation":{"id":5532,"nodeType":"StructuredDocumentation","src":"21746:312:13","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5557,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:13","nodeType":"FunctionDefinition","parameters":{"id":5535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5534,"mutability":"mutable","name":"value","nameLocation":"22088:5:13","nodeType":"VariableDeclaration","scope":5557,"src":"22081:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5533,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:13"},"returnParameters":{"id":5538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5537,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:13","nodeType":"VariableDeclaration","scope":5557,"src":"22118:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5536,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:13"},"scope":6170,"src":"22063:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5582,"nodeType":"Block","src":"22684:150:13","statements":[{"expression":{"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5565,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"22694:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"22714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5566,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:13","typeDescriptions":{}}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5571,"nodeType":"ExpressionStatement","src":"22694:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5572,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"22734:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"22748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5581,"nodeType":"IfStatement","src":"22730:98:13","trueBody":{"id":5580,"nodeType":"Block","src":"22755:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"22811:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5575,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"22776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5579,"nodeType":"RevertStatement","src":"22769:48:13"}]}}]},"documentation":{"id":5558,"nodeType":"StructuredDocumentation","src":"22293:312:13","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5583,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:13","nodeType":"FunctionDefinition","parameters":{"id":5561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5560,"mutability":"mutable","name":"value","nameLocation":"22635:5:13","nodeType":"VariableDeclaration","scope":5583,"src":"22628:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5559,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:13"},"returnParameters":{"id":5564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5563,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:13","nodeType":"VariableDeclaration","scope":5583,"src":"22665:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5562,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:13"},"scope":6170,"src":"22610:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5608,"nodeType":"Block","src":"23231:150:13","statements":[{"expression":{"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5591,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"23241:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"23261:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5592,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:13","typeDescriptions":{}}},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5597,"nodeType":"ExpressionStatement","src":"23241:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5598,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"23281:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"23295:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5607,"nodeType":"IfStatement","src":"23277:98:13","trueBody":{"id":5606,"nodeType":"Block","src":"23302:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"23358:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5601,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"23323:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5605,"nodeType":"RevertStatement","src":"23316:48:13"}]}}]},"documentation":{"id":5584,"nodeType":"StructuredDocumentation","src":"22840:312:13","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5609,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:13","nodeType":"FunctionDefinition","parameters":{"id":5587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5586,"mutability":"mutable","name":"value","nameLocation":"23182:5:13","nodeType":"VariableDeclaration","scope":5609,"src":"23175:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5585,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:13"},"returnParameters":{"id":5590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:13","nodeType":"VariableDeclaration","scope":5609,"src":"23212:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5588,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:13"},"scope":6170,"src":"23157:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5634,"nodeType":"Block","src":"23778:150:13","statements":[{"expression":{"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5617,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"23788:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"23808:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5618,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:13","typeDescriptions":{}}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5623,"nodeType":"ExpressionStatement","src":"23788:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5624,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5615,"src":"23828:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"23842:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5633,"nodeType":"IfStatement","src":"23824:98:13","trueBody":{"id":5632,"nodeType":"Block","src":"23849:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"23905:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5627,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"23870:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5631,"nodeType":"RevertStatement","src":"23863:48:13"}]}}]},"documentation":{"id":5610,"nodeType":"StructuredDocumentation","src":"23387:312:13","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5635,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:13","nodeType":"FunctionDefinition","parameters":{"id":5613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5612,"mutability":"mutable","name":"value","nameLocation":"23729:5:13","nodeType":"VariableDeclaration","scope":5635,"src":"23722:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5611,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:13"},"returnParameters":{"id":5616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5615,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:13","nodeType":"VariableDeclaration","scope":5635,"src":"23759:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5614,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:13"},"scope":6170,"src":"23704:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5660,"nodeType":"Block","src":"24325:150:13","statements":[{"expression":{"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5643,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"24335:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"24355:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5644,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:13","typeDescriptions":{}}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5649,"nodeType":"ExpressionStatement","src":"24335:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5650,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"24375:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"24389:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5659,"nodeType":"IfStatement","src":"24371:98:13","trueBody":{"id":5658,"nodeType":"Block","src":"24396:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"24452:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5653,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"24417:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5657,"nodeType":"RevertStatement","src":"24410:48:13"}]}}]},"documentation":{"id":5636,"nodeType":"StructuredDocumentation","src":"23934:312:13","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5661,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:13","nodeType":"FunctionDefinition","parameters":{"id":5639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5638,"mutability":"mutable","name":"value","nameLocation":"24276:5:13","nodeType":"VariableDeclaration","scope":5661,"src":"24269:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5637,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:13"},"returnParameters":{"id":5642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5641,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:13","nodeType":"VariableDeclaration","scope":5661,"src":"24306:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5640,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:13"},"scope":6170,"src":"24251:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5686,"nodeType":"Block","src":"24872:150:13","statements":[{"expression":{"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5669,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"24882:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"24902:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5670,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:13","typeDescriptions":{}}},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5675,"nodeType":"ExpressionStatement","src":"24882:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5676,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"24922:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"24936:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5685,"nodeType":"IfStatement","src":"24918:98:13","trueBody":{"id":5684,"nodeType":"Block","src":"24943:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"24999:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5679,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"24964:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5683,"nodeType":"RevertStatement","src":"24957:48:13"}]}}]},"documentation":{"id":5662,"nodeType":"StructuredDocumentation","src":"24481:312:13","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5687,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:13","nodeType":"FunctionDefinition","parameters":{"id":5665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5664,"mutability":"mutable","name":"value","nameLocation":"24823:5:13","nodeType":"VariableDeclaration","scope":5687,"src":"24816:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5663,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:13"},"returnParameters":{"id":5668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5667,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:13","nodeType":"VariableDeclaration","scope":5687,"src":"24853:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5666,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:13"},"scope":6170,"src":"24798:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5712,"nodeType":"Block","src":"25419:150:13","statements":[{"expression":{"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5695,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"25429:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"25449:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5696,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:13","typeDescriptions":{}}},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5701,"nodeType":"ExpressionStatement","src":"25429:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5702,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"25469:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"25483:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5711,"nodeType":"IfStatement","src":"25465:98:13","trueBody":{"id":5710,"nodeType":"Block","src":"25490:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"25546:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5705,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"25511:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5709,"nodeType":"RevertStatement","src":"25504:48:13"}]}}]},"documentation":{"id":5688,"nodeType":"StructuredDocumentation","src":"25028:312:13","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5713,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:13","nodeType":"FunctionDefinition","parameters":{"id":5691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5690,"mutability":"mutable","name":"value","nameLocation":"25370:5:13","nodeType":"VariableDeclaration","scope":5713,"src":"25363:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5689,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:13"},"returnParameters":{"id":5694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5693,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:13","nodeType":"VariableDeclaration","scope":5713,"src":"25400:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5692,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:13"},"scope":6170,"src":"25345:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5738,"nodeType":"Block","src":"25966:150:13","statements":[{"expression":{"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5721,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5719,"src":"25976:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"25996:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5722,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:13","typeDescriptions":{}}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5727,"nodeType":"ExpressionStatement","src":"25976:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5728,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5719,"src":"26016:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"26030:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5737,"nodeType":"IfStatement","src":"26012:98:13","trueBody":{"id":5736,"nodeType":"Block","src":"26037:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"26093:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5731,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"26058:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5735,"nodeType":"RevertStatement","src":"26051:48:13"}]}}]},"documentation":{"id":5714,"nodeType":"StructuredDocumentation","src":"25575:312:13","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5739,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:13","nodeType":"FunctionDefinition","parameters":{"id":5717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5716,"mutability":"mutable","name":"value","nameLocation":"25917:5:13","nodeType":"VariableDeclaration","scope":5739,"src":"25910:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5715,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:13"},"returnParameters":{"id":5720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5719,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:13","nodeType":"VariableDeclaration","scope":5739,"src":"25947:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5718,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:13"},"scope":6170,"src":"25892:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5764,"nodeType":"Block","src":"26513:150:13","statements":[{"expression":{"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5747,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"26523:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"26543:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5748,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:13","typeDescriptions":{}}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5753,"nodeType":"ExpressionStatement","src":"26523:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5754,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"26563:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"26577:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5763,"nodeType":"IfStatement","src":"26559:98:13","trueBody":{"id":5762,"nodeType":"Block","src":"26584:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"26640:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5757,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"26605:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5761,"nodeType":"RevertStatement","src":"26598:48:13"}]}}]},"documentation":{"id":5740,"nodeType":"StructuredDocumentation","src":"26122:312:13","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5765,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:13","nodeType":"FunctionDefinition","parameters":{"id":5743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5742,"mutability":"mutable","name":"value","nameLocation":"26464:5:13","nodeType":"VariableDeclaration","scope":5765,"src":"26457:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5741,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:13"},"returnParameters":{"id":5746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:13","nodeType":"VariableDeclaration","scope":5765,"src":"26494:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5744,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:13"},"scope":6170,"src":"26439:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5790,"nodeType":"Block","src":"27060:150:13","statements":[{"expression":{"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5773,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"27070:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"27090:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5774,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:13","typeDescriptions":{}}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5779,"nodeType":"ExpressionStatement","src":"27070:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5780,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5771,"src":"27110:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"27124:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5789,"nodeType":"IfStatement","src":"27106:98:13","trueBody":{"id":5788,"nodeType":"Block","src":"27131:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"27187:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5783,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"27152:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5787,"nodeType":"RevertStatement","src":"27145:48:13"}]}}]},"documentation":{"id":5766,"nodeType":"StructuredDocumentation","src":"26669:312:13","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5791,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:13","nodeType":"FunctionDefinition","parameters":{"id":5769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5768,"mutability":"mutable","name":"value","nameLocation":"27011:5:13","nodeType":"VariableDeclaration","scope":5791,"src":"27004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5767,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:13"},"returnParameters":{"id":5772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5771,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:13","nodeType":"VariableDeclaration","scope":5791,"src":"27041:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5770,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:13"},"scope":6170,"src":"26986:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5816,"nodeType":"Block","src":"27607:150:13","statements":[{"expression":{"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5799,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"27617:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"27637:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5800,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:13","typeDescriptions":{}}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5805,"nodeType":"ExpressionStatement","src":"27617:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5806,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"27657:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"27671:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5815,"nodeType":"IfStatement","src":"27653:98:13","trueBody":{"id":5814,"nodeType":"Block","src":"27678:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"27734:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5809,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"27699:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5813,"nodeType":"RevertStatement","src":"27692:48:13"}]}}]},"documentation":{"id":5792,"nodeType":"StructuredDocumentation","src":"27216:312:13","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5817,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:13","nodeType":"FunctionDefinition","parameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5794,"mutability":"mutable","name":"value","nameLocation":"27558:5:13","nodeType":"VariableDeclaration","scope":5817,"src":"27551:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5793,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:13"},"returnParameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5797,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:13","nodeType":"VariableDeclaration","scope":5817,"src":"27588:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5796,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:13"},"scope":6170,"src":"27533:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5842,"nodeType":"Block","src":"28147:148:13","statements":[{"expression":{"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"28157:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"28176:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5826,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:13","typeDescriptions":{}}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5831,"nodeType":"ExpressionStatement","src":"28157:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5832,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"28196:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"28210:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5841,"nodeType":"IfStatement","src":"28192:97:13","trueBody":{"id":5840,"nodeType":"Block","src":"28217:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"28272:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5835,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"28238:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5839,"nodeType":"RevertStatement","src":"28231:47:13"}]}}]},"documentation":{"id":5818,"nodeType":"StructuredDocumentation","src":"27763:307:13","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5843,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:13","nodeType":"FunctionDefinition","parameters":{"id":5821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5820,"mutability":"mutable","name":"value","nameLocation":"28099:5:13","nodeType":"VariableDeclaration","scope":5843,"src":"28092:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5819,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:13"},"returnParameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:13","nodeType":"VariableDeclaration","scope":5843,"src":"28129:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5822,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:13"},"scope":6170,"src":"28075:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5868,"nodeType":"Block","src":"28685:148:13","statements":[{"expression":{"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5851,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"28695:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"28714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5852,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:13","typeDescriptions":{}}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5857,"nodeType":"ExpressionStatement","src":"28695:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"28734:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"28748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5867,"nodeType":"IfStatement","src":"28730:97:13","trueBody":{"id":5866,"nodeType":"Block","src":"28755:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"28810:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5861,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"28776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5865,"nodeType":"RevertStatement","src":"28769:47:13"}]}}]},"documentation":{"id":5844,"nodeType":"StructuredDocumentation","src":"28301:307:13","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5869,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:13","nodeType":"FunctionDefinition","parameters":{"id":5847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5846,"mutability":"mutable","name":"value","nameLocation":"28637:5:13","nodeType":"VariableDeclaration","scope":5869,"src":"28630:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5845,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:13"},"returnParameters":{"id":5850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5849,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:13","nodeType":"VariableDeclaration","scope":5869,"src":"28667:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5848,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:13"},"scope":6170,"src":"28613:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5894,"nodeType":"Block","src":"29223:148:13","statements":[{"expression":{"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5877,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"29233:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"29252:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5878,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:13","typeDescriptions":{}}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5883,"nodeType":"ExpressionStatement","src":"29233:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5884,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"29272:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"29286:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5893,"nodeType":"IfStatement","src":"29268:97:13","trueBody":{"id":5892,"nodeType":"Block","src":"29293:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5872,"src":"29348:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5887,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"29314:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5891,"nodeType":"RevertStatement","src":"29307:47:13"}]}}]},"documentation":{"id":5870,"nodeType":"StructuredDocumentation","src":"28839:307:13","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5895,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:13","nodeType":"FunctionDefinition","parameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5872,"mutability":"mutable","name":"value","nameLocation":"29175:5:13","nodeType":"VariableDeclaration","scope":5895,"src":"29168:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5871,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:13"},"returnParameters":{"id":5876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:13","nodeType":"VariableDeclaration","scope":5895,"src":"29205:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5874,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:13"},"scope":6170,"src":"29151:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5920,"nodeType":"Block","src":"29761:148:13","statements":[{"expression":{"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5903,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"29771:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"29790:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5904,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:13","typeDescriptions":{}}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5909,"nodeType":"ExpressionStatement","src":"29771:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5910,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"29810:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"29824:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5919,"nodeType":"IfStatement","src":"29806:97:13","trueBody":{"id":5918,"nodeType":"Block","src":"29831:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"29886:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5913,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"29852:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5917,"nodeType":"RevertStatement","src":"29845:47:13"}]}}]},"documentation":{"id":5896,"nodeType":"StructuredDocumentation","src":"29377:307:13","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5921,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:13","nodeType":"FunctionDefinition","parameters":{"id":5899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5898,"mutability":"mutable","name":"value","nameLocation":"29713:5:13","nodeType":"VariableDeclaration","scope":5921,"src":"29706:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5897,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:13"},"returnParameters":{"id":5902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5901,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:13","nodeType":"VariableDeclaration","scope":5921,"src":"29743:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5900,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:13"},"scope":6170,"src":"29689:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5946,"nodeType":"Block","src":"30299:148:13","statements":[{"expression":{"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5929,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"30309:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"30328:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5930,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:13","typeDescriptions":{}}},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5935,"nodeType":"ExpressionStatement","src":"30309:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"30348:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"30362:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5945,"nodeType":"IfStatement","src":"30344:97:13","trueBody":{"id":5944,"nodeType":"Block","src":"30369:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"30424:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5939,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"30390:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5943,"nodeType":"RevertStatement","src":"30383:47:13"}]}}]},"documentation":{"id":5922,"nodeType":"StructuredDocumentation","src":"29915:307:13","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5947,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:13","nodeType":"FunctionDefinition","parameters":{"id":5925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5924,"mutability":"mutable","name":"value","nameLocation":"30251:5:13","nodeType":"VariableDeclaration","scope":5947,"src":"30244:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5923,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:13"},"returnParameters":{"id":5928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5927,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:13","nodeType":"VariableDeclaration","scope":5947,"src":"30281:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5926,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:13"},"scope":6170,"src":"30227:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5972,"nodeType":"Block","src":"30837:148:13","statements":[{"expression":{"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5955,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"30847:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"30866:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5956,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:13","typeDescriptions":{}}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5961,"nodeType":"ExpressionStatement","src":"30847:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5962,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"30886:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"30900:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5971,"nodeType":"IfStatement","src":"30882:97:13","trueBody":{"id":5970,"nodeType":"Block","src":"30907:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"30962:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5965,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"30928:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5969,"nodeType":"RevertStatement","src":"30921:47:13"}]}}]},"documentation":{"id":5948,"nodeType":"StructuredDocumentation","src":"30453:307:13","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5973,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:13","nodeType":"FunctionDefinition","parameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"value","nameLocation":"30789:5:13","nodeType":"VariableDeclaration","scope":5973,"src":"30782:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5949,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:13"},"returnParameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:13","nodeType":"VariableDeclaration","scope":5973,"src":"30819:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5952,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:13"},"scope":6170,"src":"30765:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5998,"nodeType":"Block","src":"31375:148:13","statements":[{"expression":{"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5981,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"31385:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"31404:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5982,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:13","typeDescriptions":{}}},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5987,"nodeType":"ExpressionStatement","src":"31385:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5988,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"31424:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"31438:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5997,"nodeType":"IfStatement","src":"31420:97:13","trueBody":{"id":5996,"nodeType":"Block","src":"31445:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"31500:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5991,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"31466:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5995,"nodeType":"RevertStatement","src":"31459:47:13"}]}}]},"documentation":{"id":5974,"nodeType":"StructuredDocumentation","src":"30991:307:13","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5999,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:13","nodeType":"FunctionDefinition","parameters":{"id":5977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5976,"mutability":"mutable","name":"value","nameLocation":"31327:5:13","nodeType":"VariableDeclaration","scope":5999,"src":"31320:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5975,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:13"},"returnParameters":{"id":5980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:13","nodeType":"VariableDeclaration","scope":5999,"src":"31357:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5978,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:13"},"scope":6170,"src":"31303:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6024,"nodeType":"Block","src":"31913:148:13","statements":[{"expression":{"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6007,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"31923:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"31942:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6008,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:13","typeDescriptions":{}}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6013,"nodeType":"ExpressionStatement","src":"31923:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"31962:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"31976:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6023,"nodeType":"IfStatement","src":"31958:97:13","trueBody":{"id":6022,"nodeType":"Block","src":"31983:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"32038:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6017,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"32004:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6021,"nodeType":"RevertStatement","src":"31997:47:13"}]}}]},"documentation":{"id":6000,"nodeType":"StructuredDocumentation","src":"31529:307:13","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6025,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:13","nodeType":"FunctionDefinition","parameters":{"id":6003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6002,"mutability":"mutable","name":"value","nameLocation":"31865:5:13","nodeType":"VariableDeclaration","scope":6025,"src":"31858:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6001,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:13"},"returnParameters":{"id":6006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6005,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:13","nodeType":"VariableDeclaration","scope":6025,"src":"31895:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6004,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:13"},"scope":6170,"src":"31841:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6050,"nodeType":"Block","src":"32451:148:13","statements":[{"expression":{"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6033,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"32461:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"32480:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6034,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:13","typeDescriptions":{}}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6039,"nodeType":"ExpressionStatement","src":"32461:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"32500:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"32514:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6049,"nodeType":"IfStatement","src":"32496:97:13","trueBody":{"id":6048,"nodeType":"Block","src":"32521:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"32576:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6043,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"32542:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6047,"nodeType":"RevertStatement","src":"32535:47:13"}]}}]},"documentation":{"id":6026,"nodeType":"StructuredDocumentation","src":"32067:307:13","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6051,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:13","nodeType":"FunctionDefinition","parameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6028,"mutability":"mutable","name":"value","nameLocation":"32403:5:13","nodeType":"VariableDeclaration","scope":6051,"src":"32396:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6027,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:13"},"returnParameters":{"id":6032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:13","nodeType":"VariableDeclaration","scope":6051,"src":"32433:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6030,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:13"},"scope":6170,"src":"32379:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6076,"nodeType":"Block","src":"32989:148:13","statements":[{"expression":{"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6059,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"32999:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"33018:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6060,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:13","typeDescriptions":{}}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6065,"nodeType":"ExpressionStatement","src":"32999:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"33038:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"33052:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6075,"nodeType":"IfStatement","src":"33034:97:13","trueBody":{"id":6074,"nodeType":"Block","src":"33059:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"33114:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6069,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"33080:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6073,"nodeType":"RevertStatement","src":"33073:47:13"}]}}]},"documentation":{"id":6052,"nodeType":"StructuredDocumentation","src":"32605:307:13","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6077,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:13","nodeType":"FunctionDefinition","parameters":{"id":6055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6054,"mutability":"mutable","name":"value","nameLocation":"32941:5:13","nodeType":"VariableDeclaration","scope":6077,"src":"32934:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6053,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:13"},"returnParameters":{"id":6058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6057,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:13","nodeType":"VariableDeclaration","scope":6077,"src":"32971:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6056,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:13"},"scope":6170,"src":"32917:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6102,"nodeType":"Block","src":"33527:148:13","statements":[{"expression":{"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6085,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"33537:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"33556:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6086,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:13","typeDescriptions":{}}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6091,"nodeType":"ExpressionStatement","src":"33537:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6083,"src":"33576:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"33590:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6101,"nodeType":"IfStatement","src":"33572:97:13","trueBody":{"id":6100,"nodeType":"Block","src":"33597:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"33652:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6095,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"33618:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6099,"nodeType":"RevertStatement","src":"33611:47:13"}]}}]},"documentation":{"id":6078,"nodeType":"StructuredDocumentation","src":"33143:307:13","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6103,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:13","nodeType":"FunctionDefinition","parameters":{"id":6081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6080,"mutability":"mutable","name":"value","nameLocation":"33479:5:13","nodeType":"VariableDeclaration","scope":6103,"src":"33472:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6079,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:13"},"returnParameters":{"id":6084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6083,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:13","nodeType":"VariableDeclaration","scope":6103,"src":"33509:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6082,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:13"},"scope":6170,"src":"33455:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6128,"nodeType":"Block","src":"34058:146:13","statements":[{"expression":{"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6111,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"34068:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"34086:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6112,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:13","typeDescriptions":{}}},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6117,"nodeType":"ExpressionStatement","src":"34068:24:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6109,"src":"34106:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"34120:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6127,"nodeType":"IfStatement","src":"34102:96:13","trueBody":{"id":6126,"nodeType":"Block","src":"34127:71:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"34181:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6121,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"34148:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6125,"nodeType":"RevertStatement","src":"34141:46:13"}]}}]},"documentation":{"id":6104,"nodeType":"StructuredDocumentation","src":"33681:302:13","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6129,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:13","nodeType":"FunctionDefinition","parameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6106,"mutability":"mutable","name":"value","nameLocation":"34011:5:13","nodeType":"VariableDeclaration","scope":6129,"src":"34004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6105,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:13"},"returnParameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:13","nodeType":"VariableDeclaration","scope":6129,"src":"34041:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6108,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:13"},"scope":6170,"src":"33988:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6158,"nodeType":"Block","src":"34444:250:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"34557:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6141,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6140,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:13","memberName":"max","nodeType":"MemberAccess","src":"34573:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6138,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:13","typeDescriptions":{}}},"id":6145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6152,"nodeType":"IfStatement","src":"34553:105:13","trueBody":{"id":6151,"nodeType":"Block","src":"34592:66:13","statements":[{"errorCall":{"arguments":[{"id":6148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"34641:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6147,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"34613:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6150,"nodeType":"RevertStatement","src":"34606:41:13"}]}},{"expression":{"arguments":[{"id":6155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"34681:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6153,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:13","typeDescriptions":{}}},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6136,"id":6157,"nodeType":"Return","src":"34667:20:13"}]},"documentation":{"id":6130,"nodeType":"StructuredDocumentation","src":"34210:165:13","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6159,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:13","nodeType":"FunctionDefinition","parameters":{"id":6133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6132,"mutability":"mutable","name":"value","nameLocation":"34406:5:13","nodeType":"VariableDeclaration","scope":6159,"src":"34398:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6131,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:13"},"returnParameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6159,"src":"34436:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6134,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:13"},"scope":6170,"src":"34380:314:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6168,"nodeType":"Block","src":"34853:87:13","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:13","statements":[{"nodeType":"YulAssignment","src":"34902:22:13","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:13"},"nodeType":"YulFunctionCall","src":"34914:9:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:13"},"nodeType":"YulFunctionCall","src":"34907:17:13"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6162,"isOffset":false,"isSlot":false,"src":"34921:1:13","valueSize":1},{"declaration":6165,"isOffset":false,"isSlot":false,"src":"34902:1:13","valueSize":1}],"flags":["memory-safe"],"id":6167,"nodeType":"InlineAssembly","src":"34863:71:13"}]},"documentation":{"id":6160,"nodeType":"StructuredDocumentation","src":"34700:90:13","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6169,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:13","nodeType":"FunctionDefinition","parameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"b","nameLocation":"34816:1:13","nodeType":"VariableDeclaration","scope":6169,"src":"34811:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6161,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:13"},"returnParameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"u","nameLocation":"34850:1:13","nodeType":"VariableDeclaration","scope":6169,"src":"34842:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6164,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:13"},"scope":6170,"src":"34795:145:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6171,"src":"769:34173:13","usedErrors":[4415,4420,4427,4432],"usedEvents":[]}],"src":"192:34751:13"},"id":13},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6170],"SignedMath":[6314]},"id":6315,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6172,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6315,"sourceUnit":6171,"src":"135:40:14","symbolAliases":[{"foreign":{"id":6173,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"143:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6175,"nodeType":"StructuredDocumentation","src":"177:80:14","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6314,"linearizedBaseContracts":[6314],"name":"SignedMath","nameLocation":"266:10:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":6204,"nodeType":"Block","src":"746:215:14","statements":[{"id":6203,"nodeType":"UncheckedBlock","src":"756:199:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6187,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"894:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6188,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"900:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6189,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"904:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6191,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6196,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"932:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6194,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"916:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6170_$","typeString":"type(library SafeCast)"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6169,"src":"916:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6192,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:14","typeDescriptions":{}}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6186,"id":6202,"nodeType":"Return","src":"887:57:14"}]}]},"documentation":{"id":6176,"nodeType":"StructuredDocumentation","src":"283:374:14","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6205,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:14","nodeType":"FunctionDefinition","parameters":{"id":6183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6178,"mutability":"mutable","name":"condition","nameLocation":"684:9:14","nodeType":"VariableDeclaration","scope":6205,"src":"679:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6177,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6180,"mutability":"mutable","name":"a","nameLocation":"702:1:14","nodeType":"VariableDeclaration","scope":6205,"src":"695:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6179,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6182,"mutability":"mutable","name":"b","nameLocation":"712:1:14","nodeType":"VariableDeclaration","scope":6205,"src":"705:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6181,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:14"},"returnParameters":{"id":6186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6205,"src":"738:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6184,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:14"},"scope":6314,"src":"662:299:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6223,"nodeType":"Block","src":"1102:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6216,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"1127:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6217,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"1131:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6219,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"1134:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6220,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"1137:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6215,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"1119:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6214,"id":6222,"nodeType":"Return","src":"1112:27:14"}]},"documentation":{"id":6206,"nodeType":"StructuredDocumentation","src":"967:66:14","text":" @dev Returns the largest of two signed numbers."},"id":6224,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:14","nodeType":"FunctionDefinition","parameters":{"id":6211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6208,"mutability":"mutable","name":"a","nameLocation":"1058:1:14","nodeType":"VariableDeclaration","scope":6224,"src":"1051:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6207,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6210,"mutability":"mutable","name":"b","nameLocation":"1068:1:14","nodeType":"VariableDeclaration","scope":6224,"src":"1061:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6209,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:14"},"returnParameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6224,"src":"1094:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6212,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:14"},"scope":6314,"src":"1038:108:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6242,"nodeType":"Block","src":"1288:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6235,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"1313:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6236,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"1317:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6238,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"1320:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6239,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"1323:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6234,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"1305:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6233,"id":6241,"nodeType":"Return","src":"1298:27:14"}]},"documentation":{"id":6225,"nodeType":"StructuredDocumentation","src":"1152:67:14","text":" @dev Returns the smallest of two signed numbers."},"id":6243,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:14","nodeType":"FunctionDefinition","parameters":{"id":6230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6227,"mutability":"mutable","name":"a","nameLocation":"1244:1:14","nodeType":"VariableDeclaration","scope":6243,"src":"1237:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6226,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6229,"mutability":"mutable","name":"b","nameLocation":"1254:1:14","nodeType":"VariableDeclaration","scope":6243,"src":"1247:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6228,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:14"},"returnParameters":{"id":6233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6243,"src":"1280:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6231,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:14"},"scope":6314,"src":"1224:108:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6286,"nodeType":"Block","src":"1537:162:14","statements":[{"assignments":[6254],"declarations":[{"constant":false,"id":6254,"mutability":"mutable","name":"x","nameLocation":"1606:1:14","nodeType":"VariableDeclaration","scope":6286,"src":"1599:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6253,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6267,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"1611:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"1615:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6259,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"1622:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6260,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"1626:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:14"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6268,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"1651:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6273,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"1671:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:14","typeDescriptions":{}}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6269,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:14","typeDescriptions":{}}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6278,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"1685:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6279,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"1689:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6252,"id":6285,"nodeType":"Return","src":"1644:48:14"}]},"documentation":{"id":6244,"nodeType":"StructuredDocumentation","src":"1338:126:14","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6287,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:14","nodeType":"FunctionDefinition","parameters":{"id":6249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6246,"mutability":"mutable","name":"a","nameLocation":"1493:1:14","nodeType":"VariableDeclaration","scope":6287,"src":"1486:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6245,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6248,"mutability":"mutable","name":"b","nameLocation":"1503:1:14","nodeType":"VariableDeclaration","scope":6287,"src":"1496:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6247,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:14"},"returnParameters":{"id":6252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6287,"src":"1529:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6250,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:14"},"scope":6314,"src":"1469:230:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6312,"nodeType":"Block","src":"1843:767:14","statements":[{"id":6311,"nodeType":"UncheckedBlock","src":"1853:751:14","statements":[{"assignments":[6296],"declarations":[{"constant":false,"id":6296,"mutability":"mutable","name":"mask","nameLocation":"2424:4:14","nodeType":"VariableDeclaration","scope":6311,"src":"2417:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6295,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6300,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6297,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"2431:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6303,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"2576:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6304,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"2580:4:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6307,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"2588:4:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:14","typeDescriptions":{}}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6294,"id":6310,"nodeType":"Return","src":"2560:33:14"}]}]},"documentation":{"id":6288,"nodeType":"StructuredDocumentation","src":"1705:78:14","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6313,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:14","nodeType":"FunctionDefinition","parameters":{"id":6291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6290,"mutability":"mutable","name":"n","nameLocation":"1808:1:14","nodeType":"VariableDeclaration","scope":6313,"src":"1801:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6289,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:14"},"returnParameters":{"id":6294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6313,"src":"1834:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:14"},"scope":6314,"src":"1788:822:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6315,"src":"258:2354:14","usedErrors":[],"usedEvents":[]}],"src":"109:2504:14"},"id":14},"contracts/PatientMedicaition.sol":{"ast":{"absolutePath":"contracts/PatientMedicaition.sol","exportedSymbols":{"PatientMedication":[6426]},"id":6427,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6316,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"PatientMedication","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6426,"linearizedBaseContracts":[6426],"name":"PatientMedication","nameLocation":"70:17:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PatientMedication.MedicationRecord","id":6331,"members":[{"constant":false,"id":6318,"mutability":"mutable","name":"recordId","nameLocation":"140:8:15","nodeType":"VariableDeclaration","scope":6331,"src":"132:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6317,"name":"uint256","nodeType":"ElementaryTypeName","src":"132:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6320,"mutability":"mutable","name":"medicationName","nameLocation":"166:14:15","nodeType":"VariableDeclaration","scope":6331,"src":"159:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6319,"name":"string","nodeType":"ElementaryTypeName","src":"159:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6322,"mutability":"mutable","name":"dosage","nameLocation":"198:6:15","nodeType":"VariableDeclaration","scope":6331,"src":"191:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6321,"name":"string","nodeType":"ElementaryTypeName","src":"191:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6324,"mutability":"mutable","name":"instructions","nameLocation":"222:12:15","nodeType":"VariableDeclaration","scope":6331,"src":"215:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6323,"name":"string","nodeType":"ElementaryTypeName","src":"215:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6326,"mutability":"mutable","name":"issueDate","nameLocation":"253:9:15","nodeType":"VariableDeclaration","scope":6331,"src":"245:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6325,"name":"uint256","nodeType":"ElementaryTypeName","src":"245:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6328,"mutability":"mutable","name":"prescribingDoctor","nameLocation":"280:17:15","nodeType":"VariableDeclaration","scope":6331,"src":"273:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6327,"name":"string","nodeType":"ElementaryTypeName","src":"273:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6330,"mutability":"mutable","name":"receipt","nameLocation":"315:7:15","nodeType":"VariableDeclaration","scope":6331,"src":"308:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6329,"name":"string","nodeType":"ElementaryTypeName","src":"308:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"MedicationRecord","nameLocation":"104:16:15","nodeType":"StructDefinition","scope":6426,"src":"97:233:15","visibility":"public"},{"constant":false,"id":6337,"mutability":"mutable","name":"patientRecords","nameLocation":"385:14:15","nodeType":"VariableDeclaration","scope":6426,"src":"338:61:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage_$","typeString":"mapping(address => struct PatientMedication.MedicationRecord[])"},"typeName":{"id":6336,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6332,"name":"address","nodeType":"ElementaryTypeName","src":"346:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"338:38:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage_$","typeString":"mapping(address => struct PatientMedication.MedicationRecord[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6334,"nodeType":"UserDefinedTypeName","pathNode":{"id":6333,"name":"MedicationRecord","nameLocations":["357:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":6331,"src":"357:16:15"},"referencedDeclaration":6331,"src":"357:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_MedicationRecord_$6331_storage_ptr","typeString":"struct PatientMedication.MedicationRecord"}},"id":6335,"nodeType":"ArrayTypeName","src":"357:18:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage_ptr","typeString":"struct PatientMedication.MedicationRecord[]"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"49c0d09b0985264670299950cd84008de50b13096fac0c8212665a0b958f5551","id":6345,"name":"MedicationRecordAdded","nameLocation":"414:21:15","nodeType":"EventDefinition","parameters":{"id":6344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6339,"indexed":true,"mutability":"mutable","name":"patientAddress","nameLocation":"462:14:15","nodeType":"VariableDeclaration","scope":6345,"src":"446:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6338,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6341,"indexed":false,"mutability":"mutable","name":"recordId","nameLocation":"495:8:15","nodeType":"VariableDeclaration","scope":6345,"src":"487:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6340,"name":"uint256","nodeType":"ElementaryTypeName","src":"487:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6343,"indexed":false,"mutability":"mutable","name":"medicationName","nameLocation":"521:14:15","nodeType":"VariableDeclaration","scope":6345,"src":"514:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6342,"name":"string","nodeType":"ElementaryTypeName","src":"514:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"435:107:15"},"src":"408:135:15"},{"body":{"id":6397,"nodeType":"Block","src":"780:571:15","statements":[{"assignments":[6359],"declarations":[{"constant":false,"id":6359,"mutability":"mutable","name":"newRecordId","nameLocation":"799:11:15","nodeType":"VariableDeclaration","scope":6397,"src":"791:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6358,"name":"uint256","nodeType":"ElementaryTypeName","src":"791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6367,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6360,"name":"patientRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"813:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage_$","typeString":"mapping(address => struct PatientMedication.MedicationRecord storage ref[] storage ref)"}},"id":6363,"indexExpression":{"expression":{"id":6361,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"828:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"832:6:15","memberName":"sender","nodeType":"MemberAccess","src":"828:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"813:26:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage","typeString":"struct PatientMedication.MedicationRecord storage ref[] storage ref"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"840:6:15","memberName":"length","nodeType":"MemberAccess","src":"813:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"849:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"813:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"791:59:15"},{"assignments":[6370],"declarations":[{"constant":false,"id":6370,"mutability":"mutable","name":"newRecord","nameLocation":"887:9:15","nodeType":"VariableDeclaration","scope":6397,"src":"863:33:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MedicationRecord_$6331_memory_ptr","typeString":"struct PatientMedication.MedicationRecord"},"typeName":{"id":6369,"nodeType":"UserDefinedTypeName","pathNode":{"id":6368,"name":"MedicationRecord","nameLocations":["863:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":6331,"src":"863:16:15"},"referencedDeclaration":6331,"src":"863:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_MedicationRecord_$6331_storage_ptr","typeString":"struct PatientMedication.MedicationRecord"}},"visibility":"internal"}],"id":6381,"initialValue":{"arguments":[{"id":6372,"name":"newRecordId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"941:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6373,"name":"_medicationName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"983:15:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6374,"name":"_dosage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"1021:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6375,"name":"_instructions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"1057:13:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6376,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1096:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1102:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"1096:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6378,"name":"_prescribingDoctor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"1145:18:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6379,"name":"_receipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"1187:8:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6371,"name":"MedicationRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"899:16:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MedicationRecord_$6331_storage_ptr_$","typeString":"type(struct PatientMedication.MedicationRecord storage pointer)"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["931:8:15","967:14:15","1013:6:15","1043:12:15","1085:9:15","1126:17:15","1178:7:15"],"names":["recordId","medicationName","dosage","instructions","issueDate","prescribingDoctor","receipt"],"nodeType":"FunctionCall","src":"899:308:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MedicationRecord_$6331_memory_ptr","typeString":"struct PatientMedication.MedicationRecord memory"}},"nodeType":"VariableDeclarationStatement","src":"863:344:15"},{"expression":{"arguments":[{"id":6387,"name":"newRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"1252:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_MedicationRecord_$6331_memory_ptr","typeString":"struct PatientMedication.MedicationRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MedicationRecord_$6331_memory_ptr","typeString":"struct PatientMedication.MedicationRecord memory"}],"expression":{"baseExpression":{"id":6382,"name":"patientRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"1220:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage_$","typeString":"mapping(address => struct PatientMedication.MedicationRecord storage ref[] storage ref)"}},"id":6385,"indexExpression":{"expression":{"id":6383,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1235:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1239:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1235:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1220:26:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage","typeString":"struct PatientMedication.MedicationRecord storage ref[] storage ref"}},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1247:4:15","memberName":"push","nodeType":"MemberAccess","src":"1220:31:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage_ptr_$_t_struct$_MedicationRecord_$6331_storage_$returns$__$attached_to$_t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage_ptr_$","typeString":"function (struct PatientMedication.MedicationRecord storage ref[] storage pointer,struct PatientMedication.MedicationRecord storage ref)"}},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6389,"nodeType":"ExpressionStatement","src":"1220:42:15"},{"eventCall":{"arguments":[{"expression":{"id":6391,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1302:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1306:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1302:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6393,"name":"newRecordId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"1314:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6394,"name":"_medicationName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"1327:15:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6390,"name":"MedicationRecordAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"1280:21:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1280:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6396,"nodeType":"EmitStatement","src":"1275:68:15"}]},"functionSelector":"e38682b4","id":6398,"implemented":true,"kind":"function","modifiers":[],"name":"addMedicationRecord","nameLocation":"560:19:15","nodeType":"FunctionDefinition","parameters":{"id":6356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6347,"mutability":"mutable","name":"_medicationName","nameLocation":"604:15:15","nodeType":"VariableDeclaration","scope":6398,"src":"590:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6346,"name":"string","nodeType":"ElementaryTypeName","src":"590:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6349,"mutability":"mutable","name":"_dosage","nameLocation":"644:7:15","nodeType":"VariableDeclaration","scope":6398,"src":"630:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6348,"name":"string","nodeType":"ElementaryTypeName","src":"630:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6351,"mutability":"mutable","name":"_instructions","nameLocation":"676:13:15","nodeType":"VariableDeclaration","scope":6398,"src":"662:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6350,"name":"string","nodeType":"ElementaryTypeName","src":"662:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6353,"mutability":"mutable","name":"_prescribingDoctor","nameLocation":"714:18:15","nodeType":"VariableDeclaration","scope":6398,"src":"700:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6352,"name":"string","nodeType":"ElementaryTypeName","src":"700:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6355,"mutability":"mutable","name":"_receipt","nameLocation":"757:8:15","nodeType":"VariableDeclaration","scope":6398,"src":"743:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6354,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"579:193:15"},"returnParameters":{"id":6357,"nodeType":"ParameterList","parameters":[],"src":"780:0:15"},"scope":6426,"src":"551:800:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6410,"nodeType":"Block","src":"1473:52:15","statements":[{"expression":{"baseExpression":{"id":6405,"name":"patientRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"1491:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage_$","typeString":"mapping(address => struct PatientMedication.MedicationRecord storage ref[] storage ref)"}},"id":6408,"indexExpression":{"expression":{"id":6406,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1506:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1510:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1506:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1491:26:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage","typeString":"struct PatientMedication.MedicationRecord storage ref[] storage ref"}},"functionReturnParameters":6404,"id":6409,"nodeType":"Return","src":"1484:33:15"}]},"functionSelector":"fe4ae9b4","id":6411,"implemented":true,"kind":"function","modifiers":[],"name":"getMyMedicationRecords","nameLocation":"1368:22:15","nodeType":"FunctionDefinition","parameters":{"id":6399,"nodeType":"ParameterList","parameters":[],"src":"1390:2:15"},"returnParameters":{"id":6404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6411,"src":"1441:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr","typeString":"struct PatientMedication.MedicationRecord[]"},"typeName":{"baseType":{"id":6401,"nodeType":"UserDefinedTypeName","pathNode":{"id":6400,"name":"MedicationRecord","nameLocations":["1441:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":6331,"src":"1441:16:15"},"referencedDeclaration":6331,"src":"1441:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_MedicationRecord_$6331_storage_ptr","typeString":"struct PatientMedication.MedicationRecord"}},"id":6402,"nodeType":"ArrayTypeName","src":"1441:18:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage_ptr","typeString":"struct PatientMedication.MedicationRecord[]"}},"visibility":"internal"}],"src":"1440:27:15"},"scope":6426,"src":"1359:166:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6424,"nodeType":"Block","src":"1670:50:15","statements":[{"expression":{"baseExpression":{"id":6420,"name":"patientRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"1688:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage_$","typeString":"mapping(address => struct PatientMedication.MedicationRecord storage ref[] storage ref)"}},"id":6422,"indexExpression":{"id":6421,"name":"_patient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"1703:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1688:24:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage","typeString":"struct PatientMedication.MedicationRecord storage ref[] storage ref"}},"functionReturnParameters":6419,"id":6423,"nodeType":"Return","src":"1681:31:15"}]},"functionSelector":"5cba966f","id":6425,"implemented":true,"kind":"function","modifiers":[],"name":"getPatientMedicationRecords","nameLocation":"1544:27:15","nodeType":"FunctionDefinition","parameters":{"id":6414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6413,"mutability":"mutable","name":"_patient","nameLocation":"1580:8:15","nodeType":"VariableDeclaration","scope":6425,"src":"1572:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6412,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1571:18:15"},"returnParameters":{"id":6419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6425,"src":"1638:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr","typeString":"struct PatientMedication.MedicationRecord[]"},"typeName":{"baseType":{"id":6416,"nodeType":"UserDefinedTypeName","pathNode":{"id":6415,"name":"MedicationRecord","nameLocations":["1638:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":6331,"src":"1638:16:15"},"referencedDeclaration":6331,"src":"1638:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_MedicationRecord_$6331_storage_ptr","typeString":"struct PatientMedication.MedicationRecord"}},"id":6417,"nodeType":"ArrayTypeName","src":"1638:18:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MedicationRecord_$6331_storage_$dyn_storage_ptr","typeString":"struct PatientMedication.MedicationRecord[]"}},"visibility":"internal"}],"src":"1637:27:15"},"scope":6426,"src":"1535:185:15","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":6427,"src":"61:1662:15","usedErrors":[],"usedEvents":[6345]}],"src":"33:1692:15"},"id":15},"contracts/TicketMaster.sol":{"ast":{"absolutePath":"contracts/TicketMaster.sol","exportedSymbols":{"Context":[1511],"ERC165":[2787],"ERC721":[1241],"ERC721Utils":[1481],"IERC165":[2799],"IERC721":[1358],"IERC721Errors":[237],"IERC721Metadata":[1404],"Ownable":[147],"Strings":[2763],"TicketMaster":[7128]},"id":7129,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6428,"literals":["solidity",">=","0.8",".2","<","0.9",".0"],"nodeType":"PragmaDirective","src":"33:31:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":6429,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7129,"sourceUnit":1242,"src":"68:57:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6430,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7129,"sourceUnit":148,"src":"127:52:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6431,"name":"ERC721","nameLocations":["208:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"208:6:16"},"id":6432,"nodeType":"InheritanceSpecifier","src":"208:6:16"},{"baseName":{"id":6433,"name":"Ownable","nameLocations":["216:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"216:7:16"},"id":6434,"nodeType":"InheritanceSpecifier","src":"216:7:16"}],"canonicalName":"TicketMaster","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7128,"linearizedBaseContracts":[7128,147,1241,237,1404,1358,2787,2799,1511],"name":"TicketMaster","nameLocation":"192:12:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"953865c1","id":6436,"mutability":"mutable","name":"totalOccasions","nameLocation":"246:14:16","nodeType":"VariableDeclaration","scope":7128,"src":"231:29:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6435,"name":"uint256","nodeType":"ElementaryTypeName","src":"231:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"18160ddd","id":6438,"mutability":"mutable","name":"totalSupply","nameLocation":"282:11:16","nodeType":"VariableDeclaration","scope":7128,"src":"267:26:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6437,"name":"uint256","nodeType":"ElementaryTypeName","src":"267:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"TicketMaster.Occasion","id":6461,"members":[{"constant":false,"id":6440,"mutability":"mutable","name":"id","nameLocation":"337:2:16","nodeType":"VariableDeclaration","scope":6461,"src":"329:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6439,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6442,"mutability":"mutable","name":"name","nameLocation":"357:4:16","nodeType":"VariableDeclaration","scope":6461,"src":"350:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6441,"name":"string","nodeType":"ElementaryTypeName","src":"350:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6444,"mutability":"mutable","name":"cost","nameLocation":"380:4:16","nodeType":"VariableDeclaration","scope":6461,"src":"372:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6443,"name":"uint256","nodeType":"ElementaryTypeName","src":"372:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6446,"mutability":"mutable","name":"tickets","nameLocation":"403:7:16","nodeType":"VariableDeclaration","scope":6461,"src":"395:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6445,"name":"uint256","nodeType":"ElementaryTypeName","src":"395:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6448,"mutability":"mutable","name":"maxTickets","nameLocation":"429:10:16","nodeType":"VariableDeclaration","scope":6461,"src":"421:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6447,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6450,"mutability":"mutable","name":"date","nameLocation":"457:4:16","nodeType":"VariableDeclaration","scope":6461,"src":"450:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6449,"name":"string","nodeType":"ElementaryTypeName","src":"450:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6452,"mutability":"mutable","name":"time","nameLocation":"479:4:16","nodeType":"VariableDeclaration","scope":6461,"src":"472:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6451,"name":"string","nodeType":"ElementaryTypeName","src":"472:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6454,"mutability":"mutable","name":"location","nameLocation":"501:8:16","nodeType":"VariableDeclaration","scope":6461,"src":"494:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6453,"name":"string","nodeType":"ElementaryTypeName","src":"494:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6456,"mutability":"mutable","name":"bannerImage","nameLocation":"527:11:16","nodeType":"VariableDeclaration","scope":6461,"src":"520:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6455,"name":"string","nodeType":"ElementaryTypeName","src":"520:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6458,"mutability":"mutable","name":"vrVideo","nameLocation":"556:7:16","nodeType":"VariableDeclaration","scope":6461,"src":"549:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6457,"name":"string","nodeType":"ElementaryTypeName","src":"549:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6460,"mutability":"mutable","name":"creator","nameLocation":"615:7:16","nodeType":"VariableDeclaration","scope":6461,"src":"607:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6459,"name":"address","nodeType":"ElementaryTypeName","src":"607:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Occasion","nameLocation":"309:8:16","nodeType":"StructDefinition","scope":7128,"src":"302:328:16","visibility":"public"},{"constant":false,"functionSelector":"61a5672d","id":6466,"mutability":"mutable","name":"occasions","nameLocation":"674:9:16","nodeType":"VariableDeclaration","scope":7128,"src":"638:45:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Occasion_$6461_storage_$","typeString":"mapping(uint256 => struct TicketMaster.Occasion)"},"typeName":{"id":6465,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6462,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"638:28:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Occasion_$6461_storage_$","typeString":"mapping(uint256 => struct TicketMaster.Occasion)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6464,"nodeType":"UserDefinedTypeName","pathNode":{"id":6463,"name":"Occasion","nameLocations":["657:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":6461,"src":"657:8:16"},"referencedDeclaration":6461,"src":"657:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Occasion_$6461_storage_ptr","typeString":"struct TicketMaster.Occasion"}}},"visibility":"public"},{"constant":false,"functionSelector":"af296da1","id":6472,"mutability":"mutable","name":"seatTaken","nameLocation":"745:9:16","nodeType":"VariableDeclaration","scope":7128,"src":"690:64:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(uint256 => mapping(uint256 => address))"},"typeName":{"id":6471,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6467,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"690:47:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(uint256 => mapping(uint256 => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6470,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6468,"name":"uint256","nodeType":"ElementaryTypeName","src":"717:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"709:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6469,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"constant":false,"functionSelector":"9cb04aef","id":6478,"mutability":"mutable","name":"hasBought","nameLocation":"813:9:16","nodeType":"VariableDeclaration","scope":7128,"src":"761:61:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":6477,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6473,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"761:44:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6476,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6474,"name":"address","nodeType":"ElementaryTypeName","src":"788:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"780:24:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6475,"name":"bool","nodeType":"ElementaryTypeName","src":"799:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"4e7497fc","id":6483,"mutability":"mutable","name":"seatsTaken","nameLocation":"866:10:16","nodeType":"VariableDeclaration","scope":7128,"src":"829:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"typeName":{"id":6482,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6479,"name":"uint256","nodeType":"ElementaryTypeName","src":"837:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"829:29:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6480,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6481,"nodeType":"ArrayTypeName","src":"848:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"a0415bb4","id":6489,"mutability":"mutable","name":"ticketExhausted","nameLocation":"935:15:16","nodeType":"VariableDeclaration","scope":7128,"src":"883:67:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"},"typeName":{"id":6488,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6484,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"883:44:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6487,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6485,"name":"uint256","nodeType":"ElementaryTypeName","src":"910:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"902:24:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6486,"name":"bool","nodeType":"ElementaryTypeName","src":"921:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"c233e22b","id":6495,"mutability":"mutable","name":"resaleAllowed","nameLocation":"1009:13:16","nodeType":"VariableDeclaration","scope":7128,"src":"957:65:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"},"typeName":{"id":6494,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6490,"name":"uint256","nodeType":"ElementaryTypeName","src":"965:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"957:44:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6493,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6491,"name":"uint256","nodeType":"ElementaryTypeName","src":"984:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"976:24:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6492,"name":"bool","nodeType":"ElementaryTypeName","src":"995:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"7cea357c","id":6500,"mutability":"mutable","name":"creatorEvents","nameLocation":"1066:13:16","nodeType":"VariableDeclaration","scope":7128,"src":"1029:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":6499,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6496,"name":"address","nodeType":"ElementaryTypeName","src":"1037:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1029:29:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1048:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6498,"nodeType":"ArrayTypeName","src":"1048:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"5b6966ac","id":6506,"mutability":"mutable","name":"seatToTokenId","nameLocation":"1143:13:16","nodeType":"VariableDeclaration","scope":7128,"src":"1088:68:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"},"typeName":{"id":6505,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1096:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1088:47:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6504,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6502,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1107:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1126:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"body":{"id":6517,"nodeType":"Block","src":"1225:2:16","statements":[]},"id":6518,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"546f6b656e","id":6509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1186:7:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73","typeString":"literal_string \"Token\""},"value":"Token"},{"hexValue":"5469636b6574","id":6510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1195:8:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_adc9ea83d7d69e1f89766083ed31732a556805d45b99c35409751054a912085a","typeString":"literal_string \"Ticket\""},"value":"Ticket"}],"id":6511,"kind":"baseConstructorSpecifier","modifierName":{"id":6508,"name":"ERC721","nameLocations":["1179:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"1179:6:16"},"nodeType":"ModifierInvocation","src":"1179:25:16"},{"arguments":[{"expression":{"id":6513,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1213:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1217:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1213:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6515,"kind":"baseConstructorSpecifier","modifierName":{"id":6512,"name":"Ownable","nameLocations":["1205:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1205:7:16"},"nodeType":"ModifierInvocation","src":"1205:19:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6507,"nodeType":"ParameterList","parameters":[],"src":"1176:2:16"},"returnParameters":{"id":6516,"nodeType":"ParameterList","parameters":[],"src":"1225:0:16"},"scope":7128,"src":"1165:62:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6567,"nodeType":"Block","src":"1488:274:16","statements":[{"expression":{"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1499:16:16","subExpression":{"id":6537,"name":"totalOccasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"1499:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6539,"nodeType":"ExpressionStatement","src":"1499:16:16"},{"expression":{"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6540,"name":"occasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"1526:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Occasion_$6461_storage_$","typeString":"mapping(uint256 => struct TicketMaster.Occasion storage ref)"}},"id":6542,"indexExpression":{"id":6541,"name":"totalOccasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"1536:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1526:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Occasion_$6461_storage","typeString":"struct TicketMaster.Occasion storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6544,"name":"totalOccasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"1577:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6545,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"1593:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6546,"name":"_cost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"1600:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6547,"name":"_maxTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"1607:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6548,"name":"_maxTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"1620:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6549,"name":"_date","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"1633:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6550,"name":"_time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"1640:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6551,"name":"_location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"1647:9:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6552,"name":"_bannerImage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"1658:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"","id":6553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1672:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"expression":{"id":6554,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1676:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1680:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1676:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_address","typeString":"address"}],"id":6543,"name":"Occasion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"1554:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Occasion_$6461_storage_ptr_$","typeString":"type(struct TicketMaster.Occasion storage pointer)"}},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:143:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Occasion_$6461_memory_ptr","typeString":"struct TicketMaster.Occasion memory"}},"src":"1526:171:16","typeDescriptions":{"typeIdentifier":"t_struct$_Occasion_$6461_storage","typeString":"struct TicketMaster.Occasion storage ref"}},"id":6558,"nodeType":"ExpressionStatement","src":"1526:171:16"},{"expression":{"arguments":[{"id":6564,"name":"totalOccasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"1739:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6559,"name":"creatorEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"1708:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6562,"indexExpression":{"expression":{"id":6560,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1722:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1722:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1708:25:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1734:4:16","memberName":"push","nodeType":"MemberAccess","src":"1708:30:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1708:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6566,"nodeType":"ExpressionStatement","src":"1708:46:16"}]},"functionSelector":"afb5604e","id":6568,"implemented":true,"kind":"function","modifiers":[{"id":6535,"kind":"modifierInvocation","modifierName":{"id":6534,"name":"onlyOwner","nameLocations":["1478:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1478:9:16"},"nodeType":"ModifierInvocation","src":"1478:9:16"}],"name":"list","nameLocation":"1244:4:16","nodeType":"FunctionDefinition","parameters":{"id":6533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"mutability":"mutable","name":"_name","nameLocation":"1273:5:16","nodeType":"VariableDeclaration","scope":6568,"src":"1259:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6519,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6522,"mutability":"mutable","name":"_cost","nameLocation":"1297:5:16","nodeType":"VariableDeclaration","scope":6568,"src":"1289:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1289:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6524,"mutability":"mutable","name":"_maxTickets","nameLocation":"1321:11:16","nodeType":"VariableDeclaration","scope":6568,"src":"1313:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6523,"name":"uint256","nodeType":"ElementaryTypeName","src":"1313:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6526,"mutability":"mutable","name":"_date","nameLocation":"1357:5:16","nodeType":"VariableDeclaration","scope":6568,"src":"1343:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6525,"name":"string","nodeType":"ElementaryTypeName","src":"1343:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6528,"mutability":"mutable","name":"_time","nameLocation":"1387:5:16","nodeType":"VariableDeclaration","scope":6568,"src":"1373:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6527,"name":"string","nodeType":"ElementaryTypeName","src":"1373:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6530,"mutability":"mutable","name":"_location","nameLocation":"1417:9:16","nodeType":"VariableDeclaration","scope":6568,"src":"1403:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6529,"name":"string","nodeType":"ElementaryTypeName","src":"1403:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6532,"mutability":"mutable","name":"_bannerImage","nameLocation":"1451:12:16","nodeType":"VariableDeclaration","scope":6568,"src":"1437:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6531,"name":"string","nodeType":"ElementaryTypeName","src":"1437:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1248:222:16"},"returnParameters":{"id":6536,"nodeType":"ParameterList","parameters":[],"src":"1488:0:16"},"scope":7128,"src":"1235:527:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6685,"nodeType":"Block","src":"1827:731:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6576,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"1846:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1853:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6579,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"1858:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6580,"name":"totalOccasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"1865:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1858:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1846:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f63636173696f6e204944","id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1881:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330","typeString":"literal_string \"Invalid occasion ID\""},"value":"Invalid occasion ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330","typeString":"literal_string \"Invalid occasion ID\""}],"id":6575,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1838:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1838:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6585,"nodeType":"ExpressionStatement","src":"1838:65:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1922:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1926:5:16","memberName":"value","nodeType":"MemberAccess","src":"1922:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":6589,"name":"occasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"1935:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Occasion_$6461_storage_$","typeString":"mapping(uint256 => struct TicketMaster.Occasion storage ref)"}},"id":6591,"indexExpression":{"id":6590,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"1945:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1935:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Occasion_$6461_storage","typeString":"struct TicketMaster.Occasion storage ref"}},"id":6592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1950:4:16","memberName":"cost","nodeType":"MemberAccess","referencedDeclaration":6444,"src":"1935:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1922:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204554482073656e74","id":6594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1956:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","typeString":"literal_string \"Insufficient ETH sent\""},"value":"Insufficient ETH sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","typeString":"literal_string \"Insufficient ETH sent\""}],"id":6586,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1914:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6596,"nodeType":"ExpressionStatement","src":"1914:66:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":6598,"name":"seatTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"1999:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(uint256 => mapping(uint256 => address))"}},"id":6600,"indexExpression":{"id":6599,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"2009:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1999:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":6602,"indexExpression":{"id":6601,"name":"_seat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"2014:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1999:21:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2032:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2024:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6603,"name":"address","nodeType":"ElementaryTypeName","src":"2024:7:16","typeDescriptions":{}}},"id":6606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2024:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1999:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5365617420616c72656164792074616b656e","id":6608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2036:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77","typeString":"literal_string \"Seat already taken\""},"value":"Seat already taken"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77","typeString":"literal_string \"Seat already taken\""}],"id":6597,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1991:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1991:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6610,"nodeType":"ExpressionStatement","src":"1991:66:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6612,"name":"_seat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"2076:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":6613,"name":"occasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"2085:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Occasion_$6461_storage_$","typeString":"mapping(uint256 => struct TicketMaster.Occasion storage ref)"}},"id":6615,"indexExpression":{"id":6614,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"2095:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2085:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Occasion_$6461_storage","typeString":"struct TicketMaster.Occasion storage ref"}},"id":6616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2100:10:16","memberName":"maxTickets","nodeType":"MemberAccess","referencedDeclaration":6448,"src":"2085:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2076:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642073656174206e756d626572","id":6618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2112:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6","typeString":"literal_string \"Invalid seat number\""},"value":"Invalid seat number"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6","typeString":"literal_string \"Invalid seat number\""}],"id":6611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2068:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6620,"nodeType":"ExpressionStatement","src":"2068:66:16"},{"expression":{"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2147:13:16","subExpression":{"id":6621,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"2147:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6623,"nodeType":"ExpressionStatement","src":"2147:13:16"},{"expression":{"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"2171:24:16","subExpression":{"expression":{"baseExpression":{"id":6624,"name":"occasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"2171:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Occasion_$6461_storage_$","typeString":"mapping(uint256 => struct TicketMaster.Occasion storage ref)"}},"id":6626,"indexExpression":{"id":6625,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"2181:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2171:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Occasion_$6461_storage","typeString":"struct TicketMaster.Occasion storage ref"}},"id":6627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2186:7:16","memberName":"tickets","nodeType":"MemberAccess","referencedDeclaration":6446,"src":"2171:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6629,"nodeType":"ExpressionStatement","src":"2171:24:16"},{"expression":{"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6630,"name":"hasBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"2206:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":6634,"indexExpression":{"id":6631,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"2216:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2206:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6635,"indexExpression":{"expression":{"id":6632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2221:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2225:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2221:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2206:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2235:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2206:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6638,"nodeType":"ExpressionStatement","src":"2206:33:16"},{"expression":{"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6639,"name":"seatTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"2250:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(uint256 => mapping(uint256 => address))"}},"id":6642,"indexExpression":{"id":6640,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"2260:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2250:14:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":6643,"indexExpression":{"id":6641,"name":"_seat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"2265:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2250:21:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6644,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2274:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2278:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2274:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2250:34:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6647,"nodeType":"ExpressionStatement","src":"2250:34:16"},{"expression":{"arguments":[{"id":6652,"name":"_seat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"2316:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6648,"name":"seatsTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6483,"src":"2295:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":6650,"indexExpression":{"id":6649,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"2306:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2295:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2311:4:16","memberName":"push","nodeType":"MemberAccess","src":"2295:20:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2295:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6654,"nodeType":"ExpressionStatement","src":"2295:27:16"},{"expression":{"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6655,"name":"resaleAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"2333:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"}},"id":6658,"indexExpression":{"id":6656,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"2347:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2333:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6659,"indexExpression":{"id":6657,"name":"_seat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"2352:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2333:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2361:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2333:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6662,"nodeType":"ExpressionStatement","src":"2333:33:16"},{"expression":{"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6663,"name":"ticketExhausted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"2377:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"}},"id":6666,"indexExpression":{"id":6664,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"2393:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2377:20:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6667,"indexExpression":{"id":6665,"name":"_seat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"2398:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2377:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2407:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2377:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6670,"nodeType":"ExpressionStatement","src":"2377:35:16"},{"expression":{"arguments":[{"expression":{"id":6672,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2435:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2439:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2435:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6674,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"2447:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6671,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[919,949],"referencedDeclaration":919,"src":"2425:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2425:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6676,"nodeType":"ExpressionStatement","src":"2425:34:16"},{"expression":{"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6677,"name":"seatToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"2470:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":6680,"indexExpression":{"id":6678,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"2484:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2470:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6681,"indexExpression":{"id":6679,"name":"_seat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"2489:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2470:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6682,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"2498:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2470:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6684,"nodeType":"ExpressionStatement","src":"2470:39:16"}]},"functionSelector":"1b2ef1ca","id":6686,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1779:4:16","nodeType":"FunctionDefinition","parameters":{"id":6573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6570,"mutability":"mutable","name":"_id","nameLocation":"1792:3:16","nodeType":"VariableDeclaration","scope":6686,"src":"1784:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1784:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6572,"mutability":"mutable","name":"_seat","nameLocation":"1805:5:16","nodeType":"VariableDeclaration","scope":6686,"src":"1797:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1783:28:16"},"returnParameters":{"id":6574,"nodeType":"ParameterList","parameters":[],"src":"1827:0:16"},"scope":7128,"src":"1770:788:16","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":6698,"nodeType":"Block","src":"2638:40:16","statements":[{"expression":{"baseExpression":{"id":6694,"name":"occasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"2656:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Occasion_$6461_storage_$","typeString":"mapping(uint256 => struct TicketMaster.Occasion storage ref)"}},"id":6696,"indexExpression":{"id":6695,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"2666:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2656:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Occasion_$6461_storage","typeString":"struct TicketMaster.Occasion storage ref"}},"functionReturnParameters":6693,"id":6697,"nodeType":"Return","src":"2649:21:16"}]},"functionSelector":"74bc8656","id":6699,"implemented":true,"kind":"function","modifiers":[],"name":"getOccasion","nameLocation":"2575:11:16","nodeType":"FunctionDefinition","parameters":{"id":6689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6688,"mutability":"mutable","name":"_id","nameLocation":"2595:3:16","nodeType":"VariableDeclaration","scope":6699,"src":"2587:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6687,"name":"uint256","nodeType":"ElementaryTypeName","src":"2587:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2586:13:16"},"returnParameters":{"id":6693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6699,"src":"2621:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Occasion_$6461_memory_ptr","typeString":"struct TicketMaster.Occasion"},"typeName":{"id":6691,"nodeType":"UserDefinedTypeName","pathNode":{"id":6690,"name":"Occasion","nameLocations":["2621:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":6461,"src":"2621:8:16"},"referencedDeclaration":6461,"src":"2621:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Occasion_$6461_storage_ptr","typeString":"struct TicketMaster.Occasion"}},"visibility":"internal"}],"src":"2620:17:16"},"scope":7128,"src":"2566:112:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6711,"nodeType":"Block","src":"2761:41:16","statements":[{"expression":{"baseExpression":{"id":6707,"name":"seatsTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6483,"src":"2779:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":6709,"indexExpression":{"id":6708,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"2790:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2779:15:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":6706,"id":6710,"nodeType":"Return","src":"2772:22:16"}]},"functionSelector":"0ef7ec74","id":6712,"implemented":true,"kind":"function","modifiers":[],"name":"getSeatsTaken","nameLocation":"2695:13:16","nodeType":"FunctionDefinition","parameters":{"id":6702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6701,"mutability":"mutable","name":"_id","nameLocation":"2717:3:16","nodeType":"VariableDeclaration","scope":6712,"src":"2709:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6700,"name":"uint256","nodeType":"ElementaryTypeName","src":"2709:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2708:13:16"},"returnParameters":{"id":6706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6712,"src":"2743:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6703,"name":"uint256","nodeType":"ElementaryTypeName","src":"2743:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6704,"nodeType":"ArrayTypeName","src":"2743:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2742:18:16"},"scope":7128,"src":"2686:116:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6862,"nodeType":"Block","src":"2906:877:16","statements":[{"assignments":[6727],"declarations":[{"constant":false,"id":6727,"mutability":"mutable","name":"eventIds","nameLocation":"2934:8:16","nodeType":"VariableDeclaration","scope":6862,"src":"2917:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6725,"name":"uint256","nodeType":"ElementaryTypeName","src":"2917:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6726,"nodeType":"ArrayTypeName","src":"2917:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6733,"initialValue":{"arguments":[{"id":6731,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"2959:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2945:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6728,"name":"uint256","nodeType":"ElementaryTypeName","src":"2949:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6729,"nodeType":"ArrayTypeName","src":"2949:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2945:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2917:54:16"},{"assignments":[6738],"declarations":[{"constant":false,"id":6738,"mutability":"mutable","name":"seatIds","nameLocation":"2999:7:16","nodeType":"VariableDeclaration","scope":6862,"src":"2982:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2982:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6737,"nodeType":"ArrayTypeName","src":"2982:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6744,"initialValue":{"arguments":[{"id":6742,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"3023:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3009:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6739,"name":"uint256","nodeType":"ElementaryTypeName","src":"3013:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6740,"nodeType":"ArrayTypeName","src":"3013:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2982:53:16"},{"assignments":[6746],"declarations":[{"constant":false,"id":6746,"mutability":"mutable","name":"count","nameLocation":"3054:5:16","nodeType":"VariableDeclaration","scope":6862,"src":"3046:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6745,"name":"uint256","nodeType":"ElementaryTypeName","src":"3046:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6748,"initialValue":{"hexValue":"30","id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3062:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3046:17:16"},{"body":{"id":6806,"nodeType":"Block","src":"3122:330:16","statements":[{"body":{"id":6804,"nodeType":"Block","src":"3188:253:16","statements":[{"assignments":[6773],"declarations":[{"constant":false,"id":6773,"mutability":"mutable","name":"seat","nameLocation":"3215:4:16","nodeType":"VariableDeclaration","scope":6804,"src":"3207:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6772,"name":"uint256","nodeType":"ElementaryTypeName","src":"3207:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6779,"initialValue":{"baseExpression":{"baseExpression":{"id":6774,"name":"seatsTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6483,"src":"3222:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":6776,"indexExpression":{"id":6775,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"3233:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3222:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6778,"indexExpression":{"id":6777,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6760,"src":"3236:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3222:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3207:31:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":6780,"name":"seatTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"3261:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(uint256 => mapping(uint256 => address))"}},"id":6782,"indexExpression":{"id":6781,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"3271:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3261:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":6784,"indexExpression":{"id":6783,"name":"seat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6773,"src":"3274:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3261:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6785,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"3283:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3261:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6803,"nodeType":"IfStatement","src":"3257:169:16","trueBody":{"id":6802,"nodeType":"Block","src":"3290:136:16","statements":[{"expression":{"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6787,"name":"eventIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"3313:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6789,"indexExpression":{"id":6788,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"3322:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3313:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6790,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"3331:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3313:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6792,"nodeType":"ExpressionStatement","src":"3313:19:16"},{"expression":{"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6793,"name":"seatIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"3355:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6795,"indexExpression":{"id":6794,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"3363:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3355:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6796,"name":"seat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6773,"src":"3372:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3355:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6798,"nodeType":"ExpressionStatement","src":"3355:21:16"},{"expression":{"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3399:7:16","subExpression":{"id":6799,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"3399:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6801,"nodeType":"ExpressionStatement","src":"3399:7:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6763,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6760,"src":"3157:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":6764,"name":"seatsTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6483,"src":"3161:10:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":6766,"indexExpression":{"id":6765,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"3172:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3161:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3175:6:16","memberName":"length","nodeType":"MemberAccess","src":"3161:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3157:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6805,"initializationExpression":{"assignments":[6760],"declarations":[{"constant":false,"id":6760,"mutability":"mutable","name":"j","nameLocation":"3150:1:16","nodeType":"VariableDeclaration","scope":6805,"src":"3142:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6759,"name":"uint256","nodeType":"ElementaryTypeName","src":"3142:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6762,"initialValue":{"hexValue":"30","id":6761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3154:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3142:13:16"},"loopExpression":{"expression":{"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3183:3:16","subExpression":{"id":6769,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6760,"src":"3183:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6771,"nodeType":"ExpressionStatement","src":"3183:3:16"},"nodeType":"ForStatement","src":"3137:304:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"3096:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6754,"name":"totalOccasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"3101:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3096:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6807,"initializationExpression":{"assignments":[6750],"declarations":[{"constant":false,"id":6750,"mutability":"mutable","name":"i","nameLocation":"3089:1:16","nodeType":"VariableDeclaration","scope":6807,"src":"3081:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6749,"name":"uint256","nodeType":"ElementaryTypeName","src":"3081:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6752,"initialValue":{"hexValue":"31","id":6751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3093:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"3081:13:16"},"loopExpression":{"expression":{"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3117:3:16","subExpression":{"id":6756,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"3117:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6758,"nodeType":"ExpressionStatement","src":"3117:3:16"},"nodeType":"ForStatement","src":"3076:376:16"},{"assignments":[6812],"declarations":[{"constant":false,"id":6812,"mutability":"mutable","name":"finalEventIds","nameLocation":"3481:13:16","nodeType":"VariableDeclaration","scope":6862,"src":"3464:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6810,"name":"uint256","nodeType":"ElementaryTypeName","src":"3464:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6811,"nodeType":"ArrayTypeName","src":"3464:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6818,"initialValue":{"arguments":[{"id":6816,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"3511:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3497:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6813,"name":"uint256","nodeType":"ElementaryTypeName","src":"3501:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6814,"nodeType":"ArrayTypeName","src":"3501:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3497:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3464:53:16"},{"assignments":[6823],"declarations":[{"constant":false,"id":6823,"mutability":"mutable","name":"finalSeatIds","nameLocation":"3545:12:16","nodeType":"VariableDeclaration","scope":6862,"src":"3528:29:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6821,"name":"uint256","nodeType":"ElementaryTypeName","src":"3528:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6822,"nodeType":"ArrayTypeName","src":"3528:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6829,"initialValue":{"arguments":[{"id":6827,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"3574:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3560:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6824,"name":"uint256","nodeType":"ElementaryTypeName","src":"3564:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6825,"nodeType":"ArrayTypeName","src":"3564:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3528:52:16"},{"body":{"id":6856,"nodeType":"Block","src":"3627:100:16","statements":[{"expression":{"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6840,"name":"finalEventIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"3642:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6842,"indexExpression":{"id":6841,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"3656:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3642:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6843,"name":"eventIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"3661:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6845,"indexExpression":{"id":6844,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"3670:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3661:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3642:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6847,"nodeType":"ExpressionStatement","src":"3642:30:16"},{"expression":{"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6848,"name":"finalSeatIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"3687:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6850,"indexExpression":{"id":6849,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"3700:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3687:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6851,"name":"seatIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"3705:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6853,"indexExpression":{"id":6852,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"3713:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3705:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3687:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6855,"nodeType":"ExpressionStatement","src":"3687:28:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6834,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"3611:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6835,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"3615:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3611:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6857,"initializationExpression":{"assignments":[6831],"declarations":[{"constant":false,"id":6831,"mutability":"mutable","name":"k","nameLocation":"3604:1:16","nodeType":"VariableDeclaration","scope":6857,"src":"3596:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6830,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6833,"initialValue":{"hexValue":"30","id":6832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3596:13:16"},"loopExpression":{"expression":{"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3622:3:16","subExpression":{"id":6837,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"3622:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6839,"nodeType":"ExpressionStatement","src":"3622:3:16"},"nodeType":"ForStatement","src":"3591:136:16"},{"expression":{"components":[{"id":6858,"name":"finalEventIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"3747:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":6859,"name":"finalSeatIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"3762:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":6860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3746:29:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":6722,"id":6861,"nodeType":"Return","src":"3739:36:16"}]},"functionSelector":"0484a22f","id":6863,"implemented":true,"kind":"function","modifiers":[],"name":"getUserTickets","nameLocation":"2819:14:16","nodeType":"FunctionDefinition","parameters":{"id":6715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6714,"mutability":"mutable","name":"_user","nameLocation":"2842:5:16","nodeType":"VariableDeclaration","scope":6863,"src":"2834:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6713,"name":"address","nodeType":"ElementaryTypeName","src":"2834:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2833:15:16"},"returnParameters":{"id":6722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6863,"src":"2870:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6716,"name":"uint256","nodeType":"ElementaryTypeName","src":"2870:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6717,"nodeType":"ArrayTypeName","src":"2870:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6863,"src":"2888:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6719,"name":"uint256","nodeType":"ElementaryTypeName","src":"2888:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6720,"nodeType":"ArrayTypeName","src":"2888:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2869:36:16"},"scope":7128,"src":"2810:973:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6875,"nodeType":"Block","src":"3876:49:16","statements":[{"expression":{"baseExpression":{"id":6871,"name":"creatorEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6500,"src":"3894:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6873,"indexExpression":{"id":6872,"name":"_creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"3908:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3894:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":6870,"id":6874,"nodeType":"Return","src":"3887:30:16"}]},"functionSelector":"72843282","id":6876,"implemented":true,"kind":"function","modifiers":[],"name":"getEventsCreatedBy","nameLocation":"3800:18:16","nodeType":"FunctionDefinition","parameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"_creator","nameLocation":"3827:8:16","nodeType":"VariableDeclaration","scope":6876,"src":"3819:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6864,"name":"address","nodeType":"ElementaryTypeName","src":"3819:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3818:18:16"},"returnParameters":{"id":6870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6876,"src":"3858:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6867,"name":"uint256","nodeType":"ElementaryTypeName","src":"3858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6868,"nodeType":"ArrayTypeName","src":"3858:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3857:18:16"},"scope":7128,"src":"3791:134:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6936,"nodeType":"Block","src":"4005:359:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6886,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"4024:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4036:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4024:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6889,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"4041:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6890,"name":"totalOccasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"4053:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4041:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4024:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206576656e74204944","id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4069:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73","typeString":"literal_string \"Invalid event ID\""},"value":"Invalid event ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73","typeString":"literal_string \"Invalid event ID\""}],"id":6885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4016:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:72:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6895,"nodeType":"ExpressionStatement","src":"4016:72:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":6897,"name":"seatTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"4107:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(uint256 => mapping(uint256 => address))"}},"id":6899,"indexExpression":{"id":6898,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"4117:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4107:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":6901,"indexExpression":{"id":6900,"name":"_seatId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"4127:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4107:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4147:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4139:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6902,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:16","typeDescriptions":{}}},"id":6905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4107:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656174206e6f74206f63637570696564","id":6907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4151:19:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702","typeString":"literal_string \"Seat not occupied\""},"value":"Seat not occupied"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702","typeString":"literal_string \"Seat not occupied\""}],"id":6896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4099:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4099:72:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6909,"nodeType":"ExpressionStatement","src":"4099:72:16"},{"expression":{"arguments":[{"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4192:35:16","subExpression":{"baseExpression":{"baseExpression":{"id":6911,"name":"ticketExhausted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"4193:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"}},"id":6913,"indexExpression":{"id":6912,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"4209:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4193:25:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6915,"indexExpression":{"id":6914,"name":"_seatId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"4219:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4193:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469636b657420616c72656164792075736564","id":6917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4229:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10","typeString":"literal_string \"Ticket already used\""},"value":"Ticket already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10","typeString":"literal_string \"Ticket already used\""}],"id":6910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4184:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4184:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6919,"nodeType":"ExpressionStatement","src":"4184:67:16"},{"expression":{"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6920,"name":"ticketExhausted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"4264:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"}},"id":6923,"indexExpression":{"id":6921,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"4280:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4264:25:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6924,"indexExpression":{"id":6922,"name":"_seatId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"4290:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4264:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4301:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4264:41:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6927,"nodeType":"ExpressionStatement","src":"4264:41:16"},{"expression":{"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6928,"name":"resaleAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"4316:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"}},"id":6931,"indexExpression":{"id":6929,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"4330:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4316:23:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6932,"indexExpression":{"id":6930,"name":"_seatId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"4340:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4316:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4351:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4316:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6935,"nodeType":"ExpressionStatement","src":"4316:40:16"}]},"functionSelector":"6b787f09","id":6937,"implemented":true,"kind":"function","modifiers":[{"id":6883,"kind":"modifierInvocation","modifierName":{"id":6882,"name":"onlyOwner","nameLocations":["3995:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3995:9:16"},"nodeType":"ModifierInvocation","src":"3995:9:16"}],"name":"scanTicket","nameLocation":"3942:10:16","nodeType":"FunctionDefinition","parameters":{"id":6881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"_eventId","nameLocation":"3961:8:16","nodeType":"VariableDeclaration","scope":6937,"src":"3953:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6877,"name":"uint256","nodeType":"ElementaryTypeName","src":"3953:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6880,"mutability":"mutable","name":"_seatId","nameLocation":"3979:7:16","nodeType":"VariableDeclaration","scope":6937,"src":"3971:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6879,"name":"uint256","nodeType":"ElementaryTypeName","src":"3971:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3952:35:16"},"returnParameters":{"id":6884,"nodeType":"ParameterList","parameters":[],"src":"4005:0:16"},"scope":7128,"src":"3933:431:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6974,"nodeType":"Block","src":"4436:229:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":6945,"name":"seatTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"4455:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(uint256 => mapping(uint256 => address))"}},"id":6947,"indexExpression":{"id":6946,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"4465:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4455:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":6949,"indexExpression":{"id":6948,"name":"_seatId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"4475:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4455:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6950,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4487:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4491:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4487:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4455:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746865206f776e6572206f6620746865207469636b6574","id":6953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4499:29:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f","typeString":"literal_string \"Not the owner of the ticket\""},"value":"Not the owner of the ticket"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f","typeString":"literal_string \"Not the owner of the ticket\""}],"id":6944,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4447:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4447:82:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6955,"nodeType":"ExpressionStatement","src":"4447:82:16"},{"expression":{"arguments":[{"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4548:35:16","subExpression":{"baseExpression":{"baseExpression":{"id":6957,"name":"ticketExhausted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"4549:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"}},"id":6959,"indexExpression":{"id":6958,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"4565:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4549:25:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6961,"indexExpression":{"id":6960,"name":"_seatId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"4575:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4549:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469636b657420616c72656164792075736564","id":6963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4585:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10","typeString":"literal_string \"Ticket already used\""},"value":"Ticket already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10","typeString":"literal_string \"Ticket already used\""}],"id":6956,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4540:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4540:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6965,"nodeType":"ExpressionStatement","src":"4540:67:16"},{"expression":{"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":6966,"name":"resaleAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"4618:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"}},"id":6969,"indexExpression":{"id":6967,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"4632:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4618:23:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6970,"indexExpression":{"id":6968,"name":"_seatId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"4642:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4618:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4653:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4618:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6973,"nodeType":"ExpressionStatement","src":"4618:39:16"}]},"functionSelector":"36cf43b8","id":6975,"implemented":true,"kind":"function","modifiers":[],"name":"enableResale","nameLocation":"4381:12:16","nodeType":"FunctionDefinition","parameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6939,"mutability":"mutable","name":"_eventId","nameLocation":"4402:8:16","nodeType":"VariableDeclaration","scope":6975,"src":"4394:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6938,"name":"uint256","nodeType":"ElementaryTypeName","src":"4394:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6941,"mutability":"mutable","name":"_seatId","nameLocation":"4420:7:16","nodeType":"VariableDeclaration","scope":6975,"src":"4412:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6940,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4393:35:16"},"returnParameters":{"id":6943,"nodeType":"ParameterList","parameters":[],"src":"4436:0:16"},"scope":7128,"src":"4372:293:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7089,"nodeType":"Block","src":"4746:903:16","statements":[{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":6983,"name":"resaleAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"4761:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"}},"id":6985,"indexExpression":{"id":6984,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"4775:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4761:23:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6987,"indexExpression":{"id":6986,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"4785:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4761:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526573616c65206e6f7420616c6c6f776564","id":6988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4797:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3","typeString":"literal_string \"Resale not allowed\""},"value":"Resale not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3","typeString":"literal_string \"Resale not allowed\""}],"id":6982,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4753:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4753:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6990,"nodeType":"ExpressionStatement","src":"4753:65:16"},{"expression":{"arguments":[{"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4833:37:16","subExpression":{"baseExpression":{"baseExpression":{"id":6992,"name":"ticketExhausted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"4834:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"}},"id":6994,"indexExpression":{"id":6993,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"4850:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4834:25:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":6996,"indexExpression":{"id":6995,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"4860:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4834:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5469636b657420616c72656164792075736564","id":6998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4872:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10","typeString":"literal_string \"Ticket already used\""},"value":"Ticket already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10","typeString":"literal_string \"Ticket already used\""}],"id":6991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4825:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4825:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7000,"nodeType":"ExpressionStatement","src":"4825:69:16"},{"assignments":[7002],"declarations":[{"constant":false,"id":7002,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:16","nodeType":"VariableDeclaration","scope":7089,"src":"4903:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7001,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7008,"initialValue":{"baseExpression":{"baseExpression":{"id":7003,"name":"seatToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"4921:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(uint256 => uint256))"}},"id":7005,"indexExpression":{"id":7004,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"4935:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4921:23:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7007,"indexExpression":{"id":7006,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"4945:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4921:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4903:52:16"},{"assignments":[7010],"declarations":[{"constant":false,"id":7010,"mutability":"mutable","name":"currentOwner","nameLocation":"4970:12:16","nodeType":"VariableDeclaration","scope":7089,"src":"4962:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7009,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7014,"initialValue":{"arguments":[{"id":7012,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"4993:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7011,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"4985:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4985:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4962:39:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7016,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"5016:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5040:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5032:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7017,"name":"address","nodeType":"ElementaryTypeName","src":"5032:7:16","typeDescriptions":{}}},"id":7020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5032:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5016:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207469636b6574","id":7022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5044:16:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d","typeString":"literal_string \"Invalid ticket\""},"value":"Invalid ticket"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d","typeString":"literal_string \"Invalid ticket\""}],"id":7015,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5008:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5008:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7024,"nodeType":"ExpressionStatement","src":"5008:53:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7026,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"5076:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7027,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5092:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5096:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5092:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5076:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742062757920796f7572206f776e207469636b6574","id":7030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5104:28:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95","typeString":"literal_string \"Cannot buy your own ticket\""},"value":"Cannot buy your own ticket"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95","typeString":"literal_string \"Cannot buy your own ticket\""}],"id":7025,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5068:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5068:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7032,"nodeType":"ExpressionStatement","src":"5068:65:16"},{"assignments":[7034],"declarations":[{"constant":false,"id":7034,"mutability":"mutable","name":"ticketPrice","nameLocation":"5150:11:16","nodeType":"VariableDeclaration","scope":7089,"src":"5142:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7033,"name":"uint256","nodeType":"ElementaryTypeName","src":"5142:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7039,"initialValue":{"expression":{"baseExpression":{"id":7035,"name":"occasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"5164:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Occasion_$6461_storage_$","typeString":"mapping(uint256 => struct TicketMaster.Occasion storage ref)"}},"id":7037,"indexExpression":{"id":7036,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"5174:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5164:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_Occasion_$6461_storage","typeString":"struct TicketMaster.Occasion storage ref"}},"id":7038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5184:4:16","memberName":"cost","nodeType":"MemberAccess","referencedDeclaration":6444,"src":"5164:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5142:46:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7041,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5203:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5207:5:16","memberName":"value","nodeType":"MemberAccess","src":"5203:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7043,"name":"ticketPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"5216:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5203:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f7272656374207061796d656e7420616d6f756e74","id":7045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5229:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","typeString":"literal_string \"Incorrect payment amount\""},"value":"Incorrect payment amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","typeString":"literal_string \"Incorrect payment amount\""}],"id":7040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5195:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7047,"nodeType":"ExpressionStatement","src":"5195:61:16"},{"assignments":[7049,null],"declarations":[{"constant":false,"id":7049,"mutability":"mutable","name":"sent","nameLocation":"5317:4:16","nodeType":"VariableDeclaration","scope":7089,"src":"5312:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7048,"name":"bool","nodeType":"ElementaryTypeName","src":"5312:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7059,"initialValue":{"arguments":[{"hexValue":"","id":7057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5374:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":7052,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"5335:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5327:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7050,"name":"address","nodeType":"ElementaryTypeName","src":"5327:8:16","stateMutability":"payable","typeDescriptions":{}}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5327:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5349:4:16","memberName":"call","nodeType":"MemberAccess","src":"5327:26:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7055,"name":"ticketPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"5361:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5327:46:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5327:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5311:66:16"},{"expression":{"arguments":[{"id":7061,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"5392:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e74207472616e73666572206661696c6564","id":7062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5398:25:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""},"value":"Payment transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""}],"id":7060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5384:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5384:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7064,"nodeType":"ExpressionStatement","src":"5384:40:16"},{"expression":{"arguments":[{"id":7066,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"5490:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7067,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5504:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5508:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5504:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7069,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"5516:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7065,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"5480:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5480:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7071,"nodeType":"ExpressionStatement","src":"5480:44:16"},{"expression":{"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7072,"name":"seatTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"5531:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$","typeString":"mapping(uint256 => mapping(uint256 => address))"}},"id":7075,"indexExpression":{"id":7073,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"5541:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5531:19:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":7076,"indexExpression":{"id":7074,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"5551:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5531:30:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7077,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5564:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5568:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5564:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5531:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7080,"nodeType":"ExpressionStatement","src":"5531:43:16"},{"expression":{"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7081,"name":"resaleAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"5583:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(uint256 => bool))"}},"id":7084,"indexExpression":{"id":7082,"name":"_eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"5597:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5583:23:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":7085,"indexExpression":{"id":7083,"name":"_ticketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"5607:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5583:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5620:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5583:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7088,"nodeType":"ExpressionStatement","src":"5583:42:16"}]},"functionSelector":"9b26ce0c","id":7090,"implemented":true,"kind":"function","modifiers":[],"name":"buyResaleTicket","nameLocation":"4678:15:16","nodeType":"FunctionDefinition","parameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6977,"mutability":"mutable","name":"_eventId","nameLocation":"4702:8:16","nodeType":"VariableDeclaration","scope":7090,"src":"4694:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6976,"name":"uint256","nodeType":"ElementaryTypeName","src":"4694:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6979,"mutability":"mutable","name":"_ticketId","nameLocation":"4720:9:16","nodeType":"VariableDeclaration","scope":7090,"src":"4712:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6978,"name":"uint256","nodeType":"ElementaryTypeName","src":"4712:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4693:37:16"},"returnParameters":{"id":6981,"nodeType":"ParameterList","parameters":[],"src":"4746:0:16"},"scope":7128,"src":"4669:980:16","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":7126,"nodeType":"Block","src":"5721:223:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7098,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"5740:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5747:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5740:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7101,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"5752:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7102,"name":"totalOccasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"5759:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5752:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5740:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f63636173696f6e204944","id":7105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5775:21:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330","typeString":"literal_string \"Invalid occasion ID\""},"value":"Invalid occasion ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330","typeString":"literal_string \"Invalid occasion ID\""}],"id":7097,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5732:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5732:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7107,"nodeType":"ExpressionStatement","src":"5732:65:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7109,"name":"occasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"5816:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Occasion_$6461_storage_$","typeString":"mapping(uint256 => struct TicketMaster.Occasion storage ref)"}},"id":7111,"indexExpression":{"id":7110,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"5826:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5816:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Occasion_$6461_storage","typeString":"struct TicketMaster.Occasion storage ref"}},"id":7112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5831:7:16","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":6460,"src":"5816:22:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7113,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5842:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5846:6:16","memberName":"sender","nodeType":"MemberAccess","src":"5842:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5816:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206576656e742063726561746f722063616e2073657420565220766964656f","id":7116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5854:37:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d","typeString":"literal_string \"Only event creator can set VR video\""},"value":"Only event creator can set VR video"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d","typeString":"literal_string \"Only event creator can set VR video\""}],"id":7108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5808:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5808:84:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7118,"nodeType":"ExpressionStatement","src":"5808:84:16"},{"expression":{"id":7124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7119,"name":"occasions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"5903:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Occasion_$6461_storage_$","typeString":"mapping(uint256 => struct TicketMaster.Occasion storage ref)"}},"id":7121,"indexExpression":{"id":7120,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"5913:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5903:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Occasion_$6461_storage","typeString":"struct TicketMaster.Occasion storage ref"}},"id":7122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5918:7:16","memberName":"vrVideo","nodeType":"MemberAccess","referencedDeclaration":6458,"src":"5903:22:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7123,"name":"_vrVideo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"5928:8:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5903:33:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7125,"nodeType":"ExpressionStatement","src":"5903:33:16"}]},"functionSelector":"adca6f89","id":7127,"implemented":true,"kind":"function","modifiers":[],"name":"setVRVideo","nameLocation":"5666:10:16","nodeType":"FunctionDefinition","parameters":{"id":7095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7092,"mutability":"mutable","name":"_id","nameLocation":"5685:3:16","nodeType":"VariableDeclaration","scope":7127,"src":"5677:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7091,"name":"uint256","nodeType":"ElementaryTypeName","src":"5677:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7094,"mutability":"mutable","name":"_vrVideo","nameLocation":"5704:8:16","nodeType":"VariableDeclaration","scope":7127,"src":"5690:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7093,"name":"string","nodeType":"ElementaryTypeName","src":"5690:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5676:37:16"},"returnParameters":{"id":7096,"nodeType":"ParameterList","parameters":[],"src":"5721:0:16"},"scope":7128,"src":"5657:287:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7129,"src":"183:5764:16","usedErrors":[13,18,195,200,209,214,219,226,231,236],"usedEvents":[24,1257,1266,1275]}],"src":"33:5916:16"},"id":16}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094a564e6a87c47303b64da925a5efccb7f3eb052eeef7b82a5440c296b82d8bd64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xA5 PUSH5 0xE6A87C4730 EXTCODESIZE PUSH5 0xDA925A5EFC 0xCB PUSH32 0x3EB052EEEF7B82A5440C296B82D8BD64736F6C63430008140033000000000000 ","sourceMap":"431:1480:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094a564e6a87c47303b64da925a5efccb7f3eb052eeef7b82a5440c296b82d8bd64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xA5 PUSH5 0xE6A87C4730 EXTCODESIZE PUSH5 0xDA925A5EFC 0xCB PUSH32 0x3EB052EEEF7B82A5440C296B82D8BD64736F6C63430008140033000000000000 ","sourceMap":"431:1480:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/PatientMedicaition.sol":{"PatientMedication":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"patientAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"recordId","type":"uint256"},{"indexed":false,"internalType":"string","name":"medicationName","type":"string"}],"name":"MedicationRecordAdded","type":"event"},{"inputs":[{"internalType":"string","name":"_medicationName","type":"string"},{"internalType":"string","name":"_dosage","type":"string"},{"internalType":"string","name":"_instructions","type":"string"},{"internalType":"string","name":"_prescribingDoctor","type":"string"},{"internalType":"string","name":"_receipt","type":"string"}],"name":"addMedicationRecord","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getMyMedicationRecords","outputs":[{"components":[{"internalType":"uint256","name":"recordId","type":"uint256"},{"internalType":"string","name":"medicationName","type":"string"},{"internalType":"string","name":"dosage","type":"string"},{"internalType":"string","name":"instructions","type":"string"},{"internalType":"uint256","name":"issueDate","type":"uint256"},{"internalType":"string","name":"prescribingDoctor","type":"string"},{"internalType":"string","name":"receipt","type":"string"}],"internalType":"struct PatientMedication.MedicationRecord[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_patient","type":"address"}],"name":"getPatientMedicationRecords","outputs":[{"components":[{"internalType":"uint256","name":"recordId","type":"uint256"},{"internalType":"string","name":"medicationName","type":"string"},{"internalType":"string","name":"dosage","type":"string"},{"internalType":"string","name":"instructions","type":"string"},{"internalType":"uint256","name":"issueDate","type":"uint256"},{"internalType":"string","name":"prescribingDoctor","type":"string"},{"internalType":"string","name":"receipt","type":"string"}],"internalType":"struct PatientMedication.MedicationRecord[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B2 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5CBA966F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xE38682B4 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xFE4AE9B4 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0xDAB JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x430 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x14D SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x179 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x1DF SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20B SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x258 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x22D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x258 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x23B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x271 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29D SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x386 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x386 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x369 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x39F SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3CB SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x418 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x418 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x110 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x48B SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP2 PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49C0D09B0985264670299950CD84008DE50B13096FAC0C8212665A0B958F5551 DUP4 DUP10 PUSH1 0x40 MLOAD PUSH2 0x5F8 SWAP3 SWAP2 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x989 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x6A6 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x702 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x738 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x764 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x786 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x794 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x7CA SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7F6 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x843 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x818 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x843 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x826 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x866 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x892 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x8F8 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x924 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x971 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x946 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x971 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x954 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x669 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D1 DUP3 PUSH2 0x9A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E1 DUP2 PUSH2 0x9C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x9EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9FE DUP2 PUSH2 0x9D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1A JUMPI PUSH2 0xA19 PUSH2 0x99C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA28 DUP5 DUP3 DUP6 ADD PUSH2 0x9EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA70 DUP2 PUSH2 0xA5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD8 DUP3 PUSH2 0xA76 JUMP JUMPDEST PUSH2 0xAE2 DUP2 DUP6 PUSH2 0xA81 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA92 JUMP JUMPDEST PUSH2 0xAFB DUP2 PUSH2 0xABC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0xB1E PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0xA67 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xB36 DUP3 DUP3 PUSH2 0xACD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0xB50 DUP3 DUP3 PUSH2 0xACD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0xB6A DUP3 DUP3 PUSH2 0xACD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xB7F PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0xA67 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0xB97 DUP3 DUP3 PUSH2 0xACD JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0xBB1 DUP3 DUP3 PUSH2 0xACD JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCA DUP4 DUP4 PUSH2 0xB06 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEA DUP3 PUSH2 0xA31 JUMP JUMPDEST PUSH2 0xBF4 DUP2 DUP6 PUSH2 0xA3C JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xC06 DUP6 PUSH2 0xA4D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC42 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xC23 DUP6 DUP3 PUSH2 0xBBE JUMP JUMPDEST SWAP5 POP PUSH2 0xC2E DUP4 PUSH2 0xBD2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xC0A JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC6E DUP2 DUP5 PUSH2 0xBDF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xCB8 DUP3 PUSH2 0xABC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCD7 JUMPI PUSH2 0xCD6 PUSH2 0xC80 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEA PUSH2 0x992 JUMP JUMPDEST SWAP1 POP PUSH2 0xCF6 DUP3 DUP3 PUSH2 0xCAF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD16 JUMPI PUSH2 0xD15 PUSH2 0xC80 JUMP JUMPDEST JUMPDEST PUSH2 0xD1F DUP3 PUSH2 0xABC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD4E PUSH2 0xD49 DUP5 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0xCE0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xD6A JUMPI PUSH2 0xD69 PUSH2 0xC7B JUMP JUMPDEST JUMPDEST PUSH2 0xD75 DUP5 DUP3 DUP6 PUSH2 0xD2C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD92 JUMPI PUSH2 0xD91 PUSH2 0xC76 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDA2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDC7 JUMPI PUSH2 0xDC6 PUSH2 0x99C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDE5 JUMPI PUSH2 0xDE4 PUSH2 0x9A1 JUMP JUMPDEST JUMPDEST PUSH2 0xDF1 DUP9 DUP3 DUP10 ADD PUSH2 0xD7D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE12 JUMPI PUSH2 0xE11 PUSH2 0x9A1 JUMP JUMPDEST JUMPDEST PUSH2 0xE1E DUP9 DUP3 DUP10 ADD PUSH2 0xD7D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE3F JUMPI PUSH2 0xE3E PUSH2 0x9A1 JUMP JUMPDEST JUMPDEST PUSH2 0xE4B DUP9 DUP3 DUP10 ADD PUSH2 0xD7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE6C JUMPI PUSH2 0xE6B PUSH2 0x9A1 JUMP JUMPDEST JUMPDEST PUSH2 0xE78 DUP9 DUP3 DUP10 ADD PUSH2 0xD7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE98 PUSH2 0x9A1 JUMP JUMPDEST JUMPDEST PUSH2 0xEA5 DUP9 DUP3 DUP10 ADD PUSH2 0xD7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEF9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF0C JUMPI PUSH2 0xF0B PUSH2 0xEB2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF4C DUP3 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xF57 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF6F JUMPI PUSH2 0xF6E PUSH2 0xF12 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0xFD7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xF9A JUMP JUMPDEST PUSH2 0xFE1 DUP7 DUP4 PUSH2 0xF9A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101E PUSH2 0x1019 PUSH2 0x1014 DUP5 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1038 DUP4 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x104C PUSH2 0x1044 DUP3 PUSH2 0x1025 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xFA7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1061 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x106C DUP2 DUP5 DUP5 PUSH2 0x102F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1090 JUMPI PUSH2 0x1085 PUSH1 0x0 DUP3 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1072 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x10D5 JUMPI PUSH2 0x10A6 DUP2 PUSH2 0xF75 JUMP JUMPDEST PUSH2 0x10AF DUP5 PUSH2 0xF8A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x10BE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x10D2 PUSH2 0x10CA DUP6 PUSH2 0xF8A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1071 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F8 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x10DA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1111 DUP4 DUP4 PUSH2 0x10E7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x112A DUP3 PUSH2 0xA76 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1143 JUMPI PUSH2 0x1142 PUSH2 0xC80 JUMP JUMPDEST JUMPDEST PUSH2 0x114D DUP3 SLOAD PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x1158 DUP3 DUP3 DUP6 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x118B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1179 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1183 DUP6 DUP3 PUSH2 0x1105 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x11EB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1199 DUP7 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11C1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x119C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x11DE JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x11DA PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x10E7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11FC DUP2 PUSH2 0xA5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121E DUP3 PUSH2 0xA76 JUMP JUMPDEST PUSH2 0x1228 DUP2 DUP6 PUSH2 0x1202 JUMP JUMPDEST SWAP4 POP PUSH2 0x1238 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA92 JUMP JUMPDEST PUSH2 0x1241 DUP2 PUSH2 0xABC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1261 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x11F3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1273 DUP2 DUP5 PUSH2 0x1213 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP11 SWAP9 0x23 GASPRICE 0xCF 0xC4 SWAP4 SWAP14 0xE6 0x23 POP PUSH13 0x2E3A38318F162008B34E6E89F6 PUSH28 0xC43F3ED9C564736F6C63430008140033000000000000000000000000 ","sourceMap":"61:1662:15:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@addMedicationRecord_6398":{"entryPoint":1083,"id":6398,"parameterSlots":5,"returnSlots":0},"@getMyMedicationRecords_6411":{"entryPoint":1545,"id":6411,"parameterSlots":0,"returnSlots":1},"@getPatientMedicationRecords_6425":{"entryPoint":176,"id":6425,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":3387,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2543,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":3453,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr":{"entryPoint":3499,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encodeUpdatedPos_t_struct$_MedicationRecord_$6331_memory_ptr_to_t_struct$_MedicationRecord_$6331_memory_ptr":{"entryPoint":3006,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":3039,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":2765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4627,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_MedicationRecord_$6331_memory_ptr_to_t_struct$_MedicationRecord_$6331_memory_ptr":{"entryPoint":2822,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":2663,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4595,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4684,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":3296,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2450,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":3323,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr":{"entryPoint":2637,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":3957,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr":{"entryPoint":2609,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2678,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr":{"entryPoint":3026,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":2620,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":2689,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4610,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3905,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":4244,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2502,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2470,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2653,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":4209,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":4099,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4385,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":3372,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2706,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":3978,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3809,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":4357,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":3247,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":4089,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":4327,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3858,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3762,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3200,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":4133,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3190,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":3195,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2465,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2460,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2748,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":3994,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":4314,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":4185,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":4007,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":4143,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2520,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":4180,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17354:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:81:17","statements":[{"nodeType":"YulAssignment","src":"389:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:17"},"nodeType":"YulFunctionCall","src":"400:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:126:17"},{"body":{"nodeType":"YulBlock","src":"511:51:17","statements":[{"nodeType":"YulAssignment","src":"521:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:17"},"nodeType":"YulFunctionCall","src":"532:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:17","type":""}],"src":"466:96:17"},{"body":{"nodeType":"YulBlock","src":"611:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:17"},"nodeType":"YulFunctionCall","src":"670:12:17"},"nodeType":"YulExpressionStatement","src":"670:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:17"},"nodeType":"YulFunctionCall","src":"641:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:17"},"nodeType":"YulFunctionCall","src":"631:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:17"},"nodeType":"YulFunctionCall","src":"624:43:17"},"nodeType":"YulIf","src":"621:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:17","type":""}],"src":"568:122:17"},{"body":{"nodeType":"YulBlock","src":"748:87:17","statements":[{"nodeType":"YulAssignment","src":"758:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:17"},"nodeType":"YulFunctionCall","src":"767:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:17"},"nodeType":"YulFunctionCall","src":"796:33:17"},"nodeType":"YulExpressionStatement","src":"796:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:17","type":""}],"src":"696:139:17"},{"body":{"nodeType":"YulBlock","src":"907:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:17"},"nodeType":"YulFunctionCall","src":"955:79:17"},"nodeType":"YulExpressionStatement","src":"955:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:17"},"nodeType":"YulFunctionCall","src":"924:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:17"},"nodeType":"YulFunctionCall","src":"920:32:17"},"nodeType":"YulIf","src":"917:119:17"},{"nodeType":"YulBlock","src":"1046:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:17"},"nodeType":"YulFunctionCall","src":"1121:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:17"},"nodeType":"YulFunctionCall","src":"1100:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:17","type":""}],"src":"841:329:17"},{"body":{"nodeType":"YulBlock","src":"1284:40:17","statements":[{"nodeType":"YulAssignment","src":"1295:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1311:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1305:5:17"},"nodeType":"YulFunctionCall","src":"1305:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1295:6:17"}]}]},"name":"array_length_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1267:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1277:6:17","type":""}],"src":"1176:148:17"},{"body":{"nodeType":"YulBlock","src":"1475:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1492:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1497:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1485:6:17"},"nodeType":"YulFunctionCall","src":"1485:19:17"},"nodeType":"YulExpressionStatement","src":"1485:19:17"},{"nodeType":"YulAssignment","src":"1513:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1532:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1537:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1528:3:17"},"nodeType":"YulFunctionCall","src":"1528:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1513:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1447:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1452:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1463:11:17","type":""}],"src":"1330:218:17"},{"body":{"nodeType":"YulBlock","src":"1660:60:17","statements":[{"nodeType":"YulAssignment","src":"1670:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1678:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1670:4:17"}]},{"nodeType":"YulAssignment","src":"1691:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1703:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1708:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1699:3:17"},"nodeType":"YulFunctionCall","src":"1699:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1691:4:17"}]}]},"name":"array_dataslot_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1647:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1655:4:17","type":""}],"src":"1554:166:17"},{"body":{"nodeType":"YulBlock","src":"1771:32:17","statements":[{"nodeType":"YulAssignment","src":"1781:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1792:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1781:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1753:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1763:7:17","type":""}],"src":"1726:77:17"},{"body":{"nodeType":"YulBlock","src":"1864:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1881:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1904:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1886:17:17"},"nodeType":"YulFunctionCall","src":"1886:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:17"},"nodeType":"YulFunctionCall","src":"1874:37:17"},"nodeType":"YulExpressionStatement","src":"1874:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1852:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1859:3:17","type":""}],"src":"1809:108:17"},{"body":{"nodeType":"YulBlock","src":"1982:40:17","statements":[{"nodeType":"YulAssignment","src":"1993:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2009:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2003:5:17"},"nodeType":"YulFunctionCall","src":"2003:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1993:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1965:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1975:6:17","type":""}],"src":"1923:99:17"},{"body":{"nodeType":"YulBlock","src":"2114:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2131:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2136:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2124:6:17"},"nodeType":"YulFunctionCall","src":"2124:19:17"},"nodeType":"YulExpressionStatement","src":"2124:19:17"},{"nodeType":"YulAssignment","src":"2152:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2171:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2176:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2167:3:17"},"nodeType":"YulFunctionCall","src":"2167:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2152:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2086:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"2091:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2102:11:17","type":""}],"src":"2028:159:17"},{"body":{"nodeType":"YulBlock","src":"2255:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2265:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2274:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2269:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2334:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2359:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"2364:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2355:3:17"},"nodeType":"YulFunctionCall","src":"2355:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2378:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"2383:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2374:3:17"},"nodeType":"YulFunctionCall","src":"2374:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2368:5:17"},"nodeType":"YulFunctionCall","src":"2368:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2348:6:17"},"nodeType":"YulFunctionCall","src":"2348:39:17"},"nodeType":"YulExpressionStatement","src":"2348:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2295:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"2298:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2292:2:17"},"nodeType":"YulFunctionCall","src":"2292:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2306:19:17","statements":[{"nodeType":"YulAssignment","src":"2308:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2317:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"2320:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2313:3:17"},"nodeType":"YulFunctionCall","src":"2313:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2308:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"2288:3:17","statements":[]},"src":"2284:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2417:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2422:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:17"},"nodeType":"YulFunctionCall","src":"2413:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"2431:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2406:6:17"},"nodeType":"YulFunctionCall","src":"2406:27:17"},"nodeType":"YulExpressionStatement","src":"2406:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2237:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2242:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"2247:6:17","type":""}],"src":"2193:246:17"},{"body":{"nodeType":"YulBlock","src":"2493:54:17","statements":[{"nodeType":"YulAssignment","src":"2503:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2528:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2517:3:17"},"nodeType":"YulFunctionCall","src":"2517:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2537:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2533:3:17"},"nodeType":"YulFunctionCall","src":"2533:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2513:3:17"},"nodeType":"YulFunctionCall","src":"2513:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2503:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2476:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2486:6:17","type":""}],"src":"2445:102:17"},{"body":{"nodeType":"YulBlock","src":"2635:275:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2645:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2692:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2659:32:17"},"nodeType":"YulFunctionCall","src":"2659:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2649:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2707:68:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2763:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2768:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2714:48:17"},"nodeType":"YulFunctionCall","src":"2714:61:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2707:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2823:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2830:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2819:3:17"},"nodeType":"YulFunctionCall","src":"2819:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"2837:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2842:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2784:34:17"},"nodeType":"YulFunctionCall","src":"2784:65:17"},"nodeType":"YulExpressionStatement","src":"2784:65:17"},{"nodeType":"YulAssignment","src":"2858:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2869:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2896:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2874:21:17"},"nodeType":"YulFunctionCall","src":"2874:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2865:3:17"},"nodeType":"YulFunctionCall","src":"2865:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2858:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2616:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2623:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2631:3:17","type":""}],"src":"2553:357:17"},{"body":{"nodeType":"YulBlock","src":"3142:1681:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3152:26:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3168:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3173:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3164:3:17"},"nodeType":"YulFunctionCall","src":"3164:14:17"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"3156:4:17","type":""}]},{"nodeType":"YulBlock","src":"3188:168:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3227:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3257:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3264:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3253:3:17"},"nodeType":"YulFunctionCall","src":"3253:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3247:5:17"},"nodeType":"YulFunctionCall","src":"3247:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3231:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3317:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3335:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3340:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3331:3:17"},"nodeType":"YulFunctionCall","src":"3331:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3283:33:17"},"nodeType":"YulFunctionCall","src":"3283:63:17"},"nodeType":"YulExpressionStatement","src":"3283:63:17"}]},{"nodeType":"YulBlock","src":"3366:245:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3411:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3441:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3448:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3437:3:17"},"nodeType":"YulFunctionCall","src":"3437:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3431:5:17"},"nodeType":"YulFunctionCall","src":"3431:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3415:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3479:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3484:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3475:3:17"},"nodeType":"YulFunctionCall","src":"3475:14:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3495:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"3501:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3491:3:17"},"nodeType":"YulFunctionCall","src":"3491:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3468:6:17"},"nodeType":"YulFunctionCall","src":"3468:38:17"},"nodeType":"YulExpressionStatement","src":"3468:38:17"},{"nodeType":"YulAssignment","src":"3519:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3581:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"3595:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3527:53:17"},"nodeType":"YulFunctionCall","src":"3527:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3519:4:17"}]}]},{"nodeType":"YulBlock","src":"3621:237:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3658:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3688:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3695:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3684:3:17"},"nodeType":"YulFunctionCall","src":"3684:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3678:5:17"},"nodeType":"YulFunctionCall","src":"3678:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3662:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3726:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3731:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3722:3:17"},"nodeType":"YulFunctionCall","src":"3722:14:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3742:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"3748:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3738:3:17"},"nodeType":"YulFunctionCall","src":"3738:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3715:6:17"},"nodeType":"YulFunctionCall","src":"3715:38:17"},"nodeType":"YulExpressionStatement","src":"3715:38:17"},{"nodeType":"YulAssignment","src":"3766:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3828:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"3842:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3774:53:17"},"nodeType":"YulFunctionCall","src":"3774:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3766:4:17"}]}]},{"nodeType":"YulBlock","src":"3868:243:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3911:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3941:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3948:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:17"},"nodeType":"YulFunctionCall","src":"3937:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3931:5:17"},"nodeType":"YulFunctionCall","src":"3931:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3915:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3979:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3984:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3975:3:17"},"nodeType":"YulFunctionCall","src":"3975:14:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3995:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"4001:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3991:3:17"},"nodeType":"YulFunctionCall","src":"3991:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3968:6:17"},"nodeType":"YulFunctionCall","src":"3968:38:17"},"nodeType":"YulExpressionStatement","src":"3968:38:17"},{"nodeType":"YulAssignment","src":"4019:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4081:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"4095:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4027:53:17"},"nodeType":"YulFunctionCall","src":"4027:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4019:4:17"}]}]},{"nodeType":"YulBlock","src":"4121:169:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4161:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4191:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4198:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4187:3:17"},"nodeType":"YulFunctionCall","src":"4187:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4181:5:17"},"nodeType":"YulFunctionCall","src":"4181:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4165:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4251:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4269:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4274:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4265:3:17"},"nodeType":"YulFunctionCall","src":"4265:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4217:33:17"},"nodeType":"YulFunctionCall","src":"4217:63:17"},"nodeType":"YulExpressionStatement","src":"4217:63:17"}]},{"nodeType":"YulBlock","src":"4300:248:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4348:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4378:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4385:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4374:3:17"},"nodeType":"YulFunctionCall","src":"4374:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4368:5:17"},"nodeType":"YulFunctionCall","src":"4368:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4352:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4416:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4421:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4412:3:17"},"nodeType":"YulFunctionCall","src":"4412:14:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4432:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"4438:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4428:3:17"},"nodeType":"YulFunctionCall","src":"4428:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4405:6:17"},"nodeType":"YulFunctionCall","src":"4405:38:17"},"nodeType":"YulExpressionStatement","src":"4405:38:17"},{"nodeType":"YulAssignment","src":"4456:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4518:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"4532:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4464:53:17"},"nodeType":"YulFunctionCall","src":"4464:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4456:4:17"}]}]},{"nodeType":"YulBlock","src":"4558:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4596:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4626:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4633:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:17"},"nodeType":"YulFunctionCall","src":"4622:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4616:5:17"},"nodeType":"YulFunctionCall","src":"4616:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4600:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4664:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4669:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4660:3:17"},"nodeType":"YulFunctionCall","src":"4660:14:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4680:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"4686:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4676:3:17"},"nodeType":"YulFunctionCall","src":"4676:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4653:6:17"},"nodeType":"YulFunctionCall","src":"4653:38:17"},"nodeType":"YulExpressionStatement","src":"4653:38:17"},{"nodeType":"YulAssignment","src":"4704:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4766:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"4780:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4712:53:17"},"nodeType":"YulFunctionCall","src":"4712:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4704:4:17"}]}]},{"nodeType":"YulAssignment","src":"4806:11:17","value":{"name":"tail","nodeType":"YulIdentifier","src":"4813:4:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4806:3:17"}]}]},"name":"abi_encode_t_struct$_MedicationRecord_$6331_memory_ptr_to_t_struct$_MedicationRecord_$6331_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3121:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3128:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3137:3:17","type":""}],"src":"3010:1813:17"},{"body":{"nodeType":"YulBlock","src":"4977:144:17","statements":[{"nodeType":"YulAssignment","src":"4987:128:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5103:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"5111:3:17"}],"functionName":{"name":"abi_encode_t_struct$_MedicationRecord_$6331_memory_ptr_to_t_struct$_MedicationRecord_$6331_memory_ptr","nodeType":"YulIdentifier","src":"5001:101:17"},"nodeType":"YulFunctionCall","src":"5001:114:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"4987:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_MedicationRecord_$6331_memory_ptr_to_t_struct$_MedicationRecord_$6331_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"4950:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4958:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"4966:10:17","type":""}],"src":"4829:292:17"},{"body":{"nodeType":"YulBlock","src":"5236:38:17","statements":[{"nodeType":"YulAssignment","src":"5246:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5258:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"5263:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5254:3:17"},"nodeType":"YulFunctionCall","src":"5254:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"5246:4:17"}]}]},"name":"array_nextElement_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5223:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"5231:4:17","type":""}],"src":"5127:147:17"},{"body":{"nodeType":"YulBlock","src":"5570:991:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5580:102:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5676:5:17"}],"functionName":{"name":"array_length_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5594:81:17"},"nodeType":"YulFunctionCall","src":"5594:88:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5584:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5691:127:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5806:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5811:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5698:107:17"},"nodeType":"YulFunctionCall","src":"5698:120:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5691:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"5827:20:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"5844:3:17"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"5831:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5856:39:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5872:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5881:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5889:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5877:3:17"},"nodeType":"YulFunctionCall","src":"5877:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5868:3:17"},"nodeType":"YulFunctionCall","src":"5868:27:17"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5860:4:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5904:105:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6003:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"5919:83:17"},"nodeType":"YulFunctionCall","src":"5919:90:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"5908:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6018:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"6032:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6022:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6108:408:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6129:3:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6138:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6144:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6134:3:17"},"nodeType":"YulFunctionCall","src":"6134:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6122:6:17"},"nodeType":"YulFunctionCall","src":"6122:33:17"},"nodeType":"YulExpressionStatement","src":"6122:33:17"},{"nodeType":"YulVariableDeclaration","src":"6168:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6195:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6189:5:17"},"nodeType":"YulFunctionCall","src":"6189:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"6172:13:17","type":""}]},{"nodeType":"YulAssignment","src":"6215:140:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"6335:13:17"},{"name":"tail","nodeType":"YulIdentifier","src":"6350:4:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_MedicationRecord_$6331_memory_ptr_to_t_struct$_MedicationRecord_$6331_memory_ptr","nodeType":"YulIdentifier","src":"6223:111:17"},"nodeType":"YulFunctionCall","src":"6223:132:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6215:4:17"}]},{"nodeType":"YulAssignment","src":"6368:104:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6465:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6378:86:17"},"nodeType":"YulFunctionCall","src":"6378:94:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6368:6:17"}]},{"nodeType":"YulAssignment","src":"6485:21:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6496:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"6501:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6492:3:17"},"nodeType":"YulFunctionCall","src":"6492:14:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6485:3:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6070:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"6073:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6067:2:17"},"nodeType":"YulFunctionCall","src":"6067:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6081:18:17","statements":[{"nodeType":"YulAssignment","src":"6083:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6092:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"6095:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6088:3:17"},"nodeType":"YulFunctionCall","src":"6088:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6083:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"6052:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6054:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6063:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6058:1:17","type":""}]}]},"src":"6048:468:17"},{"nodeType":"YulAssignment","src":"6525:11:17","value":{"name":"tail","nodeType":"YulIdentifier","src":"6532:4:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6525:3:17"}]},{"nodeType":"YulAssignment","src":"6545:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"6552:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6545:3:17"}]}]},"name":"abi_encode_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5549:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5556:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5565:3:17","type":""}],"src":"5378:1183:17"},{"body":{"nodeType":"YulBlock","src":"6783:293:17","statements":[{"nodeType":"YulAssignment","src":"6793:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6805:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6816:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6801:3:17"},"nodeType":"YulFunctionCall","src":"6801:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6793:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6840:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6851:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6836:3:17"},"nodeType":"YulFunctionCall","src":"6836:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6859:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6865:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6855:3:17"},"nodeType":"YulFunctionCall","src":"6855:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6829:6:17"},"nodeType":"YulFunctionCall","src":"6829:47:17"},"nodeType":"YulExpressionStatement","src":"6829:47:17"},{"nodeType":"YulAssignment","src":"6885:184:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7055:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"7064:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6893:161:17"},"nodeType":"YulFunctionCall","src":"6893:176:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6885:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6755:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6767:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6778:4:17","type":""}],"src":"6567:509:17"},{"body":{"nodeType":"YulBlock","src":"7171:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7188:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7191:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7181:6:17"},"nodeType":"YulFunctionCall","src":"7181:12:17"},"nodeType":"YulExpressionStatement","src":"7181:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"7082:117:17"},{"body":{"nodeType":"YulBlock","src":"7294:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7311:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7314:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7304:6:17"},"nodeType":"YulFunctionCall","src":"7304:12:17"},"nodeType":"YulExpressionStatement","src":"7304:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7205:117:17"},{"body":{"nodeType":"YulBlock","src":"7356:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7376:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:17"},"nodeType":"YulFunctionCall","src":"7366:88:17"},"nodeType":"YulExpressionStatement","src":"7366:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7470:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7473:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7463:6:17"},"nodeType":"YulFunctionCall","src":"7463:15:17"},"nodeType":"YulExpressionStatement","src":"7463:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7494:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7497:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7487:6:17"},"nodeType":"YulFunctionCall","src":"7487:15:17"},"nodeType":"YulExpressionStatement","src":"7487:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7328:180:17"},{"body":{"nodeType":"YulBlock","src":"7557:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7567:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7589:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7619:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7597:21:17"},"nodeType":"YulFunctionCall","src":"7597:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7585:3:17"},"nodeType":"YulFunctionCall","src":"7585:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7571:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7736:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7738:16:17"},"nodeType":"YulFunctionCall","src":"7738:18:17"},"nodeType":"YulExpressionStatement","src":"7738:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7679:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"7691:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7676:2:17"},"nodeType":"YulFunctionCall","src":"7676:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7715:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7727:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7712:2:17"},"nodeType":"YulFunctionCall","src":"7712:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7673:2:17"},"nodeType":"YulFunctionCall","src":"7673:62:17"},"nodeType":"YulIf","src":"7670:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7774:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7778:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7767:6:17"},"nodeType":"YulFunctionCall","src":"7767:22:17"},"nodeType":"YulExpressionStatement","src":"7767:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7543:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"7551:4:17","type":""}],"src":"7514:281:17"},{"body":{"nodeType":"YulBlock","src":"7842:88:17","statements":[{"nodeType":"YulAssignment","src":"7852:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7862:18:17"},"nodeType":"YulFunctionCall","src":"7862:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7852:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7911:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"7919:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7891:19:17"},"nodeType":"YulFunctionCall","src":"7891:33:17"},"nodeType":"YulExpressionStatement","src":"7891:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7826:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7835:6:17","type":""}],"src":"7801:129:17"},{"body":{"nodeType":"YulBlock","src":"8003:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"8108:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8110:16:17"},"nodeType":"YulFunctionCall","src":"8110:18:17"},"nodeType":"YulExpressionStatement","src":"8110:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8080:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8088:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8077:2:17"},"nodeType":"YulFunctionCall","src":"8077:30:17"},"nodeType":"YulIf","src":"8074:56:17"},{"nodeType":"YulAssignment","src":"8140:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8170:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8148:21:17"},"nodeType":"YulFunctionCall","src":"8148:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8140:4:17"}]},{"nodeType":"YulAssignment","src":"8214:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8226:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"8232:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8222:3:17"},"nodeType":"YulFunctionCall","src":"8222:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8214:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7987:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7998:4:17","type":""}],"src":"7936:308:17"},{"body":{"nodeType":"YulBlock","src":"8314:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8337:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"8342:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8347:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8324:12:17"},"nodeType":"YulFunctionCall","src":"8324:30:17"},"nodeType":"YulExpressionStatement","src":"8324:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8374:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8379:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8370:3:17"},"nodeType":"YulFunctionCall","src":"8370:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"8388:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8363:6:17"},"nodeType":"YulFunctionCall","src":"8363:27:17"},"nodeType":"YulExpressionStatement","src":"8363:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8296:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8301:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8306:6:17","type":""}],"src":"8250:146:17"},{"body":{"nodeType":"YulBlock","src":"8486:341:17","statements":[{"nodeType":"YulAssignment","src":"8496:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8563:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8521:41:17"},"nodeType":"YulFunctionCall","src":"8521:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8505:15:17"},"nodeType":"YulFunctionCall","src":"8505:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8496:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8587:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"8594:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8580:6:17"},"nodeType":"YulFunctionCall","src":"8580:21:17"},"nodeType":"YulExpressionStatement","src":"8580:21:17"},{"nodeType":"YulVariableDeclaration","src":"8610:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8625:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8632:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8621:3:17"},"nodeType":"YulFunctionCall","src":"8621:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8614:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8675:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8677:77:17"},"nodeType":"YulFunctionCall","src":"8677:79:17"},"nodeType":"YulExpressionStatement","src":"8677:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8656:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8661:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8652:3:17"},"nodeType":"YulFunctionCall","src":"8652:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"8670:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8649:2:17"},"nodeType":"YulFunctionCall","src":"8649:25:17"},"nodeType":"YulIf","src":"8646:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8804:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"8809:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"8814:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8767:36:17"},"nodeType":"YulFunctionCall","src":"8767:54:17"},"nodeType":"YulExpressionStatement","src":"8767:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8459:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8464:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8472:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8480:5:17","type":""}],"src":"8402:425:17"},{"body":{"nodeType":"YulBlock","src":"8909:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"8958:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8960:77:17"},"nodeType":"YulFunctionCall","src":"8960:79:17"},"nodeType":"YulExpressionStatement","src":"8960:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8937:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8945:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8933:3:17"},"nodeType":"YulFunctionCall","src":"8933:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"8952:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8929:3:17"},"nodeType":"YulFunctionCall","src":"8929:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8922:6:17"},"nodeType":"YulFunctionCall","src":"8922:35:17"},"nodeType":"YulIf","src":"8919:122:17"},{"nodeType":"YulVariableDeclaration","src":"9050:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9077:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9064:12:17"},"nodeType":"YulFunctionCall","src":"9064:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9054:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9093:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9154:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9162:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9150:3:17"},"nodeType":"YulFunctionCall","src":"9150:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"9169:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"9177:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9102:47:17"},"nodeType":"YulFunctionCall","src":"9102:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9093:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8887:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8895:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8903:5:17","type":""}],"src":"8847:340:17"},{"body":{"nodeType":"YulBlock","src":"9377:1627:17","statements":[{"body":{"nodeType":"YulBlock","src":"9424:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9426:77:17"},"nodeType":"YulFunctionCall","src":"9426:79:17"},"nodeType":"YulExpressionStatement","src":"9426:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9398:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9407:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9394:3:17"},"nodeType":"YulFunctionCall","src":"9394:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"9419:3:17","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9390:3:17"},"nodeType":"YulFunctionCall","src":"9390:33:17"},"nodeType":"YulIf","src":"9387:120:17"},{"nodeType":"YulBlock","src":"9517:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9532:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9563:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9574:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9559:3:17"},"nodeType":"YulFunctionCall","src":"9559:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9546:12:17"},"nodeType":"YulFunctionCall","src":"9546:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9536:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"9624:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9626:77:17"},"nodeType":"YulFunctionCall","src":"9626:79:17"},"nodeType":"YulExpressionStatement","src":"9626:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9596:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9604:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9593:2:17"},"nodeType":"YulFunctionCall","src":"9593:30:17"},"nodeType":"YulIf","src":"9590:117:17"},{"nodeType":"YulAssignment","src":"9721:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9766:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9777:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9762:3:17"},"nodeType":"YulFunctionCall","src":"9762:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9786:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9731:30:17"},"nodeType":"YulFunctionCall","src":"9731:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9721:6:17"}]}]},{"nodeType":"YulBlock","src":"9814:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9829:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9860:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9871:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9856:3:17"},"nodeType":"YulFunctionCall","src":"9856:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9843:12:17"},"nodeType":"YulFunctionCall","src":"9843:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9833:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"9922:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9924:77:17"},"nodeType":"YulFunctionCall","src":"9924:79:17"},"nodeType":"YulExpressionStatement","src":"9924:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9894:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9902:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9891:2:17"},"nodeType":"YulFunctionCall","src":"9891:30:17"},"nodeType":"YulIf","src":"9888:117:17"},{"nodeType":"YulAssignment","src":"10019:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10064:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10075:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10060:3:17"},"nodeType":"YulFunctionCall","src":"10060:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10084:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10029:30:17"},"nodeType":"YulFunctionCall","src":"10029:63:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10019:6:17"}]}]},{"nodeType":"YulBlock","src":"10112:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10127:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10158:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10169:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10154:3:17"},"nodeType":"YulFunctionCall","src":"10154:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10141:12:17"},"nodeType":"YulFunctionCall","src":"10141:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10131:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10220:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10222:77:17"},"nodeType":"YulFunctionCall","src":"10222:79:17"},"nodeType":"YulExpressionStatement","src":"10222:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10192:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10200:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10189:2:17"},"nodeType":"YulFunctionCall","src":"10189:30:17"},"nodeType":"YulIf","src":"10186:117:17"},{"nodeType":"YulAssignment","src":"10317:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10362:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10373:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10358:3:17"},"nodeType":"YulFunctionCall","src":"10358:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10382:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10327:30:17"},"nodeType":"YulFunctionCall","src":"10327:63:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10317:6:17"}]}]},{"nodeType":"YulBlock","src":"10410:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10425:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10456:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10467:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10452:3:17"},"nodeType":"YulFunctionCall","src":"10452:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10439:12:17"},"nodeType":"YulFunctionCall","src":"10439:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10429:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10518:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10520:77:17"},"nodeType":"YulFunctionCall","src":"10520:79:17"},"nodeType":"YulExpressionStatement","src":"10520:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10490:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10498:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10487:2:17"},"nodeType":"YulFunctionCall","src":"10487:30:17"},"nodeType":"YulIf","src":"10484:117:17"},{"nodeType":"YulAssignment","src":"10615:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10660:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10671:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10656:3:17"},"nodeType":"YulFunctionCall","src":"10656:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10680:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10625:30:17"},"nodeType":"YulFunctionCall","src":"10625:63:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10615:6:17"}]}]},{"nodeType":"YulBlock","src":"10708:289:17","statements":[{"nodeType":"YulVariableDeclaration","src":"10723:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10754:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10765:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10750:3:17"},"nodeType":"YulFunctionCall","src":"10750:19:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10737:12:17"},"nodeType":"YulFunctionCall","src":"10737:33:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10727:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"10817:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10819:77:17"},"nodeType":"YulFunctionCall","src":"10819:79:17"},"nodeType":"YulExpressionStatement","src":"10819:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10789:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10797:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10786:2:17"},"nodeType":"YulFunctionCall","src":"10786:30:17"},"nodeType":"YulIf","src":"10783:117:17"},{"nodeType":"YulAssignment","src":"10914:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10959:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10970:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10955:3:17"},"nodeType":"YulFunctionCall","src":"10955:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10979:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10924:30:17"},"nodeType":"YulFunctionCall","src":"10924:63:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10914:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9315:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9326:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9338:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9346:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9354:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9362:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9370:6:17","type":""}],"src":"9193:1811:17"},{"body":{"nodeType":"YulBlock","src":"11038:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11055:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11058:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11048:6:17"},"nodeType":"YulFunctionCall","src":"11048:88:17"},"nodeType":"YulExpressionStatement","src":"11048:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11152:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11155:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11145:6:17"},"nodeType":"YulFunctionCall","src":"11145:15:17"},"nodeType":"YulExpressionStatement","src":"11145:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11176:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11179:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11169:6:17"},"nodeType":"YulFunctionCall","src":"11169:15:17"},"nodeType":"YulExpressionStatement","src":"11169:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"11010:180:17"},{"body":{"nodeType":"YulBlock","src":"11247:269:17","statements":[{"nodeType":"YulAssignment","src":"11257:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11271:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"11277:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11267:3:17"},"nodeType":"YulFunctionCall","src":"11267:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11257:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"11288:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11318:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"11324:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11314:3:17"},"nodeType":"YulFunctionCall","src":"11314:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11292:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11365:51:17","statements":[{"nodeType":"YulAssignment","src":"11379:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11393:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11401:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11389:3:17"},"nodeType":"YulFunctionCall","src":"11389:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11379:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11345:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11338:6:17"},"nodeType":"YulFunctionCall","src":"11338:26:17"},"nodeType":"YulIf","src":"11335:81:17"},{"body":{"nodeType":"YulBlock","src":"11468:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11482:16:17"},"nodeType":"YulFunctionCall","src":"11482:18:17"},"nodeType":"YulExpressionStatement","src":"11482:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11432:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11455:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11463:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11452:2:17"},"nodeType":"YulFunctionCall","src":"11452:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11429:2:17"},"nodeType":"YulFunctionCall","src":"11429:38:17"},"nodeType":"YulIf","src":"11426:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11231:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11240:6:17","type":""}],"src":"11196:320:17"},{"body":{"nodeType":"YulBlock","src":"11550:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11567:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11570:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11560:6:17"},"nodeType":"YulFunctionCall","src":"11560:88:17"},"nodeType":"YulExpressionStatement","src":"11560:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11664:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11667:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11657:6:17"},"nodeType":"YulFunctionCall","src":"11657:15:17"},"nodeType":"YulExpressionStatement","src":"11657:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11688:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11691:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11681:6:17"},"nodeType":"YulFunctionCall","src":"11681:15:17"},"nodeType":"YulExpressionStatement","src":"11681:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11522:180:17"},{"body":{"nodeType":"YulBlock","src":"11752:147:17","statements":[{"nodeType":"YulAssignment","src":"11762:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11785:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11767:17:17"},"nodeType":"YulFunctionCall","src":"11767:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11762:1:17"}]},{"nodeType":"YulAssignment","src":"11796:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11819:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11801:17:17"},"nodeType":"YulFunctionCall","src":"11801:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11796:1:17"}]},{"nodeType":"YulAssignment","src":"11830:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11841:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"11844:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11837:3:17"},"nodeType":"YulFunctionCall","src":"11837:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"11830:3:17"}]},{"body":{"nodeType":"YulBlock","src":"11870:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11872:16:17"},"nodeType":"YulFunctionCall","src":"11872:18:17"},"nodeType":"YulExpressionStatement","src":"11872:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11862:1:17"},{"name":"sum","nodeType":"YulIdentifier","src":"11865:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11859:2:17"},"nodeType":"YulFunctionCall","src":"11859:10:17"},"nodeType":"YulIf","src":"11856:36:17"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11739:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"11742:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11748:3:17","type":""}],"src":"11708:191:17"},{"body":{"nodeType":"YulBlock","src":"11959:87:17","statements":[{"nodeType":"YulAssignment","src":"11969:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"11977:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11969:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11997:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"12000:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11990:6:17"},"nodeType":"YulFunctionCall","src":"11990:14:17"},"nodeType":"YulExpressionStatement","src":"11990:14:17"},{"nodeType":"YulAssignment","src":"12013:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12031:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12034:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12021:9:17"},"nodeType":"YulFunctionCall","src":"12021:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12013:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11946:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11954:4:17","type":""}],"src":"11905:141:17"},{"body":{"nodeType":"YulBlock","src":"12096:49:17","statements":[{"nodeType":"YulAssignment","src":"12106:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12124:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12131:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12120:3:17"},"nodeType":"YulFunctionCall","src":"12120:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"12136:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12116:3:17"},"nodeType":"YulFunctionCall","src":"12116:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12106:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12079:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"12089:6:17","type":""}],"src":"12052:93:17"},{"body":{"nodeType":"YulBlock","src":"12204:54:17","statements":[{"nodeType":"YulAssignment","src":"12214:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"12239:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"12245:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12235:3:17"},"nodeType":"YulFunctionCall","src":"12235:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"12214:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"12179:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"12185:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"12195:8:17","type":""}],"src":"12151:107:17"},{"body":{"nodeType":"YulBlock","src":"12340:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12350:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"12371:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"12383:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12367:3:17"},"nodeType":"YulFunctionCall","src":"12367:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"12354:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12394:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"12425:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12436:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"12406:18:17"},"nodeType":"YulFunctionCall","src":"12406:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"12398:4:17","type":""}]},{"nodeType":"YulAssignment","src":"12512:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"12543:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"12554:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"12524:18:17"},"nodeType":"YulFunctionCall","src":"12524:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"12512:8:17"}]},{"nodeType":"YulAssignment","src":"12572:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12585:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"12596:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12592:3:17"},"nodeType":"YulFunctionCall","src":"12592:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12581:3:17"},"nodeType":"YulFunctionCall","src":"12581:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12572:5:17"}]},{"nodeType":"YulAssignment","src":"12611:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12624:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"12635:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"12645:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12631:3:17"},"nodeType":"YulFunctionCall","src":"12631:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12621:2:17"},"nodeType":"YulFunctionCall","src":"12621:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12611:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12301:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"12308:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"12320:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"12333:6:17","type":""}],"src":"12264:393:17"},{"body":{"nodeType":"YulBlock","src":"12695:28:17","statements":[{"nodeType":"YulAssignment","src":"12705:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"12712:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12705:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12681:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12691:3:17","type":""}],"src":"12663:60:17"},{"body":{"nodeType":"YulBlock","src":"12789:82:17","statements":[{"nodeType":"YulAssignment","src":"12799:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12857:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12839:17:17"},"nodeType":"YulFunctionCall","src":"12839:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"12830:8:17"},"nodeType":"YulFunctionCall","src":"12830:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12812:17:17"},"nodeType":"YulFunctionCall","src":"12812:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12799:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12769:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12779:9:17","type":""}],"src":"12729:142:17"},{"body":{"nodeType":"YulBlock","src":"12924:28:17","statements":[{"nodeType":"YulAssignment","src":"12934:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"12941:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12934:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12910:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12920:3:17","type":""}],"src":"12877:75:17"},{"body":{"nodeType":"YulBlock","src":"13034:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13044:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"13099:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13068:30:17"},"nodeType":"YulFunctionCall","src":"13068:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"13048:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13123:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13163:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13157:5:17"},"nodeType":"YulFunctionCall","src":"13157:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"13170:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"13202:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"13178:23:17"},"nodeType":"YulFunctionCall","src":"13178:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"13129:27:17"},"nodeType":"YulFunctionCall","src":"13129:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13116:6:17"},"nodeType":"YulFunctionCall","src":"13116:105:17"},"nodeType":"YulExpressionStatement","src":"13116:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"13011:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"13017:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"13025:7:17","type":""}],"src":"12958:269:17"},{"body":{"nodeType":"YulBlock","src":"13282:24:17","statements":[{"nodeType":"YulAssignment","src":"13292:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"13299:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13292:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13278:3:17","type":""}],"src":"13233:73:17"},{"body":{"nodeType":"YulBlock","src":"13365:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13375:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"13389:30:17"},"nodeType":"YulFunctionCall","src":"13389:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"13379:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13474:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"13480:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"13488:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13430:43:17"},"nodeType":"YulFunctionCall","src":"13430:65:17"},"nodeType":"YulExpressionStatement","src":"13430:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"13351:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"13357:6:17","type":""}],"src":"13312:189:17"},{"body":{"nodeType":"YulBlock","src":"13557:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"13624:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13668:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13675:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"13638:29:17"},"nodeType":"YulFunctionCall","src":"13638:39:17"},"nodeType":"YulExpressionStatement","src":"13638:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13577:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"13584:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13574:2:17"},"nodeType":"YulFunctionCall","src":"13574:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13589:26:17","statements":[{"nodeType":"YulAssignment","src":"13591:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13604:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13611:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13600:3:17"},"nodeType":"YulFunctionCall","src":"13600:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"13591:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"13571:2:17","statements":[]},"src":"13567:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"13545:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"13552:3:17","type":""}],"src":"13507:186:17"},{"body":{"nodeType":"YulBlock","src":"13778:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"13804:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13818:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13866:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"13834:31:17"},"nodeType":"YulFunctionCall","src":"13834:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"13822:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13885:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"13908:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"13936:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"13918:17:17"},"nodeType":"YulFunctionCall","src":"13918:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13904:3:17"},"nodeType":"YulFunctionCall","src":"13904:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"13889:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"14105:27:17","statements":[{"nodeType":"YulAssignment","src":"14107:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"14122:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"14107:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"14089:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"14101:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14086:2:17"},"nodeType":"YulFunctionCall","src":"14086:18:17"},"nodeType":"YulIf","src":"14083:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"14174:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"14191:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"14219:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"14201:17:17"},"nodeType":"YulFunctionCall","src":"14201:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14187:3:17"},"nodeType":"YulFunctionCall","src":"14187:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"14145:28:17"},"nodeType":"YulFunctionCall","src":"14145:80:17"},"nodeType":"YulExpressionStatement","src":"14145:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13795:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13800:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13792:2:17"},"nodeType":"YulFunctionCall","src":"13792:11:17"},"nodeType":"YulIf","src":"13789:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"13754:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"13761:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"13766:10:17","type":""}],"src":"13699:543:17"},{"body":{"nodeType":"YulBlock","src":"14311:54:17","statements":[{"nodeType":"YulAssignment","src":"14321:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"14346:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"14352:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14342:3:17"},"nodeType":"YulFunctionCall","src":"14342:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"14321:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"14286:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"14292:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"14302:8:17","type":""}],"src":"14248:117:17"},{"body":{"nodeType":"YulBlock","src":"14422:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14432:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14481:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"14484:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14477:3:17"},"nodeType":"YulFunctionCall","src":"14477:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14496:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14492:3:17"},"nodeType":"YulFunctionCall","src":"14492:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"14448:28:17"},"nodeType":"YulFunctionCall","src":"14448:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14444:3:17"},"nodeType":"YulFunctionCall","src":"14444:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"14436:4:17","type":""}]},{"nodeType":"YulAssignment","src":"14509:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14523:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"14529:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14519:3:17"},"nodeType":"YulFunctionCall","src":"14519:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14509:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14399:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"14405:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"14415:6:17","type":""}],"src":"14371:169:17"},{"body":{"nodeType":"YulBlock","src":"14626:214:17","statements":[{"nodeType":"YulAssignment","src":"14759:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14786:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"14792:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"14767:18:17"},"nodeType":"YulFunctionCall","src":"14767:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14759:4:17"}]},{"nodeType":"YulAssignment","src":"14805:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14816:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14826:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"14829:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14822:3:17"},"nodeType":"YulFunctionCall","src":"14822:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14813:2:17"},"nodeType":"YulFunctionCall","src":"14813:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"14805:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14607:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"14613:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"14621:4:17","type":""}],"src":"14545:295:17"},{"body":{"nodeType":"YulBlock","src":"14937:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14948:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14995:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14962:32:17"},"nodeType":"YulFunctionCall","src":"14962:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"14952:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"15084:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"15086:16:17"},"nodeType":"YulFunctionCall","src":"15086:18:17"},"nodeType":"YulExpressionStatement","src":"15086:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15056:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15064:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15053:2:17"},"nodeType":"YulFunctionCall","src":"15053:30:17"},"nodeType":"YulIf","src":"15050:56:17"},{"nodeType":"YulVariableDeclaration","src":"15116:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15162:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"15156:5:17"},"nodeType":"YulFunctionCall","src":"15156:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"15130:25:17"},"nodeType":"YulFunctionCall","src":"15130:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"15120:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15261:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"15267:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"15275:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"15215:45:17"},"nodeType":"YulFunctionCall","src":"15215:67:17"},"nodeType":"YulExpressionStatement","src":"15215:67:17"},{"nodeType":"YulVariableDeclaration","src":"15292:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15309:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"15296:9:17","type":""}]},{"nodeType":"YulAssignment","src":"15320:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15333:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15320:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15384:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15398:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15417:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15429:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15425:3:17"},"nodeType":"YulFunctionCall","src":"15425:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15413:3:17"},"nodeType":"YulFunctionCall","src":"15413:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"15402:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15449:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15495:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"15463:31:17"},"nodeType":"YulFunctionCall","src":"15463:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"15453:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15513:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15522:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15517:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"15581:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15606:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15624:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15629:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15620:3:17"},"nodeType":"YulFunctionCall","src":"15620:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15614:5:17"},"nodeType":"YulFunctionCall","src":"15614:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15599:6:17"},"nodeType":"YulFunctionCall","src":"15599:42:17"},"nodeType":"YulExpressionStatement","src":"15599:42:17"},{"nodeType":"YulAssignment","src":"15658:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15672:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15680:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15668:3:17"},"nodeType":"YulFunctionCall","src":"15668:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15658:6:17"}]},{"nodeType":"YulAssignment","src":"15699:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15716:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15727:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15712:3:17"},"nodeType":"YulFunctionCall","src":"15712:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15699:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15547:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"15550:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15544:2:17"},"nodeType":"YulFunctionCall","src":"15544:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15559:21:17","statements":[{"nodeType":"YulAssignment","src":"15561:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15570:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"15573:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15566:3:17"},"nodeType":"YulFunctionCall","src":"15566:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15561:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"15540:3:17","statements":[]},"src":"15536:208:17"},{"body":{"nodeType":"YulBlock","src":"15780:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15798:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15825:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15830:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15821:3:17"},"nodeType":"YulFunctionCall","src":"15821:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15815:5:17"},"nodeType":"YulFunctionCall","src":"15815:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"15802:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15865:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"15892:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15907:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15915:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15903:3:17"},"nodeType":"YulFunctionCall","src":"15903:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"15873:18:17"},"nodeType":"YulFunctionCall","src":"15873:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15858:6:17"},"nodeType":"YulFunctionCall","src":"15858:64:17"},"nodeType":"YulExpressionStatement","src":"15858:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"15763:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"15772:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15760:2:17"},"nodeType":"YulFunctionCall","src":"15760:19:17"},"nodeType":"YulIf","src":"15757:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15956:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15970:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15978:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15966:3:17"},"nodeType":"YulFunctionCall","src":"15966:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"15982:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15962:3:17"},"nodeType":"YulFunctionCall","src":"15962:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15949:6:17"},"nodeType":"YulFunctionCall","src":"15949:36:17"},"nodeType":"YulExpressionStatement","src":"15949:36:17"}]},"nodeType":"YulCase","src":"15377:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15382:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16012:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"16026:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"16039:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"16030:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"16063:67:17","statements":[{"nodeType":"YulAssignment","src":"16081:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"16100:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"16105:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16096:3:17"},"nodeType":"YulFunctionCall","src":"16096:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16090:5:17"},"nodeType":"YulFunctionCall","src":"16090:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16081:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"16056:6:17"},"nodeType":"YulIf","src":"16053:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"16150:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16209:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"16216:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"16156:52:17"},"nodeType":"YulFunctionCall","src":"16156:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"16143:6:17"},"nodeType":"YulFunctionCall","src":"16143:81:17"},"nodeType":"YulExpressionStatement","src":"16143:81:17"}]},"nodeType":"YulCase","src":"16004:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"15357:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15365:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15354:2:17"},"nodeType":"YulFunctionCall","src":"15354:14:17"},"nodeType":"YulSwitch","src":"15347:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"14926:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"14932:3:17","type":""}],"src":"14845:1395:17"},{"body":{"nodeType":"YulBlock","src":"16311:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16328:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16351:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16333:17:17"},"nodeType":"YulFunctionCall","src":"16333:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16321:6:17"},"nodeType":"YulFunctionCall","src":"16321:37:17"},"nodeType":"YulExpressionStatement","src":"16321:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16299:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16306:3:17","type":""}],"src":"16246:118:17"},{"body":{"nodeType":"YulBlock","src":"16466:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16483:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16488:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16476:6:17"},"nodeType":"YulFunctionCall","src":"16476:19:17"},"nodeType":"YulExpressionStatement","src":"16476:19:17"},{"nodeType":"YulAssignment","src":"16504:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16523:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16528:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16519:3:17"},"nodeType":"YulFunctionCall","src":"16519:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16504:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16438:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"16443:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16454:11:17","type":""}],"src":"16370:169:17"},{"body":{"nodeType":"YulBlock","src":"16637:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"16647:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16694:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16661:32:17"},"nodeType":"YulFunctionCall","src":"16661:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16651:6:17","type":""}]},{"nodeType":"YulAssignment","src":"16709:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16775:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16780:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16716:58:17"},"nodeType":"YulFunctionCall","src":"16716:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16709:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16835:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"16842:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16831:3:17"},"nodeType":"YulFunctionCall","src":"16831:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"16849:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16854:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16796:34:17"},"nodeType":"YulFunctionCall","src":"16796:65:17"},"nodeType":"YulExpressionStatement","src":"16796:65:17"},{"nodeType":"YulAssignment","src":"16870:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16881:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16908:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16886:21:17"},"nodeType":"YulFunctionCall","src":"16886:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16877:3:17"},"nodeType":"YulFunctionCall","src":"16877:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16870:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16618:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16625:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16633:3:17","type":""}],"src":"16545:377:17"},{"body":{"nodeType":"YulBlock","src":"17074:277:17","statements":[{"nodeType":"YulAssignment","src":"17084:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17096:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17107:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17092:3:17"},"nodeType":"YulFunctionCall","src":"17092:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17084:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17164:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17177:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17188:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17173:3:17"},"nodeType":"YulFunctionCall","src":"17173:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17120:43:17"},"nodeType":"YulFunctionCall","src":"17120:71:17"},"nodeType":"YulExpressionStatement","src":"17120:71:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17212:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17223:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17208:3:17"},"nodeType":"YulFunctionCall","src":"17208:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17232:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"17238:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17228:3:17"},"nodeType":"YulFunctionCall","src":"17228:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17201:6:17"},"nodeType":"YulFunctionCall","src":"17201:48:17"},"nodeType":"YulExpressionStatement","src":"17201:48:17"},{"nodeType":"YulAssignment","src":"17258:86:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17330:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"17339:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17266:63:17"},"nodeType":"YulFunctionCall","src":"17266:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17258:4:17"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17038:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17050:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17058:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17069:4:17","type":""}],"src":"16928:423:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct PatientMedication.MedicationRecord -> struct PatientMedication.MedicationRecord\n    function abi_encode_t_struct$_MedicationRecord_$6331_memory_ptr_to_t_struct$_MedicationRecord_$6331_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // recordId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // medicationName\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // dosage\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // instructions\n\n            let memberValue0 := mload(add(value, 0x60))\n\n            mstore(add(pos, 0x60), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // issueDate\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // prescribingDoctor\n\n            let memberValue0 := mload(add(value, 0xa0))\n\n            mstore(add(pos, 0xa0), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // receipt\n\n            let memberValue0 := mload(add(value, 0xc0))\n\n            mstore(add(pos, 0xc0), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_MedicationRecord_$6331_memory_ptr_to_t_struct$_MedicationRecord_$6331_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_MedicationRecord_$6331_memory_ptr_to_t_struct$_MedicationRecord_$6331_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct PatientMedication.MedicationRecord[] -> struct PatientMedication.MedicationRecord[]\n    function abi_encode_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_MedicationRecord_$6331_memory_ptr_to_t_struct$_MedicationRecord_$6331_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MedicationRecord_$6331_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c80635cba966f14610046578063e38682b414610076578063fe4ae9b414610092575b600080fd5b610060600480360381019061005b9190610a04565b6100b0565b60405161006d9190610c54565b60405180910390f35b610090600480360381019061008b9190610dab565b61043b565b005b61009a610609565b6040516100a79190610c54565b60405180910390f35b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561043057838290600052602060002090600702016040518060e00160405290816000820154815260200160018201805461014d90610ee1565b80601f016020809104026020016040519081016040528092919081815260200182805461017990610ee1565b80156101c65780601f1061019b576101008083540402835291602001916101c6565b820191906000526020600020905b8154815290600101906020018083116101a957829003601f168201915b505050505081526020016002820180546101df90610ee1565b80601f016020809104026020016040519081016040528092919081815260200182805461020b90610ee1565b80156102585780601f1061022d57610100808354040283529160200191610258565b820191906000526020600020905b81548152906001019060200180831161023b57829003601f168201915b5050505050815260200160038201805461027190610ee1565b80601f016020809104026020016040519081016040528092919081815260200182805461029d90610ee1565b80156102ea5780601f106102bf576101008083540402835291602001916102ea565b820191906000526020600020905b8154815290600101906020018083116102cd57829003601f168201915b505050505081526020016004820154815260200160058201805461030d90610ee1565b80601f016020809104026020016040519081016040528092919081815260200182805461033990610ee1565b80156103865780601f1061035b57610100808354040283529160200191610386565b820191906000526020600020905b81548152906001019060200180831161036957829003601f168201915b5050505050815260200160068201805461039f90610ee1565b80601f01602080910402602001604051908101604052809291908181526020018280546103cb90610ee1565b80156104185780601f106103ed57610100808354040283529160200191610418565b820191906000526020600020905b8154815290600101906020018083116103fb57829003601f168201915b50505050508152505081526020019060010190610110565b505050509050919050565b600060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061048b9190610f41565b905060006040518060e001604052808381526020018881526020018781526020018681526020014281526020018581526020018481525090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000155602082015181600101908161054b9190611121565b5060408201518160020190816105619190611121565b5060608201518160030190816105779190611121565b506080820151816004015560a08201518160050190816105979190611121565b5060c08201518160060190816105ad9190611121565b5050503373ffffffffffffffffffffffffffffffffffffffff167f49c0d09b0985264670299950cd84008de50b13096fac0c8212665a0b958f555183896040516105f892919061124c565b60405180910390a250505050505050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561098957838290600052602060002090600702016040518060e0016040529081600082015481526020016001820180546106a690610ee1565b80601f01602080910402602001604051908101604052809291908181526020018280546106d290610ee1565b801561071f5780601f106106f45761010080835404028352916020019161071f565b820191906000526020600020905b81548152906001019060200180831161070257829003601f168201915b5050505050815260200160028201805461073890610ee1565b80601f016020809104026020016040519081016040528092919081815260200182805461076490610ee1565b80156107b15780601f10610786576101008083540402835291602001916107b1565b820191906000526020600020905b81548152906001019060200180831161079457829003601f168201915b505050505081526020016003820180546107ca90610ee1565b80601f01602080910402602001604051908101604052809291908181526020018280546107f690610ee1565b80156108435780601f1061081857610100808354040283529160200191610843565b820191906000526020600020905b81548152906001019060200180831161082657829003601f168201915b505050505081526020016004820154815260200160058201805461086690610ee1565b80601f016020809104026020016040519081016040528092919081815260200182805461089290610ee1565b80156108df5780601f106108b4576101008083540402835291602001916108df565b820191906000526020600020905b8154815290600101906020018083116108c257829003601f168201915b505050505081526020016006820180546108f890610ee1565b80601f016020809104026020016040519081016040528092919081815260200182805461092490610ee1565b80156109715780601f1061094657610100808354040283529160200191610971565b820191906000526020600020905b81548152906001019060200180831161095457829003601f168201915b50505050508152505081526020019060010190610669565b50505050905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109d1826109a6565b9050919050565b6109e1816109c6565b81146109ec57600080fd5b50565b6000813590506109fe816109d8565b92915050565b600060208284031215610a1a57610a1961099c565b5b6000610a28848285016109ef565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b610a7081610a5d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab0578082015181840152602081019050610a95565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ad882610a76565b610ae28185610a81565b9350610af2818560208601610a92565b610afb81610abc565b840191505092915050565b600060e083016000830151610b1e6000860182610a67565b5060208301518482036020860152610b368282610acd565b91505060408301518482036040860152610b508282610acd565b91505060608301518482036060860152610b6a8282610acd565b9150506080830151610b7f6080860182610a67565b5060a083015184820360a0860152610b978282610acd565b91505060c083015184820360c0860152610bb18282610acd565b9150508091505092915050565b6000610bca8383610b06565b905092915050565b6000602082019050919050565b6000610bea82610a31565b610bf48185610a3c565b935083602082028501610c0685610a4d565b8060005b85811015610c425784840389528151610c238582610bbe565b9450610c2e83610bd2565b925060208a01995050600181019050610c0a565b50829750879550505050505092915050565b60006020820190508181036000830152610c6e8184610bdf565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cb882610abc565b810181811067ffffffffffffffff82111715610cd757610cd6610c80565b5b80604052505050565b6000610cea610992565b9050610cf68282610caf565b919050565b600067ffffffffffffffff821115610d1657610d15610c80565b5b610d1f82610abc565b9050602081019050919050565b82818337600083830152505050565b6000610d4e610d4984610cfb565b610ce0565b905082815260208101848484011115610d6a57610d69610c7b565b5b610d75848285610d2c565b509392505050565b600082601f830112610d9257610d91610c76565b5b8135610da2848260208601610d3b565b91505092915050565b600080600080600060a08688031215610dc757610dc661099c565b5b600086013567ffffffffffffffff811115610de557610de46109a1565b5b610df188828901610d7d565b955050602086013567ffffffffffffffff811115610e1257610e116109a1565b5b610e1e88828901610d7d565b945050604086013567ffffffffffffffff811115610e3f57610e3e6109a1565b5b610e4b88828901610d7d565b935050606086013567ffffffffffffffff811115610e6c57610e6b6109a1565b5b610e7888828901610d7d565b925050608086013567ffffffffffffffff811115610e9957610e986109a1565b5b610ea588828901610d7d565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ef957607f821691505b602082108103610f0c57610f0b610eb2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f4c82610a5d565b9150610f5783610a5d565b9250828201905080821115610f6f57610f6e610f12565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610fd77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610f9a565b610fe18683610f9a565b95508019841693508086168417925050509392505050565b6000819050919050565b600061101e61101961101484610a5d565b610ff9565b610a5d565b9050919050565b6000819050919050565b61103883611003565b61104c61104482611025565b848454610fa7565b825550505050565b600090565b611061611054565b61106c81848461102f565b505050565b5b8181101561109057611085600082611059565b600181019050611072565b5050565b601f8211156110d5576110a681610f75565b6110af84610f8a565b810160208510156110be578190505b6110d26110ca85610f8a565b830182611071565b50505b505050565b600082821c905092915050565b60006110f8600019846008026110da565b1980831691505092915050565b600061111183836110e7565b9150826002028217905092915050565b61112a82610a76565b67ffffffffffffffff81111561114357611142610c80565b5b61114d8254610ee1565b611158828285611094565b600060209050601f83116001811461118b5760008415611179578287015190505b6111838582611105565b8655506111eb565b601f19841661119986610f75565b60005b828110156111c15784890151825560018201915060208501945060208101905061119c565b868310156111de57848901516111da601f8916826110e7565b8355505b6001600288020188555050505b505050505050565b6111fc81610a5d565b82525050565b600082825260208201905092915050565b600061121e82610a76565b6112288185611202565b9350611238818560208601610a92565b61124181610abc565b840191505092915050565b600060408201905061126160008301856111f3565b81810360208301526112738184611213565b9050939250505056fea2646970667358221220d18a98233acfc4939de623506c2e3a38318f162008b34e6e89f67bc43f3ed9c564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5CBA966F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xE38682B4 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xFE4AE9B4 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0xDAB JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x430 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x14D SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x179 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x1DF SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20B SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x258 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x22D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x258 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x23B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x271 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29D SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x386 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x386 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x369 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x39F SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3CB SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x418 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x418 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x110 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x48B SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP2 PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49C0D09B0985264670299950CD84008DE50B13096FAC0C8212665A0B958F5551 DUP4 DUP10 PUSH1 0x40 MLOAD PUSH2 0x5F8 SWAP3 SWAP2 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x989 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x6A6 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D2 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x702 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x738 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x764 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x786 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x794 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x7CA SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7F6 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x843 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x818 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x843 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x826 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x866 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x892 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x8F8 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x924 SWAP1 PUSH2 0xEE1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x971 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x946 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x971 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x954 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x669 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D1 DUP3 PUSH2 0x9A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E1 DUP2 PUSH2 0x9C6 JUMP JUMPDEST DUP2 EQ PUSH2 0x9EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9FE DUP2 PUSH2 0x9D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1A JUMPI PUSH2 0xA19 PUSH2 0x99C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA28 DUP5 DUP3 DUP6 ADD PUSH2 0x9EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA70 DUP2 PUSH2 0xA5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD8 DUP3 PUSH2 0xA76 JUMP JUMPDEST PUSH2 0xAE2 DUP2 DUP6 PUSH2 0xA81 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA92 JUMP JUMPDEST PUSH2 0xAFB DUP2 PUSH2 0xABC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0xB1E PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0xA67 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xB36 DUP3 DUP3 PUSH2 0xACD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0xB50 DUP3 DUP3 PUSH2 0xACD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0xB6A DUP3 DUP3 PUSH2 0xACD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0xB7F PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0xA67 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0xB97 DUP3 DUP3 PUSH2 0xACD JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0xBB1 DUP3 DUP3 PUSH2 0xACD JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCA DUP4 DUP4 PUSH2 0xB06 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEA DUP3 PUSH2 0xA31 JUMP JUMPDEST PUSH2 0xBF4 DUP2 DUP6 PUSH2 0xA3C JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xC06 DUP6 PUSH2 0xA4D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC42 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xC23 DUP6 DUP3 PUSH2 0xBBE JUMP JUMPDEST SWAP5 POP PUSH2 0xC2E DUP4 PUSH2 0xBD2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xC0A JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC6E DUP2 DUP5 PUSH2 0xBDF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xCB8 DUP3 PUSH2 0xABC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCD7 JUMPI PUSH2 0xCD6 PUSH2 0xC80 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEA PUSH2 0x992 JUMP JUMPDEST SWAP1 POP PUSH2 0xCF6 DUP3 DUP3 PUSH2 0xCAF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD16 JUMPI PUSH2 0xD15 PUSH2 0xC80 JUMP JUMPDEST JUMPDEST PUSH2 0xD1F DUP3 PUSH2 0xABC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD4E PUSH2 0xD49 DUP5 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0xCE0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xD6A JUMPI PUSH2 0xD69 PUSH2 0xC7B JUMP JUMPDEST JUMPDEST PUSH2 0xD75 DUP5 DUP3 DUP6 PUSH2 0xD2C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD92 JUMPI PUSH2 0xD91 PUSH2 0xC76 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDA2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDC7 JUMPI PUSH2 0xDC6 PUSH2 0x99C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDE5 JUMPI PUSH2 0xDE4 PUSH2 0x9A1 JUMP JUMPDEST JUMPDEST PUSH2 0xDF1 DUP9 DUP3 DUP10 ADD PUSH2 0xD7D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE12 JUMPI PUSH2 0xE11 PUSH2 0x9A1 JUMP JUMPDEST JUMPDEST PUSH2 0xE1E DUP9 DUP3 DUP10 ADD PUSH2 0xD7D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE3F JUMPI PUSH2 0xE3E PUSH2 0x9A1 JUMP JUMPDEST JUMPDEST PUSH2 0xE4B DUP9 DUP3 DUP10 ADD PUSH2 0xD7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE6C JUMPI PUSH2 0xE6B PUSH2 0x9A1 JUMP JUMPDEST JUMPDEST PUSH2 0xE78 DUP9 DUP3 DUP10 ADD PUSH2 0xD7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE98 PUSH2 0x9A1 JUMP JUMPDEST JUMPDEST PUSH2 0xEA5 DUP9 DUP3 DUP10 ADD PUSH2 0xD7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEF9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF0C JUMPI PUSH2 0xF0B PUSH2 0xEB2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF4C DUP3 PUSH2 0xA5D JUMP JUMPDEST SWAP2 POP PUSH2 0xF57 DUP4 PUSH2 0xA5D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF6F JUMPI PUSH2 0xF6E PUSH2 0xF12 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0xFD7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xF9A JUMP JUMPDEST PUSH2 0xFE1 DUP7 DUP4 PUSH2 0xF9A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x101E PUSH2 0x1019 PUSH2 0x1014 DUP5 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1038 DUP4 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x104C PUSH2 0x1044 DUP3 PUSH2 0x1025 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xFA7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1061 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0x106C DUP2 DUP5 DUP5 PUSH2 0x102F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1090 JUMPI PUSH2 0x1085 PUSH1 0x0 DUP3 PUSH2 0x1059 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1072 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x10D5 JUMPI PUSH2 0x10A6 DUP2 PUSH2 0xF75 JUMP JUMPDEST PUSH2 0x10AF DUP5 PUSH2 0xF8A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x10BE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x10D2 PUSH2 0x10CA DUP6 PUSH2 0xF8A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1071 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F8 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x10DA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1111 DUP4 DUP4 PUSH2 0x10E7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x112A DUP3 PUSH2 0xA76 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1143 JUMPI PUSH2 0x1142 PUSH2 0xC80 JUMP JUMPDEST JUMPDEST PUSH2 0x114D DUP3 SLOAD PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x1158 DUP3 DUP3 DUP6 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x118B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1179 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1183 DUP6 DUP3 PUSH2 0x1105 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x11EB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1199 DUP7 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11C1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x119C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x11DE JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x11DA PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x10E7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11FC DUP2 PUSH2 0xA5D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x121E DUP3 PUSH2 0xA76 JUMP JUMPDEST PUSH2 0x1228 DUP2 DUP6 PUSH2 0x1202 JUMP JUMPDEST SWAP4 POP PUSH2 0x1238 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA92 JUMP JUMPDEST PUSH2 0x1241 DUP2 PUSH2 0xABC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1261 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x11F3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1273 DUP2 DUP5 PUSH2 0x1213 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP11 SWAP9 0x23 GASPRICE 0xCF 0xC4 SWAP4 SWAP14 0xE6 0x23 POP PUSH13 0x2E3A38318F162008B34E6E89F6 PUSH28 0xC43F3ED9C564736F6C63430008140033000000000000000000000000 ","sourceMap":"61:1662:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1535:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;551:800;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1359:166;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1535:185;1638:25;1688:14;:24;1703:8;1688:24;;;;;;;;;;;;;;;1681:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1535:185;;;:::o;551:800::-;791:19;849:1;813:14;:26;828:10;813:26;;;;;;;;;;;;;;;:33;;;;:37;;;;:::i;:::-;791:59;;863:33;899:308;;;;;;;;941:11;899:308;;;;983:15;899:308;;;;1021:7;899:308;;;;1057:13;899:308;;;;1096:15;899:308;;;;1145:18;899:308;;;;1187:8;899:308;;;863:344;;1220:14;:26;1235:10;1220:26;;;;;;;;;;;;;;;1252:9;1220:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;1302:10;1280:63;;;1314:11;1327:15;1280:63;;;;;;;:::i;:::-;;;;;;;;780:571;;551:800;;;;;:::o;1359:166::-;1441:25;1491:14;:26;1506:10;1491:26;;;;;;;;;;;;;;;1484:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:166;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:148::-;1277:6;1311:5;1305:12;1295:22;;1176:148;;;:::o;1330:218::-;1463:11;1497:6;1492:3;1485:19;1537:4;1532:3;1528:14;1513:29;;1330:218;;;;:::o;1554:166::-;1655:4;1678:3;1670:11;;1708:4;1703:3;1699:14;1691:22;;1554:166;;;:::o;1726:77::-;1763:7;1792:5;1781:16;;1726:77;;;:::o;1809:108::-;1886:24;1904:5;1886:24;:::i;:::-;1881:3;1874:37;1809:108;;:::o;1923:99::-;1975:6;2009:5;2003:12;1993:22;;1923:99;;;:::o;2028:159::-;2102:11;2136:6;2131:3;2124:19;2176:4;2171:3;2167:14;2152:29;;2028:159;;;;:::o;2193:246::-;2274:1;2284:113;2298:6;2295:1;2292:13;2284:113;;;2383:1;2378:3;2374:11;2368:18;2364:1;2359:3;2355:11;2348:39;2320:2;2317:1;2313:10;2308:15;;2284:113;;;2431:1;2422:6;2417:3;2413:16;2406:27;2255:184;2193:246;;;:::o;2445:102::-;2486:6;2537:2;2533:7;2528:2;2521:5;2517:14;2513:28;2503:38;;2445:102;;;:::o;2553:357::-;2631:3;2659:39;2692:5;2659:39;:::i;:::-;2714:61;2768:6;2763:3;2714:61;:::i;:::-;2707:68;;2784:65;2842:6;2837:3;2830:4;2823:5;2819:16;2784:65;:::i;:::-;2874:29;2896:6;2874:29;:::i;:::-;2869:3;2865:39;2858:46;;2635:275;2553:357;;;;:::o;3010:1813::-;3137:3;3173:4;3168:3;3164:14;3264:4;3257:5;3253:16;3247:23;3283:63;3340:4;3335:3;3331:14;3317:12;3283:63;:::i;:::-;3188:168;3448:4;3441:5;3437:16;3431:23;3501:3;3495:4;3491:14;3484:4;3479:3;3475:14;3468:38;3527:73;3595:4;3581:12;3527:73;:::i;:::-;3519:81;;3366:245;3695:4;3688:5;3684:16;3678:23;3748:3;3742:4;3738:14;3731:4;3726:3;3722:14;3715:38;3774:73;3842:4;3828:12;3774:73;:::i;:::-;3766:81;;3621:237;3948:4;3941:5;3937:16;3931:23;4001:3;3995:4;3991:14;3984:4;3979:3;3975:14;3968:38;4027:73;4095:4;4081:12;4027:73;:::i;:::-;4019:81;;3868:243;4198:4;4191:5;4187:16;4181:23;4217:63;4274:4;4269:3;4265:14;4251:12;4217:63;:::i;:::-;4121:169;4385:4;4378:5;4374:16;4368:23;4438:3;4432:4;4428:14;4421:4;4416:3;4412:14;4405:38;4464:73;4532:4;4518:12;4464:73;:::i;:::-;4456:81;;4300:248;4633:4;4626:5;4622:16;4616:23;4686:3;4680:4;4676:14;4669:4;4664:3;4660:14;4653:38;4712:73;4780:4;4766:12;4712:73;:::i;:::-;4704:81;;4558:238;4813:4;4806:11;;3142:1681;3010:1813;;;;:::o;4829:292::-;4966:10;5001:114;5111:3;5103:6;5001:114;:::i;:::-;4987:128;;4829:292;;;;:::o;5127:147::-;5231:4;5263;5258:3;5254:14;5246:22;;5127:147;;;:::o;5378:1183::-;5565:3;5594:88;5676:5;5594:88;:::i;:::-;5698:120;5811:6;5806:3;5698:120;:::i;:::-;5691:127;;5844:3;5889:4;5881:6;5877:17;5872:3;5868:27;5919:90;6003:5;5919:90;:::i;:::-;6032:7;6063:1;6048:468;6073:6;6070:1;6067:13;6048:468;;;6144:9;6138:4;6134:20;6129:3;6122:33;6195:6;6189:13;6223:132;6350:4;6335:13;6223:132;:::i;:::-;6215:140;;6378:94;6465:6;6378:94;:::i;:::-;6368:104;;6501:4;6496:3;6492:14;6485:21;;6108:408;6095:1;6092;6088:9;6083:14;;6048:468;;;6052:14;6532:4;6525:11;;6552:3;6545:10;;5570:991;;;;;5378:1183;;;;:::o;6567:509::-;6778:4;6816:2;6805:9;6801:18;6793:26;;6865:9;6859:4;6855:20;6851:1;6840:9;6836:17;6829:47;6893:176;7064:4;7055:6;6893:176;:::i;:::-;6885:184;;6567:509;;;;:::o;7082:117::-;7191:1;7188;7181:12;7205:117;7314:1;7311;7304:12;7328:180;7376:77;7373:1;7366:88;7473:4;7470:1;7463:15;7497:4;7494:1;7487:15;7514:281;7597:27;7619:4;7597:27;:::i;:::-;7589:6;7585:40;7727:6;7715:10;7712:22;7691:18;7679:10;7676:34;7673:62;7670:88;;;7738:18;;:::i;:::-;7670:88;7778:10;7774:2;7767:22;7557:238;7514:281;;:::o;7801:129::-;7835:6;7862:20;;:::i;:::-;7852:30;;7891:33;7919:4;7911:6;7891:33;:::i;:::-;7801:129;;;:::o;7936:308::-;7998:4;8088:18;8080:6;8077:30;8074:56;;;8110:18;;:::i;:::-;8074:56;8148:29;8170:6;8148:29;:::i;:::-;8140:37;;8232:4;8226;8222:15;8214:23;;7936:308;;;:::o;8250:146::-;8347:6;8342:3;8337;8324:30;8388:1;8379:6;8374:3;8370:16;8363:27;8250:146;;;:::o;8402:425::-;8480:5;8505:66;8521:49;8563:6;8521:49;:::i;:::-;8505:66;:::i;:::-;8496:75;;8594:6;8587:5;8580:21;8632:4;8625:5;8621:16;8670:3;8661:6;8656:3;8652:16;8649:25;8646:112;;;8677:79;;:::i;:::-;8646:112;8767:54;8814:6;8809:3;8804;8767:54;:::i;:::-;8486:341;8402:425;;;;;:::o;8847:340::-;8903:5;8952:3;8945:4;8937:6;8933:17;8929:27;8919:122;;8960:79;;:::i;:::-;8919:122;9077:6;9064:20;9102:79;9177:3;9169:6;9162:4;9154:6;9150:17;9102:79;:::i;:::-;9093:88;;8909:278;8847:340;;;;:::o;9193:1811::-;9338:6;9346;9354;9362;9370;9419:3;9407:9;9398:7;9394:23;9390:33;9387:120;;;9426:79;;:::i;:::-;9387:120;9574:1;9563:9;9559:17;9546:31;9604:18;9596:6;9593:30;9590:117;;;9626:79;;:::i;:::-;9590:117;9731:63;9786:7;9777:6;9766:9;9762:22;9731:63;:::i;:::-;9721:73;;9517:287;9871:2;9860:9;9856:18;9843:32;9902:18;9894:6;9891:30;9888:117;;;9924:79;;:::i;:::-;9888:117;10029:63;10084:7;10075:6;10064:9;10060:22;10029:63;:::i;:::-;10019:73;;9814:288;10169:2;10158:9;10154:18;10141:32;10200:18;10192:6;10189:30;10186:117;;;10222:79;;:::i;:::-;10186:117;10327:63;10382:7;10373:6;10362:9;10358:22;10327:63;:::i;:::-;10317:73;;10112:288;10467:2;10456:9;10452:18;10439:32;10498:18;10490:6;10487:30;10484:117;;;10520:79;;:::i;:::-;10484:117;10625:63;10680:7;10671:6;10660:9;10656:22;10625:63;:::i;:::-;10615:73;;10410:288;10765:3;10754:9;10750:19;10737:33;10797:18;10789:6;10786:30;10783:117;;;10819:79;;:::i;:::-;10783:117;10924:63;10979:7;10970:6;10959:9;10955:22;10924:63;:::i;:::-;10914:73;;10708:289;9193:1811;;;;;;;;:::o;11010:180::-;11058:77;11055:1;11048:88;11155:4;11152:1;11145:15;11179:4;11176:1;11169:15;11196:320;11240:6;11277:1;11271:4;11267:12;11257:22;;11324:1;11318:4;11314:12;11345:18;11335:81;;11401:4;11393:6;11389:17;11379:27;;11335:81;11463:2;11455:6;11452:14;11432:18;11429:38;11426:84;;11482:18;;:::i;:::-;11426:84;11247:269;11196:320;;;:::o;11522:180::-;11570:77;11567:1;11560:88;11667:4;11664:1;11657:15;11691:4;11688:1;11681:15;11708:191;11748:3;11767:20;11785:1;11767:20;:::i;:::-;11762:25;;11801:20;11819:1;11801:20;:::i;:::-;11796:25;;11844:1;11841;11837:9;11830:16;;11865:3;11862:1;11859:10;11856:36;;;11872:18;;:::i;:::-;11856:36;11708:191;;;;:::o;11905:141::-;11954:4;11977:3;11969:11;;12000:3;11997:1;11990:14;12034:4;12031:1;12021:18;12013:26;;11905:141;;;:::o;12052:93::-;12089:6;12136:2;12131;12124:5;12120:14;12116:23;12106:33;;12052:93;;;:::o;12151:107::-;12195:8;12245:5;12239:4;12235:16;12214:37;;12151:107;;;;:::o;12264:393::-;12333:6;12383:1;12371:10;12367:18;12406:97;12436:66;12425:9;12406:97;:::i;:::-;12524:39;12554:8;12543:9;12524:39;:::i;:::-;12512:51;;12596:4;12592:9;12585:5;12581:21;12572:30;;12645:4;12635:8;12631:19;12624:5;12621:30;12611:40;;12340:317;;12264:393;;;;;:::o;12663:60::-;12691:3;12712:5;12705:12;;12663:60;;;:::o;12729:142::-;12779:9;12812:53;12830:34;12839:24;12857:5;12839:24;:::i;:::-;12830:34;:::i;:::-;12812:53;:::i;:::-;12799:66;;12729:142;;;:::o;12877:75::-;12920:3;12941:5;12934:12;;12877:75;;;:::o;12958:269::-;13068:39;13099:7;13068:39;:::i;:::-;13129:91;13178:41;13202:16;13178:41;:::i;:::-;13170:6;13163:4;13157:11;13129:91;:::i;:::-;13123:4;13116:105;13034:193;12958:269;;;:::o;13233:73::-;13278:3;13233:73;:::o;13312:189::-;13389:32;;:::i;:::-;13430:65;13488:6;13480;13474:4;13430:65;:::i;:::-;13365:136;13312:189;;:::o;13507:186::-;13567:120;13584:3;13577:5;13574:14;13567:120;;;13638:39;13675:1;13668:5;13638:39;:::i;:::-;13611:1;13604:5;13600:13;13591:22;;13567:120;;;13507:186;;:::o;13699:543::-;13800:2;13795:3;13792:11;13789:446;;;13834:38;13866:5;13834:38;:::i;:::-;13918:29;13936:10;13918:29;:::i;:::-;13908:8;13904:44;14101:2;14089:10;14086:18;14083:49;;;14122:8;14107:23;;14083:49;14145:80;14201:22;14219:3;14201:22;:::i;:::-;14191:8;14187:37;14174:11;14145:80;:::i;:::-;13804:431;;13789:446;13699:543;;;:::o;14248:117::-;14302:8;14352:5;14346:4;14342:16;14321:37;;14248:117;;;;:::o;14371:169::-;14415:6;14448:51;14496:1;14492:6;14484:5;14481:1;14477:13;14448:51;:::i;:::-;14444:56;14529:4;14523;14519:15;14509:25;;14422:118;14371:169;;;;:::o;14545:295::-;14621:4;14767:29;14792:3;14786:4;14767:29;:::i;:::-;14759:37;;14829:3;14826:1;14822:11;14816:4;14813:21;14805:29;;14545:295;;;;:::o;14845:1395::-;14962:37;14995:3;14962:37;:::i;:::-;15064:18;15056:6;15053:30;15050:56;;;15086:18;;:::i;:::-;15050:56;15130:38;15162:4;15156:11;15130:38;:::i;:::-;15215:67;15275:6;15267;15261:4;15215:67;:::i;:::-;15309:1;15333:4;15320:17;;15365:2;15357:6;15354:14;15382:1;15377:618;;;;16039:1;16056:6;16053:77;;;16105:9;16100:3;16096:19;16090:26;16081:35;;16053:77;16156:67;16216:6;16209:5;16156:67;:::i;:::-;16150:4;16143:81;16012:222;15347:887;;15377:618;15429:4;15425:9;15417:6;15413:22;15463:37;15495:4;15463:37;:::i;:::-;15522:1;15536:208;15550:7;15547:1;15544:14;15536:208;;;15629:9;15624:3;15620:19;15614:26;15606:6;15599:42;15680:1;15672:6;15668:14;15658:24;;15727:2;15716:9;15712:18;15699:31;;15573:4;15570:1;15566:12;15561:17;;15536:208;;;15772:6;15763:7;15760:19;15757:179;;;15830:9;15825:3;15821:19;15815:26;15873:48;15915:4;15907:6;15903:17;15892:9;15873:48;:::i;:::-;15865:6;15858:64;15780:156;15757:179;15982:1;15978;15970:6;15966:14;15962:22;15956:4;15949:36;15384:611;;;15347:887;;14937:1303;;;14845:1395;;:::o;16246:118::-;16333:24;16351:5;16333:24;:::i;:::-;16328:3;16321:37;16246:118;;:::o;16370:169::-;16454:11;16488:6;16483:3;16476:19;16528:4;16523:3;16519:14;16504:29;;16370:169;;;;:::o;16545:377::-;16633:3;16661:39;16694:5;16661:39;:::i;:::-;16716:71;16780:6;16775:3;16716:71;:::i;:::-;16709:78;;16796:65;16854:6;16849:3;16842:4;16835:5;16831:16;16796:65;:::i;:::-;16886:29;16908:6;16886:29;:::i;:::-;16881:3;16877:39;16870:46;;16637:285;16545:377;;;;:::o;16928:423::-;17069:4;17107:2;17096:9;17092:18;17084:26;;17120:71;17188:1;17177:9;17173:17;17164:6;17120:71;:::i;:::-;17238:9;17232:4;17228:20;17223:2;17212:9;17208:18;17201:48;17266:78;17339:4;17330:6;17266:78;:::i;:::-;17258:86;;16928:423;;;;;:::o"},"methodIdentifiers":{"addMedicationRecord(string,string,string,string,string)":"e38682b4","getMyMedicationRecords()":"fe4ae9b4","getPatientMedicationRecords(address)":"5cba966f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recordId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"medicationName\",\"type\":\"string\"}],\"name\":\"MedicationRecordAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_medicationName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dosage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_instructions\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_prescribingDoctor\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_receipt\",\"type\":\"string\"}],\"name\":\"addMedicationRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyMedicationRecords\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"recordId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"medicationName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dosage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"instructions\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"issueDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"prescribingDoctor\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"receipt\",\"type\":\"string\"}],\"internalType\":\"struct PatientMedication.MedicationRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"getPatientMedicationRecords\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"recordId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"medicationName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dosage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"instructions\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"issueDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"prescribingDoctor\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"receipt\",\"type\":\"string\"}],\"internalType\":\"struct PatientMedication.MedicationRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PatientMedicaition.sol\":\"PatientMedication\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PatientMedicaition.sol\":{\"keccak256\":\"0xed5299dc81c531230b528b0cc5a7363283a810fb6b2ff0f332fdc8ae40e222a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a96425e1c95b76b1a59884b1f7d30b2c1d056482e421804a67155c7b2f5af797\",\"dweb:/ipfs/QmYQZhy8nULh2LWr9xYw6hhLMyN2278jYDgoLGAYpTrp2i\"]}},\"version\":1}"}},"contracts/TicketMaster.sol":{"TicketMaster":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_eventId","type":"uint256"},{"internalType":"uint256","name":"_ticketId","type":"uint256"}],"name":"buyResaleTicket","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"creatorEvents","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_eventId","type":"uint256"},{"internalType":"uint256","name":"_seatId","type":"uint256"}],"name":"enableResale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_creator","type":"address"}],"name":"getEventsCreatedBy","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"getOccasion","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"tickets","type":"uint256"},{"internalType":"uint256","name":"maxTickets","type":"uint256"},{"internalType":"string","name":"date","type":"string"},{"internalType":"string","name":"time","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string","name":"bannerImage","type":"string"},{"internalType":"string","name":"vrVideo","type":"string"},{"internalType":"address","name":"creator","type":"address"}],"internalType":"struct TicketMaster.Occasion","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"getSeatsTaken","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserTickets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"hasBought","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"uint256","name":"_cost","type":"uint256"},{"internalType":"uint256","name":"_maxTickets","type":"uint256"},{"internalType":"string","name":"_date","type":"string"},{"internalType":"string","name":"_time","type":"string"},{"internalType":"string","name":"_location","type":"string"},{"internalType":"string","name":"_bannerImage","type":"string"}],"name":"list","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_seat","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"occasions","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"uint256","name":"tickets","type":"uint256"},{"internalType":"uint256","name":"maxTickets","type":"uint256"},{"internalType":"string","name":"date","type":"string"},{"internalType":"string","name":"time","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string","name":"bannerImage","type":"string"},{"internalType":"string","name":"vrVideo","type":"string"},{"internalType":"address","name":"creator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"resaleAllowed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_eventId","type":"uint256"},{"internalType":"uint256","name":"_seatId","type":"uint256"}],"name":"scanTicket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"seatTaken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"seatToTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"seatsTaken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"string","name":"_vrVideo","type":"string"}],"name":"setVRVideo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"ticketExhausted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalOccasions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_354":{"entryPoint":null,"id":354,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_6518":{"entryPoint":null,"id":6518,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":306,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1421,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1438,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":662,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":504,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":983,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1401,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1369,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":798,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":944,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":818,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1138,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":683,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":609,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1108,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":808,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1076,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":562,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":515,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":858,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":699,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1063,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":916,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":712,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":868,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":911,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5817:17","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:17","statements":[{"nodeType":"YulAssignment","src":"77:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:17"},"nodeType":"YulFunctionCall","src":"87:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:17","type":""}],"src":"7:99:17"},{"body":{"nodeType":"YulBlock","src":"140:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:17"},"nodeType":"YulFunctionCall","src":"150:88:17"},"nodeType":"YulExpressionStatement","src":"150:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:17"},"nodeType":"YulFunctionCall","src":"247:15:17"},"nodeType":"YulExpressionStatement","src":"247:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:17"},"nodeType":"YulFunctionCall","src":"271:15:17"},"nodeType":"YulExpressionStatement","src":"271:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:17"},{"body":{"nodeType":"YulBlock","src":"326:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:17"},"nodeType":"YulFunctionCall","src":"336:88:17"},"nodeType":"YulExpressionStatement","src":"336:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:17"},"nodeType":"YulFunctionCall","src":"433:15:17"},"nodeType":"YulExpressionStatement","src":"433:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:17"},"nodeType":"YulFunctionCall","src":"457:15:17"},"nodeType":"YulExpressionStatement","src":"457:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:17"},{"body":{"nodeType":"YulBlock","src":"535:269:17","statements":[{"nodeType":"YulAssignment","src":"545:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:17"},"nodeType":"YulFunctionCall","src":"555:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:17"},"nodeType":"YulFunctionCall","src":"602:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:17","statements":[{"nodeType":"YulAssignment","src":"667:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:17"},"nodeType":"YulFunctionCall","src":"677:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:17"},"nodeType":"YulFunctionCall","src":"626:26:17"},"nodeType":"YulIf","src":"623:81:17"},{"body":{"nodeType":"YulBlock","src":"756:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:17"},"nodeType":"YulFunctionCall","src":"770:18:17"},"nodeType":"YulExpressionStatement","src":"770:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:17"},"nodeType":"YulFunctionCall","src":"740:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:17"},"nodeType":"YulFunctionCall","src":"717:38:17"},"nodeType":"YulIf","src":"714:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:17","type":""}],"src":"484:320:17"},{"body":{"nodeType":"YulBlock","src":"864:87:17","statements":[{"nodeType":"YulAssignment","src":"874:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:17"},"nodeType":"YulFunctionCall","src":"895:14:17"},"nodeType":"YulExpressionStatement","src":"895:14:17"},{"nodeType":"YulAssignment","src":"918:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:17"},"nodeType":"YulFunctionCall","src":"926:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:17","type":""}],"src":"810:141:17"},{"body":{"nodeType":"YulBlock","src":"1001:49:17","statements":[{"nodeType":"YulAssignment","src":"1011:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:17"},"nodeType":"YulFunctionCall","src":"1025:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:17"},"nodeType":"YulFunctionCall","src":"1021:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:17","type":""}],"src":"957:93:17"},{"body":{"nodeType":"YulBlock","src":"1109:54:17","statements":[{"nodeType":"YulAssignment","src":"1119:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:17"},"nodeType":"YulFunctionCall","src":"1140:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:17","type":""}],"src":"1056:107:17"},{"body":{"nodeType":"YulBlock","src":"1245:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:17"},"nodeType":"YulFunctionCall","src":"1272:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:17"},"nodeType":"YulFunctionCall","src":"1311:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:17","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:17"},"nodeType":"YulFunctionCall","src":"1429:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:17"}]},{"nodeType":"YulAssignment","src":"1477:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:17"},"nodeType":"YulFunctionCall","src":"1497:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:17"},"nodeType":"YulFunctionCall","src":"1486:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:17"}]},{"nodeType":"YulAssignment","src":"1516:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:17"},"nodeType":"YulFunctionCall","src":"1536:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:17"},"nodeType":"YulFunctionCall","src":"1526:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:17","type":""}],"src":"1169:393:17"},{"body":{"nodeType":"YulBlock","src":"1613:32:17","statements":[{"nodeType":"YulAssignment","src":"1623:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:17","type":""}],"src":"1568:77:17"},{"body":{"nodeType":"YulBlock","src":"1683:28:17","statements":[{"nodeType":"YulAssignment","src":"1693:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:17","type":""}],"src":"1651:60:17"},{"body":{"nodeType":"YulBlock","src":"1777:82:17","statements":[{"nodeType":"YulAssignment","src":"1787:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:17"},"nodeType":"YulFunctionCall","src":"1827:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:17"},"nodeType":"YulFunctionCall","src":"1818:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:17"},"nodeType":"YulFunctionCall","src":"1800:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:17","type":""}],"src":"1717:142:17"},{"body":{"nodeType":"YulBlock","src":"1912:28:17","statements":[{"nodeType":"YulAssignment","src":"1922:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:17","type":""}],"src":"1865:75:17"},{"body":{"nodeType":"YulBlock","src":"2022:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:17"},"nodeType":"YulFunctionCall","src":"2056:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:17"},"nodeType":"YulFunctionCall","src":"2145:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:17"},"nodeType":"YulFunctionCall","src":"2166:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:17"},"nodeType":"YulFunctionCall","src":"2117:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:17"},"nodeType":"YulFunctionCall","src":"2104:105:17"},"nodeType":"YulExpressionStatement","src":"2104:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:17","type":""}],"src":"1946:269:17"},{"body":{"nodeType":"YulBlock","src":"2270:24:17","statements":[{"nodeType":"YulAssignment","src":"2280:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:17","type":""}],"src":"2221:73:17"},{"body":{"nodeType":"YulBlock","src":"2353:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:17"},"nodeType":"YulFunctionCall","src":"2377:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:17"},"nodeType":"YulFunctionCall","src":"2418:65:17"},"nodeType":"YulExpressionStatement","src":"2418:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:17","type":""}],"src":"2300:189:17"},{"body":{"nodeType":"YulBlock","src":"2545:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:17"},"nodeType":"YulFunctionCall","src":"2626:39:17"},"nodeType":"YulExpressionStatement","src":"2626:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:17"},"nodeType":"YulFunctionCall","src":"2562:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:17","statements":[{"nodeType":"YulAssignment","src":"2579:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:17"},"nodeType":"YulFunctionCall","src":"2588:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:17","statements":[]},"src":"2555:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:17","type":""}],"src":"2495:186:17"},{"body":{"nodeType":"YulBlock","src":"2766:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:17"},"nodeType":"YulFunctionCall","src":"2822:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:17"},"nodeType":"YulFunctionCall","src":"2906:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:17"},"nodeType":"YulFunctionCall","src":"2892:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:17","statements":[{"nodeType":"YulAssignment","src":"3095:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:17"},"nodeType":"YulFunctionCall","src":"3074:18:17"},"nodeType":"YulIf","src":"3071:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:17"},"nodeType":"YulFunctionCall","src":"3189:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:17"},"nodeType":"YulFunctionCall","src":"3175:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:17"},"nodeType":"YulFunctionCall","src":"3133:80:17"},"nodeType":"YulExpressionStatement","src":"3133:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:17"},"nodeType":"YulFunctionCall","src":"2780:11:17"},"nodeType":"YulIf","src":"2777:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:17","type":""}],"src":"2687:543:17"},{"body":{"nodeType":"YulBlock","src":"3299:54:17","statements":[{"nodeType":"YulAssignment","src":"3309:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:17"},"nodeType":"YulFunctionCall","src":"3330:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:17","type":""}],"src":"3236:117:17"},{"body":{"nodeType":"YulBlock","src":"3410:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:17"},"nodeType":"YulFunctionCall","src":"3465:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:17"},"nodeType":"YulFunctionCall","src":"3480:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:17"},"nodeType":"YulFunctionCall","src":"3436:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:17"},"nodeType":"YulFunctionCall","src":"3432:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:17","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:17"},"nodeType":"YulFunctionCall","src":"3507:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:17","type":""}],"src":"3359:169:17"},{"body":{"nodeType":"YulBlock","src":"3614:214:17","statements":[{"nodeType":"YulAssignment","src":"3747:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:17"},"nodeType":"YulFunctionCall","src":"3755:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:17"}]},{"nodeType":"YulAssignment","src":"3793:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:17"},"nodeType":"YulFunctionCall","src":"3810:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:17"},"nodeType":"YulFunctionCall","src":"3801:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:17","type":""}],"src":"3533:295:17"},{"body":{"nodeType":"YulBlock","src":"3925:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:17"},"nodeType":"YulFunctionCall","src":"3950:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:17"},"nodeType":"YulFunctionCall","src":"4074:18:17"},"nodeType":"YulExpressionStatement","src":"4074:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:17"},"nodeType":"YulFunctionCall","src":"4041:30:17"},"nodeType":"YulIf","src":"4038:56:17"},{"nodeType":"YulVariableDeclaration","src":"4104:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:17"},"nodeType":"YulFunctionCall","src":"4144:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:17"},"nodeType":"YulFunctionCall","src":"4118:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:17"},"nodeType":"YulFunctionCall","src":"4203:67:17"},"nodeType":"YulExpressionStatement","src":"4203:67:17"},{"nodeType":"YulVariableDeclaration","src":"4280:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:17","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:17"},"nodeType":"YulFunctionCall","src":"4413:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:17"},"nodeType":"YulFunctionCall","src":"4401:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:17"},"nodeType":"YulFunctionCall","src":"4451:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:17"},"nodeType":"YulFunctionCall","src":"4608:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:17"},"nodeType":"YulFunctionCall","src":"4602:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:17"},"nodeType":"YulFunctionCall","src":"4587:42:17"},"nodeType":"YulExpressionStatement","src":"4587:42:17"},{"nodeType":"YulAssignment","src":"4646:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:17"},"nodeType":"YulFunctionCall","src":"4656:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:17"}]},{"nodeType":"YulAssignment","src":"4687:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:17"},"nodeType":"YulFunctionCall","src":"4700:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:17"},"nodeType":"YulFunctionCall","src":"4532:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:17","statements":[{"nodeType":"YulAssignment","src":"4549:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:17"},"nodeType":"YulFunctionCall","src":"4554:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:17","statements":[]},"src":"4524:208:17"},{"body":{"nodeType":"YulBlock","src":"4768:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:17"},"nodeType":"YulFunctionCall","src":"4809:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:17"},"nodeType":"YulFunctionCall","src":"4803:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:17"},"nodeType":"YulFunctionCall","src":"4891:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:17"},"nodeType":"YulFunctionCall","src":"4861:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:17"},"nodeType":"YulFunctionCall","src":"4846:64:17"},"nodeType":"YulExpressionStatement","src":"4846:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:17"},"nodeType":"YulFunctionCall","src":"4748:19:17"},"nodeType":"YulIf","src":"4745:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:17"},"nodeType":"YulFunctionCall","src":"4954:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:17"},"nodeType":"YulFunctionCall","src":"4950:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:17"},"nodeType":"YulFunctionCall","src":"4937:36:17"},"nodeType":"YulExpressionStatement","src":"4937:36:17"}]},"nodeType":"YulCase","src":"4365:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:17","statements":[{"nodeType":"YulAssignment","src":"5069:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:17"},"nodeType":"YulFunctionCall","src":"5084:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:17"},"nodeType":"YulFunctionCall","src":"5078:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:17"},"nodeType":"YulIf","src":"5041:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:17"},"nodeType":"YulFunctionCall","src":"5144:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:17"},"nodeType":"YulFunctionCall","src":"5131:81:17"},"nodeType":"YulExpressionStatement","src":"5131:81:17"}]},"nodeType":"YulCase","src":"4992:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:17"},"nodeType":"YulFunctionCall","src":"4342:14:17"},"nodeType":"YulSwitch","src":"4335:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:17","type":""}],"src":"3833:1395:17"},{"body":{"nodeType":"YulBlock","src":"5279:81:17","statements":[{"nodeType":"YulAssignment","src":"5289:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5304:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5311:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5300:3:17"},"nodeType":"YulFunctionCall","src":"5300:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5289:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5261:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5271:7:17","type":""}],"src":"5234:126:17"},{"body":{"nodeType":"YulBlock","src":"5411:51:17","statements":[{"nodeType":"YulAssignment","src":"5421:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5450:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5432:17:17"},"nodeType":"YulFunctionCall","src":"5432:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5421:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5393:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5403:7:17","type":""}],"src":"5366:96:17"},{"body":{"nodeType":"YulBlock","src":"5533:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5550:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5573:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5555:17:17"},"nodeType":"YulFunctionCall","src":"5555:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5543:6:17"},"nodeType":"YulFunctionCall","src":"5543:37:17"},"nodeType":"YulExpressionStatement","src":"5543:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5521:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5528:3:17","type":""}],"src":"5468:118:17"},{"body":{"nodeType":"YulBlock","src":"5690:124:17","statements":[{"nodeType":"YulAssignment","src":"5700:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5712:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5723:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5708:3:17"},"nodeType":"YulFunctionCall","src":"5708:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5700:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5780:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5793:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5804:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:17"},"nodeType":"YulFunctionCall","src":"5789:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5736:43:17"},"nodeType":"YulFunctionCall","src":"5736:71:17"},"nodeType":"YulExpressionStatement","src":"5736:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5662:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5674:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5685:4:17","type":""}],"src":"5592:222:17"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F6B656E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5469636B65740000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x90 SWAP2 SWAP1 PUSH3 0x472 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA2 SWAP2 SWAP1 PUSH3 0x472 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x11A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x111 SWAP2 SWAP1 PUSH3 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x12B DUP2 PUSH3 0x132 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x5BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x27A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x290 JUMPI PUSH3 0x28F PUSH3 0x232 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x2FA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2BB JUMP JUMPDEST PUSH3 0x306 DUP7 DUP4 PUSH3 0x2BB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x353 PUSH3 0x34D PUSH3 0x347 DUP5 PUSH3 0x31E JUMP JUMPDEST PUSH3 0x328 JUMP JUMPDEST PUSH3 0x31E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x36F DUP4 PUSH3 0x332 JUMP JUMPDEST PUSH3 0x387 PUSH3 0x37E DUP3 PUSH3 0x35A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2C8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x39E PUSH3 0x38F JUMP JUMPDEST PUSH3 0x3AB DUP2 DUP5 DUP5 PUSH3 0x364 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3D3 JUMPI PUSH3 0x3C7 PUSH1 0x0 DUP3 PUSH3 0x394 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x422 JUMPI PUSH3 0x3EC DUP2 PUSH3 0x296 JUMP JUMPDEST PUSH3 0x3F7 DUP5 PUSH3 0x2AB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x407 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x41F PUSH3 0x416 DUP6 PUSH3 0x2AB JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3B0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x447 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x427 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x462 DUP4 DUP4 PUSH3 0x434 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x47D DUP3 PUSH3 0x1F8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x499 JUMPI PUSH3 0x498 PUSH3 0x203 JUMP JUMPDEST JUMPDEST PUSH3 0x4A5 DUP3 SLOAD PUSH3 0x261 JUMP JUMPDEST PUSH3 0x4B2 DUP3 DUP3 DUP6 PUSH3 0x3D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4EA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4D5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4E1 DUP6 DUP3 PUSH3 0x454 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x551 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4FA DUP7 PUSH3 0x296 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x524 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4FD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x544 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x540 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x434 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x586 DUP3 PUSH3 0x559 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x598 DUP2 PUSH3 0x579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x58D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x532C DUP1 PUSH3 0x5CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72843282 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x820 JUMPI DUP1 PUSH4 0xC233E22B EQ PUSH2 0x849 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x8C3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x900 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0xADCA6F89 EQ PUSH2 0x791 JUMPI DUP1 PUSH4 0xAF296DA1 EQ PUSH2 0x7BA JUMPI DUP1 PUSH4 0xAFB5604E EQ PUSH2 0x7F7 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x953865C1 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x953865C1 EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6A7 JUMPI DUP1 PUSH4 0x9B26CE0C EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0x9CB04AEF EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xA0415BB4 EQ PUSH2 0x72B JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x72843282 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x74BC8656 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0x7CEA357C EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x651 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x36CF43B8 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x61A5672D GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x61A5672D EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x6B787F09 EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x583 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x36CF43B8 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x4E7497FC EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x5B6966AC EQ PUSH2 0x45C JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xEF7EC74 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x1B2EF1CA EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3A4 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x484A22F EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x3BB1 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x3C72 JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP3 SWAP2 SWAP1 PUSH2 0x3D67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x3ED3 JUMP JUMPDEST PUSH2 0xDEC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x3F13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x372 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0xE73 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST PUSH2 0x1229 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x132B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST PUSH2 0x1490 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x446 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x507 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x544 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x18C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x568 SWAP2 SWAP1 PUSH2 0x3C72 JUMP JUMPDEST PUSH2 0x1ABF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x598 PUSH2 0x1B79 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x3C72 JUMP JUMPDEST PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x3F13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x4232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x3ED3 JUMP JUMPDEST PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x666 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x673 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x691 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69E SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BC PUSH2 0x209D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x212F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x715 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0x4254 JUMP JUMPDEST PUSH2 0x24E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x752 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75F SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78A SWAP2 SWAP1 PUSH2 0x42C0 JUMP JUMPDEST PUSH2 0x253F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B3 SWAP2 SWAP1 PUSH2 0x4435 JUMP JUMPDEST PUSH2 0x2555 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7DC SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7EE SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x819 SWAP2 SWAP1 PUSH2 0x4491 JUMP JUMPDEST PUSH2 0x26B5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x847 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x842 SWAP2 SWAP1 PUSH2 0x4660 JUMP JUMPDEST PUSH2 0x28C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x870 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87D SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A8 SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST PUSH2 0x291B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E5 SWAP2 SWAP1 PUSH2 0x46E3 JUMP JUMPDEST PUSH2 0x2984 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x927 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x922 SWAP2 SWAP1 PUSH2 0x3C72 JUMP JUMPDEST PUSH2 0x2A18 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x9F4 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xA04 JUMPI POP PUSH2 0xA03 DUP3 PUSH2 0x2A9E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2C JUMPI PUSH2 0xA2B PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA5A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA7B JUMPI PUSH2 0xA7A PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAA9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 GT PUSH2 0xC00 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB05 JUMPI PUSH2 0xB04 PUSH2 0x4723 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD8 JUMPI DUP3 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xB9D JUMPI PUSH2 0xB9C PUSH2 0x4723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xBBD JUMPI PUSH2 0xBBC PUSH2 0x4723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP1 PUSH2 0xBD4 SWAP1 PUSH2 0x4781 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0xBE4 SWAP1 PUSH2 0x4781 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAC0 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0xBF8 SWAP1 PUSH2 0x4781 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAB4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC1D JUMPI PUSH2 0xC1C PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC4B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC6A JUMPI PUSH2 0xC69 PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC98 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD2D JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCB9 JUMPI PUSH2 0xCB8 PUSH2 0x4723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCD4 JUMPI PUSH2 0xCD3 PUSH2 0x4723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCF3 JUMPI PUSH2 0xCF2 PUSH2 0x4723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD0E JUMPI PUSH2 0xD0D PUSH2 0x4723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xD25 SWAP1 PUSH2 0x4781 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC9E JUMP JUMPDEST POP DUP2 DUP2 SWAP7 POP SWAP7 POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xD4D SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD79 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDC6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD9B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDC6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDA9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDB DUP3 PUSH2 0x2B08 JUMP JUMPDEST POP PUSH2 0xDE5 DUP3 PUSH2 0x2B90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDFE DUP3 DUP3 PUSH2 0xDF9 PUSH2 0x2BCD JUMP JUMPDEST PUSH2 0x2BD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xE61 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xE4D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0xE86 JUMPI POP PUSH1 0x7 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xEC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBC SWAP1 PUSH2 0x4875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF15 SWAP1 PUSH2 0x48E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC8 SWAP1 PUSH2 0x494D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 GT ISZERO PUSH2 0x102A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1021 SWAP1 PUSH2 0x49B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x103D SWAP1 PUSH2 0x4781 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1069 SWAP1 PUSH2 0x49D9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x11FA CALLER PUSH1 0x8 SLOAD PUSH2 0x2BE7 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x10 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x129B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1292 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12AF DUP4 DUP4 PUSH2 0x12AA PUSH2 0x2BCD JUMP JUMPDEST PUSH2 0x2C05 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1325 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D4 SWAP1 PUSH2 0x4A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x144F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1446 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x14AB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x28C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x152F SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x155B SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15A8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15A8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x158B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0x15CF SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15FB SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1648 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x161D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1648 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x162B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x6 ADD DUP1 SLOAD PUSH2 0x165D SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1689 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x7 ADD DUP1 SLOAD PUSH2 0x16EB SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1717 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1764 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1739 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1764 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1747 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0x1779 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17A5 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x9 ADD DUP1 SLOAD PUSH2 0x1807 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1833 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1880 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1855 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1880 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1863 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0xA ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BB DUP3 PUSH2 0x2B08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18CA PUSH2 0x2E1F JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x18DD JUMPI POP PUSH1 0x7 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x191C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1913 SWAP1 PUSH2 0x4B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C6 SWAP1 PUSH2 0x4BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A38 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B32 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B29 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B81 PUSH2 0x2E1F JUMP JUMPDEST PUSH2 0x1B8B PUSH1 0x0 PUSH2 0x2EA6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1C18 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1C04 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2C PUSH2 0x3AD5 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1C65 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C91 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CDE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CB3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CDE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CC1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x1D15 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D41 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D8E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D63 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D8E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D71 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x1DA7 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DD3 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E20 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DF5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E20 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E03 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH2 0x1E39 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E65 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EB2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E87 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1EB2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E95 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH2 0x1ECB SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EF7 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD DUP1 SLOAD PUSH2 0x1F5D SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F89 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1FD6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FAB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1FD6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x20AC SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20D8 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2125 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2125 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2108 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x21A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2197 SWAP1 PUSH2 0x4C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2212 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2209 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2246 DUP3 PUSH2 0x18B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x22B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22AE SWAP1 PUSH2 0x4CA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2325 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x231C SWAP1 PUSH2 0x4D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0x2382 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2379 SWAP1 PUSH2 0x4D79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x23A8 SWAP1 PUSH2 0x4DCA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x242E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2425 SWAP1 PUSH2 0x4E2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2439 DUP4 CALLER DUP7 PUSH2 0x2F6C JUMP JUMPDEST CALLER PUSH1 0xA PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2551 PUSH2 0x254A PUSH2 0x2BCD JUMP JUMPDEST DUP4 DUP4 PUSH2 0x30D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x2568 JUMPI POP PUSH1 0x7 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x25A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259E SWAP1 PUSH2 0x4875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x264B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2642 SWAP1 PUSH2 0x4EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD SWAP1 DUP2 PUSH2 0x266E SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x26BD PUSH2 0x2E1F JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x26D0 SWAP1 PUSH2 0x4781 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x277C SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x27B0 SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP2 PUSH2 0x27C6 SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SWAP1 DUP2 PUSH2 0x27DC SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SWAP1 DUP2 PUSH2 0x27F3 SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SWAP1 DUP2 PUSH2 0x280A SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x28D2 DUP5 DUP5 DUP5 PUSH2 0x1229 JUMP JUMPDEST PUSH2 0x28E6 PUSH2 0x28DD PUSH2 0x2BCD JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x3248 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2926 DUP3 PUSH2 0x2B08 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2931 PUSH2 0x33F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2951 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x297C JUMP JUMPDEST DUP1 PUSH2 0x295B DUP5 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x296C SWAP3 SWAP2 SWAP1 PUSH2 0x5197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A20 PUSH2 0x2E1F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A92 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A89 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A9B DUP2 PUSH2 0x2EA6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B14 DUP4 PUSH2 0x34DE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B87 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7E SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2BE2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x351B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2C01 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x36E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2C11 DUP5 PUSH2 0x34DE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C53 JUMPI PUSH2 0x2C52 DUP2 DUP5 DUP7 PUSH2 0x3704 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2CE4 JUMPI PUSH2 0x2C95 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x351B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D67 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2E27 PUSH2 0x2BCD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E45 PUSH2 0x206D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA4 JUMPI PUSH2 0x2E68 PUSH2 0x2BCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9B SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2FDE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD5 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2FEC DUP4 DUP4 PUSH1 0x0 PUSH2 0x2C05 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x305F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3056 SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30D3 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x314A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3141 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x323B SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x33F2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32A7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5210 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x32E3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32E0 SWAP2 SWAP1 PUSH2 0x5271 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3367 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3313 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3318 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x335F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3356 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x33F0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E7 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x341F DUP5 PUSH2 0x37C8 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x343E JUMPI PUSH2 0x343D PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3470 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x34D3 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x34C7 JUMPI PUSH2 0x34C6 PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x347E JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x3554 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3688 JUMPI PUSH1 0x0 PUSH2 0x3564 DUP5 PUSH2 0x2B08 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x35CF JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x35E2 JUMPI POP PUSH2 0x35E0 DUP2 DUP5 PUSH2 0x2984 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3624 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361B SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x3686 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x36EA DUP4 DUP4 PUSH2 0x391B JUMP JUMPDEST PUSH2 0x36FF PUSH2 0x36F5 PUSH2 0x2BCD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x3248 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x370F DUP4 DUP4 DUP4 PUSH2 0x3A14 JUMP JUMPDEST PUSH2 0x37C3 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3784 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x377B SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37BA SWAP3 SWAP2 SWAP1 PUSH2 0x52CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3826 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x381C JUMPI PUSH2 0x381B PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3863 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x3859 JUMPI PUSH2 0x3858 PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3892 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x3888 JUMPI PUSH2 0x3887 PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x38BB JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x38B1 JUMPI PUSH2 0x38B0 PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x38E0 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x38D6 JUMPI PUSH2 0x38D5 PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3903 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x38F9 JUMPI PUSH2 0x38F8 PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3912 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x398D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3984 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x399B DUP4 DUP4 PUSH1 0x0 PUSH2 0x2C05 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A0F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A06 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3ACC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3A8D JUMPI POP PUSH2 0x3A8C DUP5 DUP5 PUSH2 0x2984 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x3ACB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AB3 DUP4 PUSH2 0x2B90 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B8E DUP2 PUSH2 0x3B59 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BAB DUP2 PUSH2 0x3B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BC7 JUMPI PUSH2 0x3BC6 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BD5 DUP5 DUP3 DUP6 ADD PUSH2 0x3B9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BF3 DUP2 PUSH2 0x3BDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C0E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3F DUP3 PUSH2 0x3C14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C4F DUP2 PUSH2 0x3C34 JUMP JUMPDEST DUP2 EQ PUSH2 0x3C5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C6C DUP2 PUSH2 0x3C46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C88 JUMPI PUSH2 0x3C87 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C96 DUP5 DUP3 DUP6 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CDE DUP2 PUSH2 0x3CCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CF0 DUP4 DUP4 PUSH2 0x3CD5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D14 DUP3 PUSH2 0x3C9F JUMP JUMPDEST PUSH2 0x3D1E DUP2 DUP6 PUSH2 0x3CAA JUMP JUMPDEST SWAP4 POP PUSH2 0x3D29 DUP4 PUSH2 0x3CBB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D5A JUMPI DUP2 MLOAD PUSH2 0x3D41 DUP9 DUP3 PUSH2 0x3CE4 JUMP JUMPDEST SWAP8 POP PUSH2 0x3D4C DUP4 PUSH2 0x3CFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3D2D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D81 DUP2 DUP6 PUSH2 0x3D09 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3D95 DUP2 DUP5 PUSH2 0x3D09 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3DD8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3DBD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E00 DUP3 PUSH2 0x3D9E JUMP JUMPDEST PUSH2 0x3E0A DUP2 DUP6 PUSH2 0x3DA9 JUMP JUMPDEST SWAP4 POP PUSH2 0x3E1A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3DBA JUMP JUMPDEST PUSH2 0x3E23 DUP2 PUSH2 0x3DE4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E48 DUP2 DUP5 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E59 DUP2 PUSH2 0x3CCB JUMP JUMPDEST DUP2 EQ PUSH2 0x3E64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E76 DUP2 PUSH2 0x3E50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E92 JUMPI PUSH2 0x3E91 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EA0 DUP5 DUP3 DUP6 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EB2 DUP2 PUSH2 0x3C34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3ECD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3EA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3EEA JUMPI PUSH2 0x3EE9 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EF8 DUP6 DUP3 DUP7 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F09 DUP6 DUP3 DUP7 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F2D DUP2 DUP5 PUSH2 0x3D09 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F3E DUP2 PUSH2 0x3CCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F59 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3F35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F76 JUMPI PUSH2 0x3F75 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F84 DUP6 DUP3 DUP7 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F95 DUP6 DUP3 DUP7 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3FB8 JUMPI PUSH2 0x3FB7 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3FC6 DUP7 DUP3 DUP8 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3FD7 DUP7 DUP3 DUP8 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3FE8 DUP7 DUP3 DUP8 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x4008 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x3F35 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x401A DUP2 DUP14 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x4029 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x3F35 JUMP JUMPDEST PUSH2 0x4036 PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x3F35 JUMP JUMPDEST PUSH2 0x4043 PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x3F35 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x4055 DUP2 DUP10 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x4069 DUP2 DUP9 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x407D DUP2 DUP8 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x4092 DUP2 DUP7 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x40A7 DUP2 DUP6 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x40B7 PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x3EA9 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E3 DUP3 PUSH2 0x3D9E JUMP JUMPDEST PUSH2 0x40ED DUP2 DUP6 PUSH2 0x40C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x40FD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3DBA JUMP JUMPDEST PUSH2 0x4106 DUP2 PUSH2 0x3DE4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x411A DUP2 PUSH2 0x3C34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x4139 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x3CD5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x4151 DUP3 DUP3 PUSH2 0x40D8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x4166 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3CD5 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x4179 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x3CD5 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x418C PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x3CD5 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x41A4 DUP3 DUP3 PUSH2 0x40D8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x41BE DUP3 DUP3 PUSH2 0x40D8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x41D8 DUP3 DUP3 PUSH2 0x40D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x100 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x41F4 DUP3 DUP3 PUSH2 0x40D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x120 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x4210 DUP3 DUP3 PUSH2 0x40D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x4227 PUSH2 0x140 DUP7 ADD DUP3 PUSH2 0x4111 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x424C DUP2 DUP5 PUSH2 0x4120 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x426B JUMPI PUSH2 0x426A PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4279 DUP6 DUP3 DUP7 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x428A DUP6 DUP3 DUP7 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x429D DUP2 PUSH2 0x3BDE JUMP JUMPDEST DUP2 EQ PUSH2 0x42A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x42BA DUP2 PUSH2 0x4294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42D7 JUMPI PUSH2 0x42D6 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42E5 DUP6 DUP3 DUP7 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x42F6 DUP6 DUP3 DUP7 ADD PUSH2 0x42AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4342 DUP3 PUSH2 0x3DE4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4361 JUMPI PUSH2 0x4360 PUSH2 0x430A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4374 PUSH2 0x3B45 JUMP JUMPDEST SWAP1 POP PUSH2 0x4380 DUP3 DUP3 PUSH2 0x4339 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x43A0 JUMPI PUSH2 0x439F PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH2 0x43A9 DUP3 PUSH2 0x3DE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43D8 PUSH2 0x43D3 DUP5 PUSH2 0x4385 JUMP JUMPDEST PUSH2 0x436A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x43F4 JUMPI PUSH2 0x43F3 PUSH2 0x4305 JUMP JUMPDEST JUMPDEST PUSH2 0x43FF DUP5 DUP3 DUP6 PUSH2 0x43B6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x441C JUMPI PUSH2 0x441B PUSH2 0x4300 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x442C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x43C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x444C JUMPI PUSH2 0x444B PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x445A DUP6 DUP3 DUP7 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x447B JUMPI PUSH2 0x447A PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x4487 DUP6 DUP3 DUP7 ADD PUSH2 0x4407 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x44B0 JUMPI PUSH2 0x44AF PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44CE JUMPI PUSH2 0x44CD PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x44DA DUP11 DUP3 DUP12 ADD PUSH2 0x4407 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x44EB DUP11 DUP3 DUP12 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x44FC DUP11 DUP3 DUP12 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x451D JUMPI PUSH2 0x451C PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x4529 DUP11 DUP3 DUP12 ADD PUSH2 0x4407 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x454A JUMPI PUSH2 0x4549 PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x4556 DUP11 DUP3 DUP12 ADD PUSH2 0x4407 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4577 JUMPI PUSH2 0x4576 PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x4583 DUP11 DUP3 DUP12 ADD PUSH2 0x4407 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45A4 JUMPI PUSH2 0x45A3 PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x45B0 DUP11 DUP3 DUP12 ADD PUSH2 0x4407 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x45DA JUMPI PUSH2 0x45D9 PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH2 0x45E3 DUP3 PUSH2 0x3DE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4603 PUSH2 0x45FE DUP5 PUSH2 0x45BF JUMP JUMPDEST PUSH2 0x436A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x461F JUMPI PUSH2 0x461E PUSH2 0x4305 JUMP JUMPDEST JUMPDEST PUSH2 0x462A DUP5 DUP3 DUP6 PUSH2 0x43B6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4647 JUMPI PUSH2 0x4646 PUSH2 0x4300 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4657 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x45F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x467A JUMPI PUSH2 0x4679 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4688 DUP8 DUP3 DUP9 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4699 DUP8 DUP3 DUP9 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x46AA DUP8 DUP3 DUP9 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46CB JUMPI PUSH2 0x46CA PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x46D7 DUP8 DUP3 DUP9 ADD PUSH2 0x4632 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46FA JUMPI PUSH2 0x46F9 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4708 DUP6 DUP3 DUP7 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4719 DUP6 DUP3 DUP7 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x478C DUP3 PUSH2 0x3CCB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x47BE JUMPI PUSH2 0x47BD PUSH2 0x4752 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4810 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4823 JUMPI PUSH2 0x4822 PUSH2 0x47C9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F63636173696F6E20494400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x485F PUSH1 0x13 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x486A DUP3 PUSH2 0x4829 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x488E DUP2 PUSH2 0x4852 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74204554482073656E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48CB PUSH1 0x15 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x48D6 DUP3 PUSH2 0x4895 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48FA DUP2 PUSH2 0x48BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5365617420616C72656164792074616B656E0000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4937 PUSH1 0x12 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4942 DUP3 PUSH2 0x4901 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4966 DUP2 PUSH2 0x492A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642073656174206E756D62657200000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A3 PUSH1 0x13 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x49AE DUP3 PUSH2 0x496D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49D2 DUP2 PUSH2 0x4996 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49E4 DUP3 PUSH2 0x3CCB JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x49F7 JUMPI PUSH2 0x49F6 PUSH2 0x4752 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4A17 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3EA9 JUMP JUMPDEST PUSH2 0x4A24 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3F35 JUMP JUMPDEST PUSH2 0x4A31 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3EA9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E6572206F6620746865207469636B65740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A6F PUSH1 0x1B DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A7A DUP3 PUSH2 0x4A39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A9E DUP2 PUSH2 0x4A62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5469636B657420616C7265616479207573656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ADB PUSH1 0x13 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AE6 DUP3 PUSH2 0x4AA5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B0A DUP2 PUSH2 0x4ACE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206576656E7420494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B47 PUSH1 0x10 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B52 DUP3 PUSH2 0x4B11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B76 DUP2 PUSH2 0x4B3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656174206E6F74206F63637570696564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BB3 PUSH1 0x11 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BBE DUP3 PUSH2 0x4B7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BE2 DUP2 PUSH2 0x4BA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526573616C65206E6F7420616C6C6F7765640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C1F PUSH1 0x12 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C2A DUP3 PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C4E DUP2 PUSH2 0x4C12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207469636B6574000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C8B PUSH1 0xE DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C96 DUP3 PUSH2 0x4C55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CBA DUP2 PUSH2 0x4C7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742062757920796F7572206F776E207469636B6574000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CF7 PUSH1 0x1A DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D02 DUP3 PUSH2 0x4CC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D26 DUP2 PUSH2 0x4CEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D63 PUSH1 0x18 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D6E DUP3 PUSH2 0x4D2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D92 DUP2 PUSH2 0x4D56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DB4 PUSH1 0x0 DUP4 PUSH2 0x4D99 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DBF DUP3 PUSH2 0x4DA4 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD5 DUP3 PUSH2 0x4DA7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796D656E74207472616E73666572206661696C6564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E15 PUSH1 0x17 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E20 DUP3 PUSH2 0x4DDF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E44 DUP2 PUSH2 0x4E08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206576656E742063726561746F722063616E20736574205652207669 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x64656F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA7 PUSH1 0x23 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EB2 DUP3 PUSH2 0x4E4B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4ED6 DUP2 PUSH2 0x4E9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4F3F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4F02 JUMP JUMPDEST PUSH2 0x4F49 DUP7 DUP4 PUSH2 0x4F02 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F86 PUSH2 0x4F81 PUSH2 0x4F7C DUP5 PUSH2 0x3CCB JUMP JUMPDEST PUSH2 0x4F61 JUMP JUMPDEST PUSH2 0x3CCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FA0 DUP4 PUSH2 0x4F6B JUMP JUMPDEST PUSH2 0x4FB4 PUSH2 0x4FAC DUP3 PUSH2 0x4F8D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4F0F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4FC9 PUSH2 0x4FBC JUMP JUMPDEST PUSH2 0x4FD4 DUP2 DUP5 DUP5 PUSH2 0x4F97 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4FF8 JUMPI PUSH2 0x4FED PUSH1 0x0 DUP3 PUSH2 0x4FC1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4FDA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x503D JUMPI PUSH2 0x500E DUP2 PUSH2 0x4EDD JUMP JUMPDEST PUSH2 0x5017 DUP5 PUSH2 0x4EF2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5026 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x503A PUSH2 0x5032 DUP6 PUSH2 0x4EF2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4FD9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5060 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5042 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5079 DUP4 DUP4 PUSH2 0x504F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5092 DUP3 PUSH2 0x3D9E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x50AB JUMPI PUSH2 0x50AA PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH2 0x50B5 DUP3 SLOAD PUSH2 0x47F8 JUMP JUMPDEST PUSH2 0x50C0 DUP3 DUP3 DUP6 PUSH2 0x4FFC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x50F3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x50E1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x50EB DUP6 DUP3 PUSH2 0x506D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5153 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5101 DUP7 PUSH2 0x4EDD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5129 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5104 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5146 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5142 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x504F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5171 DUP3 PUSH2 0x3D9E JUMP JUMPDEST PUSH2 0x517B DUP2 DUP6 PUSH2 0x515B JUMP JUMPDEST SWAP4 POP PUSH2 0x518B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3DBA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51A3 DUP3 DUP6 PUSH2 0x5166 JUMP JUMPDEST SWAP2 POP PUSH2 0x51AF DUP3 DUP5 PUSH2 0x5166 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E2 DUP3 PUSH2 0x51BB JUMP JUMPDEST PUSH2 0x51EC DUP2 DUP6 PUSH2 0x51C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x51FC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3DBA JUMP JUMPDEST PUSH2 0x5205 DUP2 PUSH2 0x3DE4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5225 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3EA9 JUMP JUMPDEST PUSH2 0x5232 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3EA9 JUMP JUMPDEST PUSH2 0x523F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3F35 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5251 DUP2 DUP5 PUSH2 0x51D7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x526B DUP2 PUSH2 0x3B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5287 JUMPI PUSH2 0x5286 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5295 DUP5 DUP3 DUP6 ADD PUSH2 0x525C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x52E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3EA9 JUMP JUMPDEST PUSH2 0x52EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F35 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SWAP13 0xFB PUSH17 0x28F2BC701FB28A9D5D82F52C52D98017A2 PUSH19 0x8D98C0F622DC7D4B3AEB64736F6C6343000814 STOP CALLER ","sourceMap":"183:5764:16:-:0;;;1165:62;;;;;;;;;;1213:10;1380:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;183:5764:16;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:17:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;183:5764:16:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1108":{"entryPoint":11221,"id":1108,"parameterSlots":3,"returnSlots":0},"@_approve_1174":{"entryPoint":13595,"id":1174,"parameterSlots":4,"returnSlots":0},"@_baseURI_489":{"entryPoint":13305,"id":489,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_748":{"entryPoint":14084,"id":748,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":11807,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_675":{"entryPoint":11152,"id":675,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_711":{"entryPoint":14868,"id":711,"parameterSlots":3,"returnSlots":1},"@_mint_904":{"entryPoint":14619,"id":904,"parameterSlots":2,"returnSlots":0},"@_msgSender_1493":{"entryPoint":11213,"id":1493,"parameterSlots":0,"returnSlots":1},"@_ownerOf_662":{"entryPoint":13534,"id":662,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1240":{"entryPoint":11016,"id":1240,"parameterSlots":1,"returnSlots":1},"@_safeMint_919":{"entryPoint":11239,"id":919,"parameterSlots":2,"returnSlots":0},"@_safeMint_949":{"entryPoint":14048,"id":949,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1211":{"entryPoint":12505,"id":1211,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":11942,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_1042":{"entryPoint":12140,"id":1042,"parameterSlots":3,"returnSlots":0},"@_update_854":{"entryPoint":11269,"id":854,"parameterSlots":3,"returnSlots":1},"@approve_505":{"entryPoint":3564,"id":505,"parameterSlots":2,"returnSlots":0},"@balanceOf_413":{"entryPoint":6847,"id":413,"parameterSlots":1,"returnSlots":1},"@buyResaleTicket_7090":{"entryPoint":8495,"id":7090,"parameterSlots":2,"returnSlots":0},"@checkOnERC721Received_1480":{"entryPoint":12872,"id":1480,"parameterSlots":5,"returnSlots":0},"@creatorEvents_6500":{"entryPoint":8252,"id":6500,"parameterSlots":0,"returnSlots":0},"@enableResale_6975":{"entryPoint":4907,"id":6975,"parameterSlots":2,"returnSlots":0},"@getApproved_522":{"entryPoint":3536,"id":522,"parameterSlots":1,"returnSlots":1},"@getEventsCreatedBy_6876":{"entryPoint":7053,"id":6876,"parameterSlots":1,"returnSlots":1},"@getOccasion_6699":{"entryPoint":7204,"id":6699,"parameterSlots":1,"returnSlots":1},"@getSeatsTaken_6712":{"entryPoint":3586,"id":6712,"parameterSlots":1,"returnSlots":1},"@getUserTickets_6863":{"entryPoint":2571,"id":6863,"parameterSlots":1,"returnSlots":2},"@hasBought_6478":{"entryPoint":9441,"id":6478,"parameterSlots":0,"returnSlots":0},"@isApprovedForAll_555":{"entryPoint":10628,"id":555,"parameterSlots":2,"returnSlots":1},"@list_6568":{"entryPoint":9909,"id":6568,"parameterSlots":7,"returnSlots":0},"@log10_4177":{"entryPoint":14280,"id":4177,"parameterSlots":1,"returnSlots":1},"@mint_6686":{"entryPoint":3699,"id":6686,"parameterSlots":2,"returnSlots":0},"@name_435":{"entryPoint":3390,"id":435,"parameterSlots":0,"returnSlots":1},"@occasions_6466":{"entryPoint":5382,"id":6466,"parameterSlots":0,"returnSlots":0},"@ownerOf_426":{"entryPoint":6320,"id":426,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":8301,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":7033,"id":98,"parameterSlots":0,"returnSlots":0},"@resaleAllowed_6495":{"entryPoint":10476,"id":6495,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_619":{"entryPoint":5264,"id":619,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_649":{"entryPoint":10439,"id":649,"parameterSlots":4,"returnSlots":0},"@scanTicket_6937":{"entryPoint":6338,"id":6937,"parameterSlots":2,"returnSlots":0},"@seatTaken_6472":{"entryPoint":9843,"id":6472,"parameterSlots":0,"returnSlots":0},"@seatToTokenId_6506":{"entryPoint":5345,"id":6506,"parameterSlots":0,"returnSlots":0},"@seatsTaken_6483":{"entryPoint":5296,"id":6483,"parameterSlots":0,"returnSlots":0},"@setApprovalForAll_538":{"entryPoint":9535,"id":538,"parameterSlots":2,"returnSlots":0},"@setVRVideo_7127":{"entryPoint":9557,"id":7127,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2786":{"entryPoint":10910,"id":2786,"parameterSlots":1,"returnSlots":1},"@supportsInterface_385":{"entryPoint":2345,"id":385,"parameterSlots":1,"returnSlots":1},"@symbol_444":{"entryPoint":8349,"id":444,"parameterSlots":0,"returnSlots":1},"@ticketExhausted_6489":{"entryPoint":9488,"id":6489,"parameterSlots":0,"returnSlots":0},"@toString_1641":{"entryPoint":13328,"id":1641,"parameterSlots":1,"returnSlots":1},"@tokenURI_480":{"entryPoint":10523,"id":480,"parameterSlots":1,"returnSlots":1},"@totalOccasions_6436":{"entryPoint":8343,"id":6436,"parameterSlots":0,"returnSlots":0},"@totalSupply_6438":{"entryPoint":3693,"id":6438,"parameterSlots":0,"returnSlots":0},"@transferFrom_601":{"entryPoint":4649,"id":601,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":10776,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":17904,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":17349,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":15453,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":17067,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":15260,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":21084,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":17970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":17415,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":15975,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":15474,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":18147,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":16287,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":18016,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":17088,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":16083,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":15281,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":21105,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr":{"entryPoint":17553,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_uint256":{"entryPoint":15996,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":16980,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":17461,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":16223,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":15588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":16657,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":16041,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":15625,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":15338,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":20951,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":16600,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":15861,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20838,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack":{"entryPoint":18622,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6_to_t_string_memory_ptr_fromStack":{"entryPoint":18838,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3_to_t_string_memory_ptr_fromStack":{"entryPoint":19474,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack":{"entryPoint":19798,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d_to_t_string_memory_ptr_fromStack":{"entryPoint":19582,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d_to_t_string_memory_ptr_fromStack":{"entryPoint":20122,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95_to_t_string_memory_ptr_fromStack":{"entryPoint":19690,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10_to_t_string_memory_ptr_fromStack":{"entryPoint":19150,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77_to_t_string_memory_ptr_fromStack":{"entryPoint":18730,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330_to_t_string_memory_ptr_fromStack":{"entryPoint":18514,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe_to_t_string_memory_ptr_fromStack":{"entryPoint":19976,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73_to_t_string_memory_ptr_fromStack":{"entryPoint":19258,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19879,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702_to_t_string_memory_ptr_fromStack":{"entryPoint":19366,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f_to_t_string_memory_ptr_fromStack":{"entryPoint":19042,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Occasion_$6461_memory_ptr_to_t_struct$_Occasion_$6461_memory_ptr_fromStack":{"entryPoint":16672,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":15573,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":16181,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":20887,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":19914,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":16056,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":21008,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":21197,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":18946,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":16147,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":15719,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":15353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15918,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18657,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18873,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19509,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19833,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19617,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20157,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19725,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19185,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18765,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18549,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20011,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19293,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19401,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19077,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Occasion_$6461_memory_ptr__to_t_struct$_Occasion_$6461_memory_ptr__fromStack_reversed":{"entryPoint":16946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":16196,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed":{"entryPoint":16370,"id":null,"parameterSlots":12,"returnSlots":1},"allocate_memory":{"entryPoint":17258,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":15173,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":17855,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":17285,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15547,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":20189,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15519,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":20923,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":15774,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15612,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":15530,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":20934,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19865,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":16583,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":15785,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20827,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":20476,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":15412,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":15326,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":15193,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":15380,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":15563,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":20441,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":20331,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":20617,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":17334,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":15802,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":18905,"id":null,"parameterSlots":1,"returnSlots":1},"divide_by_32_ceil":{"entryPoint":20210,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":18424,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":20589,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":17209,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":20321,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":18305,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":20559,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":18258,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":21150,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":18377,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":18211,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":17162,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":20365,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":17152,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":17157,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":15188,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":15183,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":15844,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":20226,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":20546,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":20417,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404":{"entryPoint":18581,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6":{"entryPoint":18797,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3":{"entryPoint":19433,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d":{"entryPoint":19757,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d":{"entryPoint":19541,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d":{"entryPoint":20043,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95":{"entryPoint":19649,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10":{"entryPoint":19109,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77":{"entryPoint":18689,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330":{"entryPoint":18473,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe":{"entryPoint":19935,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73":{"entryPoint":19217,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":19876,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702":{"entryPoint":19325,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f":{"entryPoint":19001,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":20239,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":20375,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":15430,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":17044,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":15237,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":15952,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":20412,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:47651:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"378:105:17","statements":[{"nodeType":"YulAssignment","src":"388:89:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:17"},"nodeType":"YulFunctionCall","src":"399:78:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:17"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:17","type":""}],"src":"334:149:17"},{"body":{"nodeType":"YulBlock","src":"531:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:17"},"nodeType":"YulFunctionCall","src":"589:12:17"},"nodeType":"YulExpressionStatement","src":"589:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:17"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:17"},"nodeType":"YulFunctionCall","src":"561:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:17"},"nodeType":"YulFunctionCall","src":"551:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:17"},"nodeType":"YulFunctionCall","src":"544:42:17"},"nodeType":"YulIf","src":"541:62:17"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:17","type":""}],"src":"489:120:17"},{"body":{"nodeType":"YulBlock","src":"666:86:17","statements":[{"nodeType":"YulAssignment","src":"676:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:17"},"nodeType":"YulFunctionCall","src":"685:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:17"},"nodeType":"YulFunctionCall","src":"714:32:17"},"nodeType":"YulExpressionStatement","src":"714:32:17"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:17","type":""}],"src":"615:137:17"},{"body":{"nodeType":"YulBlock","src":"823:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:17"},"nodeType":"YulFunctionCall","src":"871:79:17"},"nodeType":"YulExpressionStatement","src":"871:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:17"},"nodeType":"YulFunctionCall","src":"840:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:17"},"nodeType":"YulFunctionCall","src":"836:32:17"},"nodeType":"YulIf","src":"833:119:17"},{"nodeType":"YulBlock","src":"962:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:17"},"nodeType":"YulFunctionCall","src":"1036:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:17"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:17"},"nodeType":"YulFunctionCall","src":"1016:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:17","type":""}],"src":"758:327:17"},{"body":{"nodeType":"YulBlock","src":"1133:48:17","statements":[{"nodeType":"YulAssignment","src":"1143:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:17"},"nodeType":"YulFunctionCall","src":"1161:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:17"},"nodeType":"YulFunctionCall","src":"1154:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:17","type":""}],"src":"1091:90:17"},{"body":{"nodeType":"YulBlock","src":"1246:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:17"},"nodeType":"YulFunctionCall","src":"1268:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:17"},"nodeType":"YulFunctionCall","src":"1256:34:17"},"nodeType":"YulExpressionStatement","src":"1256:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:17","type":""}],"src":"1187:109:17"},{"body":{"nodeType":"YulBlock","src":"1394:118:17","statements":[{"nodeType":"YulAssignment","src":"1404:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:17"},"nodeType":"YulFunctionCall","src":"1412:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:17"},"nodeType":"YulFunctionCall","src":"1487:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:17"},"nodeType":"YulFunctionCall","src":"1440:65:17"},"nodeType":"YulExpressionStatement","src":"1440:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:17","type":""}],"src":"1302:210:17"},{"body":{"nodeType":"YulBlock","src":"1563:81:17","statements":[{"nodeType":"YulAssignment","src":"1573:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1588:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1595:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1584:3:17"},"nodeType":"YulFunctionCall","src":"1584:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:17","type":""}],"src":"1518:126:17"},{"body":{"nodeType":"YulBlock","src":"1695:51:17","statements":[{"nodeType":"YulAssignment","src":"1705:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1734:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1716:17:17"},"nodeType":"YulFunctionCall","src":"1716:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1705:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1677:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1687:7:17","type":""}],"src":"1650:96:17"},{"body":{"nodeType":"YulBlock","src":"1795:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1852:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1861:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1864:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1854:6:17"},"nodeType":"YulFunctionCall","src":"1854:12:17"},"nodeType":"YulExpressionStatement","src":"1854:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1818:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1843:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1825:17:17"},"nodeType":"YulFunctionCall","src":"1825:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1815:2:17"},"nodeType":"YulFunctionCall","src":"1815:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1808:6:17"},"nodeType":"YulFunctionCall","src":"1808:43:17"},"nodeType":"YulIf","src":"1805:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1788:5:17","type":""}],"src":"1752:122:17"},{"body":{"nodeType":"YulBlock","src":"1932:87:17","statements":[{"nodeType":"YulAssignment","src":"1942:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1964:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1951:12:17"},"nodeType":"YulFunctionCall","src":"1951:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1942:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2007:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1980:26:17"},"nodeType":"YulFunctionCall","src":"1980:33:17"},"nodeType":"YulExpressionStatement","src":"1980:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1910:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1918:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1926:5:17","type":""}],"src":"1880:139:17"},{"body":{"nodeType":"YulBlock","src":"2091:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"2137:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2139:77:17"},"nodeType":"YulFunctionCall","src":"2139:79:17"},"nodeType":"YulExpressionStatement","src":"2139:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2112:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2121:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2108:3:17"},"nodeType":"YulFunctionCall","src":"2108:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2104:3:17"},"nodeType":"YulFunctionCall","src":"2104:32:17"},"nodeType":"YulIf","src":"2101:119:17"},{"nodeType":"YulBlock","src":"2230:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2245:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2259:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2249:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2274:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2309:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2320:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2305:3:17"},"nodeType":"YulFunctionCall","src":"2305:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2329:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2284:20:17"},"nodeType":"YulFunctionCall","src":"2284:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2274:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2061:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2072:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2084:6:17","type":""}],"src":"2025:329:17"},{"body":{"nodeType":"YulBlock","src":"2434:40:17","statements":[{"nodeType":"YulAssignment","src":"2445:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2461:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2455:5:17"},"nodeType":"YulFunctionCall","src":"2455:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2445:6:17"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2417:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2427:6:17","type":""}],"src":"2360:114:17"},{"body":{"nodeType":"YulBlock","src":"2591:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2608:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2613:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2601:6:17"},"nodeType":"YulFunctionCall","src":"2601:19:17"},"nodeType":"YulExpressionStatement","src":"2601:19:17"},{"nodeType":"YulAssignment","src":"2629:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2648:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2644:3:17"},"nodeType":"YulFunctionCall","src":"2644:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2629:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2563:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"2568:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2579:11:17","type":""}],"src":"2480:184:17"},{"body":{"nodeType":"YulBlock","src":"2742:60:17","statements":[{"nodeType":"YulAssignment","src":"2752:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2760:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2752:4:17"}]},{"nodeType":"YulAssignment","src":"2773:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2785:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2790:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2781:3:17"},"nodeType":"YulFunctionCall","src":"2781:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2773:4:17"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2729:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2737:4:17","type":""}],"src":"2670:132:17"},{"body":{"nodeType":"YulBlock","src":"2853:32:17","statements":[{"nodeType":"YulAssignment","src":"2863:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2874:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2863:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2835:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2845:7:17","type":""}],"src":"2808:77:17"},{"body":{"nodeType":"YulBlock","src":"2946:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2963:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2986:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2968:17:17"},"nodeType":"YulFunctionCall","src":"2968:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2956:6:17"},"nodeType":"YulFunctionCall","src":"2956:37:17"},"nodeType":"YulExpressionStatement","src":"2956:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2934:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2941:3:17","type":""}],"src":"2891:108:17"},{"body":{"nodeType":"YulBlock","src":"3085:99:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3129:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"3137:3:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3095:33:17"},"nodeType":"YulFunctionCall","src":"3095:46:17"},"nodeType":"YulExpressionStatement","src":"3095:46:17"},{"nodeType":"YulAssignment","src":"3150:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3168:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3173:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3164:3:17"},"nodeType":"YulFunctionCall","src":"3164:14:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"3150:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"3058:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3066:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"3074:10:17","type":""}],"src":"3005:179:17"},{"body":{"nodeType":"YulBlock","src":"3265:38:17","statements":[{"nodeType":"YulAssignment","src":"3275:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3287:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"3292:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3283:3:17"},"nodeType":"YulFunctionCall","src":"3283:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"3275:4:17"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3252:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"3260:4:17","type":""}],"src":"3190:113:17"},{"body":{"nodeType":"YulBlock","src":"3463:608:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3473:68:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3535:5:17"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3487:47:17"},"nodeType":"YulFunctionCall","src":"3487:54:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3477:6:17","type":""}]},{"nodeType":"YulAssignment","src":"3550:93:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3631:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"3636:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3557:73:17"},"nodeType":"YulFunctionCall","src":"3557:86:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3550:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"3652:71:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3717:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3667:49:17"},"nodeType":"YulFunctionCall","src":"3667:56:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"3656:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3732:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"3746:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3736:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3822:224:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3836:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3863:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3857:5:17"},"nodeType":"YulFunctionCall","src":"3857:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"3840:13:17","type":""}]},{"nodeType":"YulAssignment","src":"3883:70:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"3934:13:17"},{"name":"pos","nodeType":"YulIdentifier","src":"3949:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3890:43:17"},"nodeType":"YulFunctionCall","src":"3890:63:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3883:3:17"}]},{"nodeType":"YulAssignment","src":"3966:70:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4029:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3976:52:17"},"nodeType":"YulFunctionCall","src":"3976:60:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3966:6:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3784:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"3787:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3781:2:17"},"nodeType":"YulFunctionCall","src":"3781:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3795:18:17","statements":[{"nodeType":"YulAssignment","src":"3797:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3806:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"3809:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3802:3:17"},"nodeType":"YulFunctionCall","src":"3802:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3797:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"3766:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3768:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"3777:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3772:1:17","type":""}]}]},"src":"3762:284:17"},{"nodeType":"YulAssignment","src":"4055:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"4062:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4055:3:17"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3442:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3449:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3458:3:17","type":""}],"src":"3339:732:17"},{"body":{"nodeType":"YulBlock","src":"4303:408:17","statements":[{"nodeType":"YulAssignment","src":"4313:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4325:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4336:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4321:3:17"},"nodeType":"YulFunctionCall","src":"4321:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4313:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4360:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4371:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4356:3:17"},"nodeType":"YulFunctionCall","src":"4356:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4379:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4385:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4375:3:17"},"nodeType":"YulFunctionCall","src":"4375:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4349:6:17"},"nodeType":"YulFunctionCall","src":"4349:47:17"},"nodeType":"YulExpressionStatement","src":"4349:47:17"},{"nodeType":"YulAssignment","src":"4405:116:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4507:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"4516:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4413:93:17"},"nodeType":"YulFunctionCall","src":"4413:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4405:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4542:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4553:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4538:3:17"},"nodeType":"YulFunctionCall","src":"4538:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4562:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4568:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:17"},"nodeType":"YulFunctionCall","src":"4558:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4531:6:17"},"nodeType":"YulFunctionCall","src":"4531:48:17"},"nodeType":"YulExpressionStatement","src":"4531:48:17"},{"nodeType":"YulAssignment","src":"4588:116:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4690:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"4699:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4596:93:17"},"nodeType":"YulFunctionCall","src":"4596:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4588:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4267:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4279:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4287:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4298:4:17","type":""}],"src":"4077:634:17"},{"body":{"nodeType":"YulBlock","src":"4776:40:17","statements":[{"nodeType":"YulAssignment","src":"4787:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4803:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4797:5:17"},"nodeType":"YulFunctionCall","src":"4797:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4787:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4759:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4769:6:17","type":""}],"src":"4717:99:17"},{"body":{"nodeType":"YulBlock","src":"4918:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4935:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4940:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4928:6:17"},"nodeType":"YulFunctionCall","src":"4928:19:17"},"nodeType":"YulExpressionStatement","src":"4928:19:17"},{"nodeType":"YulAssignment","src":"4956:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4975:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4980:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4971:3:17"},"nodeType":"YulFunctionCall","src":"4971:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4956:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4890:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4895:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4906:11:17","type":""}],"src":"4822:169:17"},{"body":{"nodeType":"YulBlock","src":"5059:184:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5069:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5078:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5073:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5138:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5163:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"5168:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5159:3:17"},"nodeType":"YulFunctionCall","src":"5159:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5182:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"5187:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5178:3:17"},"nodeType":"YulFunctionCall","src":"5178:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5172:5:17"},"nodeType":"YulFunctionCall","src":"5172:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5152:6:17"},"nodeType":"YulFunctionCall","src":"5152:39:17"},"nodeType":"YulExpressionStatement","src":"5152:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5099:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"5102:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5096:2:17"},"nodeType":"YulFunctionCall","src":"5096:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5110:19:17","statements":[{"nodeType":"YulAssignment","src":"5112:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5121:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"5124:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5117:3:17"},"nodeType":"YulFunctionCall","src":"5117:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5112:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"5092:3:17","statements":[]},"src":"5088:113:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5221:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5226:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5217:3:17"},"nodeType":"YulFunctionCall","src":"5217:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"5235:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5210:6:17"},"nodeType":"YulFunctionCall","src":"5210:27:17"},"nodeType":"YulExpressionStatement","src":"5210:27:17"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5041:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5046:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"5051:6:17","type":""}],"src":"4997:246:17"},{"body":{"nodeType":"YulBlock","src":"5297:54:17","statements":[{"nodeType":"YulAssignment","src":"5307:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5325:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5332:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5321:3:17"},"nodeType":"YulFunctionCall","src":"5321:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5341:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5337:3:17"},"nodeType":"YulFunctionCall","src":"5337:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5317:3:17"},"nodeType":"YulFunctionCall","src":"5317:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5307:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5280:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5290:6:17","type":""}],"src":"5249:102:17"},{"body":{"nodeType":"YulBlock","src":"5449:285:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5459:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5506:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5473:32:17"},"nodeType":"YulFunctionCall","src":"5473:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5463:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5521:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5587:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5592:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5528:58:17"},"nodeType":"YulFunctionCall","src":"5528:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5521:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5647:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5654:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5643:3:17"},"nodeType":"YulFunctionCall","src":"5643:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"5661:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"5666:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5608:34:17"},"nodeType":"YulFunctionCall","src":"5608:65:17"},"nodeType":"YulExpressionStatement","src":"5608:65:17"},{"nodeType":"YulAssignment","src":"5682:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5693:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5720:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5698:21:17"},"nodeType":"YulFunctionCall","src":"5698:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5689:3:17"},"nodeType":"YulFunctionCall","src":"5689:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5682:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5430:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5437:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5445:3:17","type":""}],"src":"5357:377:17"},{"body":{"nodeType":"YulBlock","src":"5858:195:17","statements":[{"nodeType":"YulAssignment","src":"5868:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5880:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5891:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5876:3:17"},"nodeType":"YulFunctionCall","src":"5876:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5868:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5915:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5926:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5911:3:17"},"nodeType":"YulFunctionCall","src":"5911:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5934:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5940:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5930:3:17"},"nodeType":"YulFunctionCall","src":"5930:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5904:6:17"},"nodeType":"YulFunctionCall","src":"5904:47:17"},"nodeType":"YulExpressionStatement","src":"5904:47:17"},{"nodeType":"YulAssignment","src":"5960:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6032:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"6041:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5968:63:17"},"nodeType":"YulFunctionCall","src":"5968:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5960:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5830:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5842:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5853:4:17","type":""}],"src":"5740:313:17"},{"body":{"nodeType":"YulBlock","src":"6102:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"6159:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6168:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6171:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6161:6:17"},"nodeType":"YulFunctionCall","src":"6161:12:17"},"nodeType":"YulExpressionStatement","src":"6161:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6125:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6150:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6132:17:17"},"nodeType":"YulFunctionCall","src":"6132:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6122:2:17"},"nodeType":"YulFunctionCall","src":"6122:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6115:6:17"},"nodeType":"YulFunctionCall","src":"6115:43:17"},"nodeType":"YulIf","src":"6112:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6095:5:17","type":""}],"src":"6059:122:17"},{"body":{"nodeType":"YulBlock","src":"6239:87:17","statements":[{"nodeType":"YulAssignment","src":"6249:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6271:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6258:12:17"},"nodeType":"YulFunctionCall","src":"6258:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6249:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6314:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6287:26:17"},"nodeType":"YulFunctionCall","src":"6287:33:17"},"nodeType":"YulExpressionStatement","src":"6287:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6217:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"6225:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6233:5:17","type":""}],"src":"6187:139:17"},{"body":{"nodeType":"YulBlock","src":"6398:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"6444:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6446:77:17"},"nodeType":"YulFunctionCall","src":"6446:79:17"},"nodeType":"YulExpressionStatement","src":"6446:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6419:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6428:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6415:3:17"},"nodeType":"YulFunctionCall","src":"6415:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6440:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6411:3:17"},"nodeType":"YulFunctionCall","src":"6411:32:17"},"nodeType":"YulIf","src":"6408:119:17"},{"nodeType":"YulBlock","src":"6537:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6552:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6566:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6556:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6581:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6616:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6627:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6612:3:17"},"nodeType":"YulFunctionCall","src":"6612:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6636:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6591:20:17"},"nodeType":"YulFunctionCall","src":"6591:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6581:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6368:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6379:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6391:6:17","type":""}],"src":"6332:329:17"},{"body":{"nodeType":"YulBlock","src":"6732:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6749:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6772:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6754:17:17"},"nodeType":"YulFunctionCall","src":"6754:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6742:6:17"},"nodeType":"YulFunctionCall","src":"6742:37:17"},"nodeType":"YulExpressionStatement","src":"6742:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6720:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6727:3:17","type":""}],"src":"6667:118:17"},{"body":{"nodeType":"YulBlock","src":"6889:124:17","statements":[{"nodeType":"YulAssignment","src":"6899:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6911:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"6922:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6907:3:17"},"nodeType":"YulFunctionCall","src":"6907:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6899:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6979:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6992:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7003:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:17"},"nodeType":"YulFunctionCall","src":"6988:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6935:43:17"},"nodeType":"YulFunctionCall","src":"6935:71:17"},"nodeType":"YulExpressionStatement","src":"6935:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6861:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6873:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6884:4:17","type":""}],"src":"6791:222:17"},{"body":{"nodeType":"YulBlock","src":"7102:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"7148:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7150:77:17"},"nodeType":"YulFunctionCall","src":"7150:79:17"},"nodeType":"YulExpressionStatement","src":"7150:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7123:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7132:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7119:3:17"},"nodeType":"YulFunctionCall","src":"7119:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7144:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7115:3:17"},"nodeType":"YulFunctionCall","src":"7115:32:17"},"nodeType":"YulIf","src":"7112:119:17"},{"nodeType":"YulBlock","src":"7241:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7256:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7270:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7260:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7285:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7320:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7331:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7316:3:17"},"nodeType":"YulFunctionCall","src":"7316:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7340:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7295:20:17"},"nodeType":"YulFunctionCall","src":"7295:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7285:6:17"}]}]},{"nodeType":"YulBlock","src":"7368:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7383:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7397:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7387:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7413:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7448:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7459:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7444:3:17"},"nodeType":"YulFunctionCall","src":"7444:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7468:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7423:20:17"},"nodeType":"YulFunctionCall","src":"7423:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7413:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7064:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7075:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7087:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7095:6:17","type":""}],"src":"7019:474:17"},{"body":{"nodeType":"YulBlock","src":"7647:225:17","statements":[{"nodeType":"YulAssignment","src":"7657:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7669:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7680:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7665:3:17"},"nodeType":"YulFunctionCall","src":"7665:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7657:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7704:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7715:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7700:3:17"},"nodeType":"YulFunctionCall","src":"7700:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7723:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7729:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7719:3:17"},"nodeType":"YulFunctionCall","src":"7719:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7693:6:17"},"nodeType":"YulFunctionCall","src":"7693:47:17"},"nodeType":"YulExpressionStatement","src":"7693:47:17"},{"nodeType":"YulAssignment","src":"7749:116:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7851:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"7860:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7757:93:17"},"nodeType":"YulFunctionCall","src":"7757:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7749:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7619:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7631:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7642:4:17","type":""}],"src":"7499:373:17"},{"body":{"nodeType":"YulBlock","src":"7943:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7960:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7983:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7965:17:17"},"nodeType":"YulFunctionCall","src":"7965:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7953:6:17"},"nodeType":"YulFunctionCall","src":"7953:37:17"},"nodeType":"YulExpressionStatement","src":"7953:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7931:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7938:3:17","type":""}],"src":"7878:118:17"},{"body":{"nodeType":"YulBlock","src":"8100:124:17","statements":[{"nodeType":"YulAssignment","src":"8110:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8122:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8133:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8118:3:17"},"nodeType":"YulFunctionCall","src":"8118:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8110:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8190:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8203:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8214:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8199:3:17"},"nodeType":"YulFunctionCall","src":"8199:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8146:43:17"},"nodeType":"YulFunctionCall","src":"8146:71:17"},"nodeType":"YulExpressionStatement","src":"8146:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8072:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8084:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8095:4:17","type":""}],"src":"8002:222:17"},{"body":{"nodeType":"YulBlock","src":"8313:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"8359:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8361:77:17"},"nodeType":"YulFunctionCall","src":"8361:79:17"},"nodeType":"YulExpressionStatement","src":"8361:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8334:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8343:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8330:3:17"},"nodeType":"YulFunctionCall","src":"8330:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"8355:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8326:3:17"},"nodeType":"YulFunctionCall","src":"8326:32:17"},"nodeType":"YulIf","src":"8323:119:17"},{"nodeType":"YulBlock","src":"8452:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8467:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8481:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8471:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8496:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8531:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8542:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8527:3:17"},"nodeType":"YulFunctionCall","src":"8527:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8551:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8506:20:17"},"nodeType":"YulFunctionCall","src":"8506:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8496:6:17"}]}]},{"nodeType":"YulBlock","src":"8579:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8594:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8608:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8598:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8624:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8659:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"8670:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8655:3:17"},"nodeType":"YulFunctionCall","src":"8655:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8679:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8634:20:17"},"nodeType":"YulFunctionCall","src":"8634:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8624:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8275:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8286:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8298:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8306:6:17","type":""}],"src":"8230:474:17"},{"body":{"nodeType":"YulBlock","src":"8810:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"8856:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8858:77:17"},"nodeType":"YulFunctionCall","src":"8858:79:17"},"nodeType":"YulExpressionStatement","src":"8858:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8831:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8840:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8827:3:17"},"nodeType":"YulFunctionCall","src":"8827:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"8852:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8823:3:17"},"nodeType":"YulFunctionCall","src":"8823:32:17"},"nodeType":"YulIf","src":"8820:119:17"},{"nodeType":"YulBlock","src":"8949:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8964:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"8978:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8968:6:17","type":""}]},{"nodeType":"YulAssignment","src":"8993:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9028:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9039:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9024:3:17"},"nodeType":"YulFunctionCall","src":"9024:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9048:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9003:20:17"},"nodeType":"YulFunctionCall","src":"9003:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8993:6:17"}]}]},{"nodeType":"YulBlock","src":"9076:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9091:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9105:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9095:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9121:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9156:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9167:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9152:3:17"},"nodeType":"YulFunctionCall","src":"9152:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9176:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9131:20:17"},"nodeType":"YulFunctionCall","src":"9131:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9121:6:17"}]}]},{"nodeType":"YulBlock","src":"9204:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9219:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"9233:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9223:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9249:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9284:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"9295:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9280:3:17"},"nodeType":"YulFunctionCall","src":"9280:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9304:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9259:20:17"},"nodeType":"YulFunctionCall","src":"9259:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9249:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8764:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8775:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8787:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8795:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8803:6:17","type":""}],"src":"8710:619:17"},{"body":{"nodeType":"YulBlock","src":"9834:1379:17","statements":[{"nodeType":"YulAssignment","src":"9844:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9856:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9867:3:17","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9852:3:17"},"nodeType":"YulFunctionCall","src":"9852:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9844:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9925:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9938:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9949:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9934:3:17"},"nodeType":"YulFunctionCall","src":"9934:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9881:43:17"},"nodeType":"YulFunctionCall","src":"9881:71:17"},"nodeType":"YulExpressionStatement","src":"9881:71:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9973:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9984:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9969:3:17"},"nodeType":"YulFunctionCall","src":"9969:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9993:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9999:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9989:3:17"},"nodeType":"YulFunctionCall","src":"9989:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9962:6:17"},"nodeType":"YulFunctionCall","src":"9962:48:17"},"nodeType":"YulExpressionStatement","src":"9962:48:17"},{"nodeType":"YulAssignment","src":"10019:86:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10091:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"10100:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10027:63:17"},"nodeType":"YulFunctionCall","src":"10027:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10019:4:17"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10159:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10172:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10183:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10168:3:17"},"nodeType":"YulFunctionCall","src":"10168:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10115:43:17"},"nodeType":"YulFunctionCall","src":"10115:72:17"},"nodeType":"YulExpressionStatement","src":"10115:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10241:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10254:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10265:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10250:3:17"},"nodeType":"YulFunctionCall","src":"10250:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10197:43:17"},"nodeType":"YulFunctionCall","src":"10197:72:17"},"nodeType":"YulExpressionStatement","src":"10197:72:17"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10323:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10336:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10347:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10332:3:17"},"nodeType":"YulFunctionCall","src":"10332:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10279:43:17"},"nodeType":"YulFunctionCall","src":"10279:73:17"},"nodeType":"YulExpressionStatement","src":"10279:73:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10373:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10384:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10369:3:17"},"nodeType":"YulFunctionCall","src":"10369:19:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10394:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10400:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10390:3:17"},"nodeType":"YulFunctionCall","src":"10390:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10362:6:17"},"nodeType":"YulFunctionCall","src":"10362:49:17"},"nodeType":"YulExpressionStatement","src":"10362:49:17"},{"nodeType":"YulAssignment","src":"10420:86:17","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"10492:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"10501:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10428:63:17"},"nodeType":"YulFunctionCall","src":"10428:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10420:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10527:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10538:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10523:3:17"},"nodeType":"YulFunctionCall","src":"10523:19:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10548:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10554:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10544:3:17"},"nodeType":"YulFunctionCall","src":"10544:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10516:6:17"},"nodeType":"YulFunctionCall","src":"10516:49:17"},"nodeType":"YulExpressionStatement","src":"10516:49:17"},{"nodeType":"YulAssignment","src":"10574:86:17","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"10646:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"10655:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10582:63:17"},"nodeType":"YulFunctionCall","src":"10582:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10574:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10681:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10692:3:17","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10677:3:17"},"nodeType":"YulFunctionCall","src":"10677:19:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10702:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10708:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10698:3:17"},"nodeType":"YulFunctionCall","src":"10698:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10670:6:17"},"nodeType":"YulFunctionCall","src":"10670:49:17"},"nodeType":"YulExpressionStatement","src":"10670:49:17"},{"nodeType":"YulAssignment","src":"10728:86:17","value":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"10800:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"10809:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10736:63:17"},"nodeType":"YulFunctionCall","src":"10736:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10728:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10835:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10846:3:17","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10831:3:17"},"nodeType":"YulFunctionCall","src":"10831:19:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10856:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10862:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10852:3:17"},"nodeType":"YulFunctionCall","src":"10852:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10824:6:17"},"nodeType":"YulFunctionCall","src":"10824:49:17"},"nodeType":"YulExpressionStatement","src":"10824:49:17"},{"nodeType":"YulAssignment","src":"10882:86:17","value":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"10954:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"10963:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10890:63:17"},"nodeType":"YulFunctionCall","src":"10890:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10882:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10989:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11000:3:17","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10985:3:17"},"nodeType":"YulFunctionCall","src":"10985:19:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11010:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11016:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11006:3:17"},"nodeType":"YulFunctionCall","src":"11006:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10978:6:17"},"nodeType":"YulFunctionCall","src":"10978:49:17"},"nodeType":"YulExpressionStatement","src":"10978:49:17"},{"nodeType":"YulAssignment","src":"11036:86:17","value":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"11108:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"11117:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11044:63:17"},"nodeType":"YulFunctionCall","src":"11044:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11036:4:17"}]},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"11176:7:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11190:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11201:3:17","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11186:3:17"},"nodeType":"YulFunctionCall","src":"11186:19:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11132:43:17"},"nodeType":"YulFunctionCall","src":"11132:74:17"},"nodeType":"YulExpressionStatement","src":"11132:74:17"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9725:9:17","type":""},{"name":"value10","nodeType":"YulTypedName","src":"9737:7:17","type":""},{"name":"value9","nodeType":"YulTypedName","src":"9746:6:17","type":""},{"name":"value8","nodeType":"YulTypedName","src":"9754:6:17","type":""},{"name":"value7","nodeType":"YulTypedName","src":"9762:6:17","type":""},{"name":"value6","nodeType":"YulTypedName","src":"9770:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9778:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9786:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9794:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9802:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9810:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9818:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9829:4:17","type":""}],"src":"9335:1878:17"},{"body":{"nodeType":"YulBlock","src":"11305:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11322:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"11327:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11315:6:17"},"nodeType":"YulFunctionCall","src":"11315:19:17"},"nodeType":"YulExpressionStatement","src":"11315:19:17"},{"nodeType":"YulAssignment","src":"11343:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11362:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11367:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11358:3:17"},"nodeType":"YulFunctionCall","src":"11358:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11343:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11277:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"11282:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11293:11:17","type":""}],"src":"11219:159:17"},{"body":{"nodeType":"YulBlock","src":"11466:275:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11476:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11523:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11490:32:17"},"nodeType":"YulFunctionCall","src":"11490:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11480:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11538:68:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11594:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"11599:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11545:48:17"},"nodeType":"YulFunctionCall","src":"11545:61:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11538:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11654:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11661:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11650:3:17"},"nodeType":"YulFunctionCall","src":"11650:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"11668:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"11673:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11615:34:17"},"nodeType":"YulFunctionCall","src":"11615:65:17"},"nodeType":"YulExpressionStatement","src":"11615:65:17"},{"nodeType":"YulAssignment","src":"11689:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11700:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11727:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11705:21:17"},"nodeType":"YulFunctionCall","src":"11705:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11696:3:17"},"nodeType":"YulFunctionCall","src":"11696:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11689:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11447:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11454:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11462:3:17","type":""}],"src":"11384:357:17"},{"body":{"nodeType":"YulBlock","src":"11802:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11819:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11842:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11824:17:17"},"nodeType":"YulFunctionCall","src":"11824:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11812:6:17"},"nodeType":"YulFunctionCall","src":"11812:37:17"},"nodeType":"YulExpressionStatement","src":"11812:37:17"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11790:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11797:3:17","type":""}],"src":"11747:108:17"},{"body":{"nodeType":"YulBlock","src":"12055:2441:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12065:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12081:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12086:6:17","type":"","value":"0x0160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12077:3:17"},"nodeType":"YulFunctionCall","src":"12077:16:17"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"12069:4:17","type":""}]},{"nodeType":"YulBlock","src":"12103:162:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12136:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12166:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12173:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12162:3:17"},"nodeType":"YulFunctionCall","src":"12162:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12156:5:17"},"nodeType":"YulFunctionCall","src":"12156:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12140:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12226:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12244:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12249:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12240:3:17"},"nodeType":"YulFunctionCall","src":"12240:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12192:33:17"},"nodeType":"YulFunctionCall","src":"12192:63:17"},"nodeType":"YulExpressionStatement","src":"12192:63:17"}]},{"nodeType":"YulBlock","src":"12275:235:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12310:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12340:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12347:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12336:3:17"},"nodeType":"YulFunctionCall","src":"12336:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12330:5:17"},"nodeType":"YulFunctionCall","src":"12330:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12314:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12378:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12383:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12374:3:17"},"nodeType":"YulFunctionCall","src":"12374:14:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12394:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"12400:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12390:3:17"},"nodeType":"YulFunctionCall","src":"12390:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12367:6:17"},"nodeType":"YulFunctionCall","src":"12367:38:17"},"nodeType":"YulExpressionStatement","src":"12367:38:17"},{"nodeType":"YulAssignment","src":"12418:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12480:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"12494:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12426:53:17"},"nodeType":"YulFunctionCall","src":"12426:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12418:4:17"}]}]},{"nodeType":"YulBlock","src":"12520:164:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12555:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12585:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12592:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12581:3:17"},"nodeType":"YulFunctionCall","src":"12581:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12575:5:17"},"nodeType":"YulFunctionCall","src":"12575:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12559:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12645:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12663:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12668:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12659:3:17"},"nodeType":"YulFunctionCall","src":"12659:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12611:33:17"},"nodeType":"YulFunctionCall","src":"12611:63:17"},"nodeType":"YulExpressionStatement","src":"12611:63:17"}]},{"nodeType":"YulBlock","src":"12694:167:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12732:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12762:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12769:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12758:3:17"},"nodeType":"YulFunctionCall","src":"12758:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12752:5:17"},"nodeType":"YulFunctionCall","src":"12752:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12736:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12822:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12840:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12845:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12836:3:17"},"nodeType":"YulFunctionCall","src":"12836:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12788:33:17"},"nodeType":"YulFunctionCall","src":"12788:63:17"},"nodeType":"YulExpressionStatement","src":"12788:63:17"}]},{"nodeType":"YulBlock","src":"12871:170:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12912:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12942:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12949:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12938:3:17"},"nodeType":"YulFunctionCall","src":"12938:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12932:5:17"},"nodeType":"YulFunctionCall","src":"12932:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12916:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13002:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13020:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13025:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13016:3:17"},"nodeType":"YulFunctionCall","src":"13016:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12968:33:17"},"nodeType":"YulFunctionCall","src":"12968:63:17"},"nodeType":"YulExpressionStatement","src":"12968:63:17"}]},{"nodeType":"YulBlock","src":"13051:235:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13086:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13116:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13123:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13112:3:17"},"nodeType":"YulFunctionCall","src":"13112:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13106:5:17"},"nodeType":"YulFunctionCall","src":"13106:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13090:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13154:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13159:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13150:3:17"},"nodeType":"YulFunctionCall","src":"13150:14:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13170:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"13176:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13166:3:17"},"nodeType":"YulFunctionCall","src":"13166:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13143:6:17"},"nodeType":"YulFunctionCall","src":"13143:38:17"},"nodeType":"YulExpressionStatement","src":"13143:38:17"},{"nodeType":"YulAssignment","src":"13194:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13256:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"13270:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13202:53:17"},"nodeType":"YulFunctionCall","src":"13202:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13194:4:17"}]}]},{"nodeType":"YulBlock","src":"13296:235:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13331:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13361:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13368:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13357:3:17"},"nodeType":"YulFunctionCall","src":"13357:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13351:5:17"},"nodeType":"YulFunctionCall","src":"13351:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13335:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13399:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13404:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13395:3:17"},"nodeType":"YulFunctionCall","src":"13395:14:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13415:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"13421:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13411:3:17"},"nodeType":"YulFunctionCall","src":"13411:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13388:6:17"},"nodeType":"YulFunctionCall","src":"13388:38:17"},"nodeType":"YulExpressionStatement","src":"13388:38:17"},{"nodeType":"YulAssignment","src":"13439:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13501:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"13515:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13447:53:17"},"nodeType":"YulFunctionCall","src":"13447:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13439:4:17"}]}]},{"nodeType":"YulBlock","src":"13541:239:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13580:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13610:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13617:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13606:3:17"},"nodeType":"YulFunctionCall","src":"13606:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13600:5:17"},"nodeType":"YulFunctionCall","src":"13600:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13584:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13648:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13653:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13644:3:17"},"nodeType":"YulFunctionCall","src":"13644:14:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13664:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"13670:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13660:3:17"},"nodeType":"YulFunctionCall","src":"13660:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13637:6:17"},"nodeType":"YulFunctionCall","src":"13637:38:17"},"nodeType":"YulExpressionStatement","src":"13637:38:17"},{"nodeType":"YulAssignment","src":"13688:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13750:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"13764:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13696:53:17"},"nodeType":"YulFunctionCall","src":"13696:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13688:4:17"}]}]},{"nodeType":"YulBlock","src":"13790:246:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13832:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13862:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13869:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13858:3:17"},"nodeType":"YulFunctionCall","src":"13858:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13852:5:17"},"nodeType":"YulFunctionCall","src":"13852:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13836:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13902:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13907:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13898:3:17"},"nodeType":"YulFunctionCall","src":"13898:16:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13920:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"13926:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13916:3:17"},"nodeType":"YulFunctionCall","src":"13916:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13891:6:17"},"nodeType":"YulFunctionCall","src":"13891:40:17"},"nodeType":"YulExpressionStatement","src":"13891:40:17"},{"nodeType":"YulAssignment","src":"13944:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14006:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"14020:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13952:53:17"},"nodeType":"YulFunctionCall","src":"13952:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13944:4:17"}]}]},{"nodeType":"YulBlock","src":"14046:242:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14084:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14114:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14121:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14110:3:17"},"nodeType":"YulFunctionCall","src":"14110:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14104:5:17"},"nodeType":"YulFunctionCall","src":"14104:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14088:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14154:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14159:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14150:3:17"},"nodeType":"YulFunctionCall","src":"14150:16:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14172:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"14178:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14168:3:17"},"nodeType":"YulFunctionCall","src":"14168:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14143:6:17"},"nodeType":"YulFunctionCall","src":"14143:40:17"},"nodeType":"YulExpressionStatement","src":"14143:40:17"},{"nodeType":"YulAssignment","src":"14196:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14258:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"14272:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14204:53:17"},"nodeType":"YulFunctionCall","src":"14204:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14196:4:17"}]}]},{"nodeType":"YulBlock","src":"14298:171:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14336:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14366:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14373:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14362:3:17"},"nodeType":"YulFunctionCall","src":"14362:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14356:5:17"},"nodeType":"YulFunctionCall","src":"14356:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14340:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14428:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14446:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14451:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14442:3:17"},"nodeType":"YulFunctionCall","src":"14442:16:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"14394:33:17"},"nodeType":"YulFunctionCall","src":"14394:65:17"},"nodeType":"YulExpressionStatement","src":"14394:65:17"}]},{"nodeType":"YulAssignment","src":"14479:11:17","value":{"name":"tail","nodeType":"YulIdentifier","src":"14486:4:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14479:3:17"}]}]},"name":"abi_encode_t_struct$_Occasion_$6461_memory_ptr_to_t_struct$_Occasion_$6461_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12034:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12041:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12050:3:17","type":""}],"src":"11929:2567:17"},{"body":{"nodeType":"YulBlock","src":"14652:227:17","statements":[{"nodeType":"YulAssignment","src":"14662:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14674:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14685:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14670:3:17"},"nodeType":"YulFunctionCall","src":"14670:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14662:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14709:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14720:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14705:3:17"},"nodeType":"YulFunctionCall","src":"14705:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14728:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"14734:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14724:3:17"},"nodeType":"YulFunctionCall","src":"14724:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14698:6:17"},"nodeType":"YulFunctionCall","src":"14698:47:17"},"nodeType":"YulExpressionStatement","src":"14698:47:17"},{"nodeType":"YulAssignment","src":"14754:118:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14858:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"14867:4:17"}],"functionName":{"name":"abi_encode_t_struct$_Occasion_$6461_memory_ptr_to_t_struct$_Occasion_$6461_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14762:95:17"},"nodeType":"YulFunctionCall","src":"14762:110:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14754:4:17"}]}]},"name":"abi_encode_tuple_t_struct$_Occasion_$6461_memory_ptr__to_t_struct$_Occasion_$6461_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14624:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14636:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14647:4:17","type":""}],"src":"14502:377:17"},{"body":{"nodeType":"YulBlock","src":"14968:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"15014:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15016:77:17"},"nodeType":"YulFunctionCall","src":"15016:79:17"},"nodeType":"YulExpressionStatement","src":"15016:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14989:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"14998:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14985:3:17"},"nodeType":"YulFunctionCall","src":"14985:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"15010:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14981:3:17"},"nodeType":"YulFunctionCall","src":"14981:32:17"},"nodeType":"YulIf","src":"14978:119:17"},{"nodeType":"YulBlock","src":"15107:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15122:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15136:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15126:6:17","type":""}]},{"nodeType":"YulAssignment","src":"15151:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15186:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"15197:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15182:3:17"},"nodeType":"YulFunctionCall","src":"15182:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15206:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15161:20:17"},"nodeType":"YulFunctionCall","src":"15161:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15151:6:17"}]}]},{"nodeType":"YulBlock","src":"15234:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15249:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15263:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15253:6:17","type":""}]},{"nodeType":"YulAssignment","src":"15279:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15314:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"15325:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15310:3:17"},"nodeType":"YulFunctionCall","src":"15310:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15334:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15289:20:17"},"nodeType":"YulFunctionCall","src":"15289:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15279:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14930:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14941:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14953:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14961:6:17","type":""}],"src":"14885:474:17"},{"body":{"nodeType":"YulBlock","src":"15405:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"15459:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15468:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15471:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15461:6:17"},"nodeType":"YulFunctionCall","src":"15461:12:17"},"nodeType":"YulExpressionStatement","src":"15461:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15428:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15450:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"15435:14:17"},"nodeType":"YulFunctionCall","src":"15435:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15425:2:17"},"nodeType":"YulFunctionCall","src":"15425:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15418:6:17"},"nodeType":"YulFunctionCall","src":"15418:40:17"},"nodeType":"YulIf","src":"15415:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15398:5:17","type":""}],"src":"15365:116:17"},{"body":{"nodeType":"YulBlock","src":"15536:84:17","statements":[{"nodeType":"YulAssignment","src":"15546:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15568:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15555:12:17"},"nodeType":"YulFunctionCall","src":"15555:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15546:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15608:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"15584:23:17"},"nodeType":"YulFunctionCall","src":"15584:30:17"},"nodeType":"YulExpressionStatement","src":"15584:30:17"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15514:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"15522:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15530:5:17","type":""}],"src":"15487:133:17"},{"body":{"nodeType":"YulBlock","src":"15706:388:17","statements":[{"body":{"nodeType":"YulBlock","src":"15752:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15754:77:17"},"nodeType":"YulFunctionCall","src":"15754:79:17"},"nodeType":"YulExpressionStatement","src":"15754:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15727:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"15736:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15723:3:17"},"nodeType":"YulFunctionCall","src":"15723:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"15748:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15719:3:17"},"nodeType":"YulFunctionCall","src":"15719:32:17"},"nodeType":"YulIf","src":"15716:119:17"},{"nodeType":"YulBlock","src":"15845:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15860:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15874:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15864:6:17","type":""}]},{"nodeType":"YulAssignment","src":"15889:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15924:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"15935:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15920:3:17"},"nodeType":"YulFunctionCall","src":"15920:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15944:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15899:20:17"},"nodeType":"YulFunctionCall","src":"15899:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15889:6:17"}]}]},{"nodeType":"YulBlock","src":"15972:115:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15987:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"16001:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15991:6:17","type":""}]},{"nodeType":"YulAssignment","src":"16017:60:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16049:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"16060:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16045:3:17"},"nodeType":"YulFunctionCall","src":"16045:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16069:7:17"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"16027:17:17"},"nodeType":"YulFunctionCall","src":"16027:50:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16017:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15668:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15679:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15691:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15699:6:17","type":""}],"src":"15626:468:17"},{"body":{"nodeType":"YulBlock","src":"16189:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16206:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16209:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16199:6:17"},"nodeType":"YulFunctionCall","src":"16199:12:17"},"nodeType":"YulExpressionStatement","src":"16199:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"16100:117:17"},{"body":{"nodeType":"YulBlock","src":"16312:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16329:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16332:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16322:6:17"},"nodeType":"YulFunctionCall","src":"16322:12:17"},"nodeType":"YulExpressionStatement","src":"16322:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"16223:117:17"},{"body":{"nodeType":"YulBlock","src":"16374:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16391:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16394:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16384:6:17"},"nodeType":"YulFunctionCall","src":"16384:88:17"},"nodeType":"YulExpressionStatement","src":"16384:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16488:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16491:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16481:6:17"},"nodeType":"YulFunctionCall","src":"16481:15:17"},"nodeType":"YulExpressionStatement","src":"16481:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16512:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16515:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16505:6:17"},"nodeType":"YulFunctionCall","src":"16505:15:17"},"nodeType":"YulExpressionStatement","src":"16505:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"16346:180:17"},{"body":{"nodeType":"YulBlock","src":"16575:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"16585:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16607:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16637:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16615:21:17"},"nodeType":"YulFunctionCall","src":"16615:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16603:3:17"},"nodeType":"YulFunctionCall","src":"16603:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"16589:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"16754:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16756:16:17"},"nodeType":"YulFunctionCall","src":"16756:18:17"},"nodeType":"YulExpressionStatement","src":"16756:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"16697:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"16709:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16694:2:17"},"nodeType":"YulFunctionCall","src":"16694:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"16733:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"16745:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16730:2:17"},"nodeType":"YulFunctionCall","src":"16730:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"16691:2:17"},"nodeType":"YulFunctionCall","src":"16691:62:17"},"nodeType":"YulIf","src":"16688:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16792:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"16796:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16785:6:17"},"nodeType":"YulFunctionCall","src":"16785:22:17"},"nodeType":"YulExpressionStatement","src":"16785:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16561:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"16569:4:17","type":""}],"src":"16532:281:17"},{"body":{"nodeType":"YulBlock","src":"16860:88:17","statements":[{"nodeType":"YulAssignment","src":"16870:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"16880:18:17"},"nodeType":"YulFunctionCall","src":"16880:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16870:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16929:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"16937:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"16909:19:17"},"nodeType":"YulFunctionCall","src":"16909:33:17"},"nodeType":"YulExpressionStatement","src":"16909:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"16844:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16853:6:17","type":""}],"src":"16819:129:17"},{"body":{"nodeType":"YulBlock","src":"17021:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"17126:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"17128:16:17"},"nodeType":"YulFunctionCall","src":"17128:18:17"},"nodeType":"YulExpressionStatement","src":"17128:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17098:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17106:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17095:2:17"},"nodeType":"YulFunctionCall","src":"17095:30:17"},"nodeType":"YulIf","src":"17092:56:17"},{"nodeType":"YulAssignment","src":"17158:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17188:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17166:21:17"},"nodeType":"YulFunctionCall","src":"17166:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17158:4:17"}]},{"nodeType":"YulAssignment","src":"17232:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"17244:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"17250:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17240:3:17"},"nodeType":"YulFunctionCall","src":"17240:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17232:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"17005:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"17016:4:17","type":""}],"src":"16954:308:17"},{"body":{"nodeType":"YulBlock","src":"17332:82:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17355:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"17360:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"17365:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17342:12:17"},"nodeType":"YulFunctionCall","src":"17342:30:17"},"nodeType":"YulExpressionStatement","src":"17342:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17392:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"17397:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17388:3:17"},"nodeType":"YulFunctionCall","src":"17388:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"17406:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17381:6:17"},"nodeType":"YulFunctionCall","src":"17381:27:17"},"nodeType":"YulExpressionStatement","src":"17381:27:17"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17314:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17319:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"17324:6:17","type":""}],"src":"17268:146:17"},{"body":{"nodeType":"YulBlock","src":"17504:341:17","statements":[{"nodeType":"YulAssignment","src":"17514:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17581:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17539:41:17"},"nodeType":"YulFunctionCall","src":"17539:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"17523:15:17"},"nodeType":"YulFunctionCall","src":"17523:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"17514:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"17605:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"17612:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17598:6:17"},"nodeType":"YulFunctionCall","src":"17598:21:17"},"nodeType":"YulExpressionStatement","src":"17598:21:17"},{"nodeType":"YulVariableDeclaration","src":"17628:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"17643:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"17650:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17639:3:17"},"nodeType":"YulFunctionCall","src":"17639:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"17632:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"17693:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"17695:77:17"},"nodeType":"YulFunctionCall","src":"17695:79:17"},"nodeType":"YulExpressionStatement","src":"17695:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17674:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"17679:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17670:3:17"},"nodeType":"YulFunctionCall","src":"17670:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"17688:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17667:2:17"},"nodeType":"YulFunctionCall","src":"17667:25:17"},"nodeType":"YulIf","src":"17664:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17822:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"17827:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"17832:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"17785:36:17"},"nodeType":"YulFunctionCall","src":"17785:54:17"},"nodeType":"YulExpressionStatement","src":"17785:54:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17477:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"17482:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"17490:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"17498:5:17","type":""}],"src":"17420:425:17"},{"body":{"nodeType":"YulBlock","src":"17927:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"17976:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"17978:77:17"},"nodeType":"YulFunctionCall","src":"17978:79:17"},"nodeType":"YulExpressionStatement","src":"17978:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17955:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"17963:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17951:3:17"},"nodeType":"YulFunctionCall","src":"17951:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"17970:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17947:3:17"},"nodeType":"YulFunctionCall","src":"17947:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17940:6:17"},"nodeType":"YulFunctionCall","src":"17940:35:17"},"nodeType":"YulIf","src":"17937:122:17"},{"nodeType":"YulVariableDeclaration","src":"18068:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18095:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18082:12:17"},"nodeType":"YulFunctionCall","src":"18082:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18072:6:17","type":""}]},{"nodeType":"YulAssignment","src":"18111:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18172:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"18180:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18168:3:17"},"nodeType":"YulFunctionCall","src":"18168:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"18187:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"18195:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18120:47:17"},"nodeType":"YulFunctionCall","src":"18120:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"18111:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17905:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"17913:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"17921:5:17","type":""}],"src":"17865:340:17"},{"body":{"nodeType":"YulBlock","src":"18304:561:17","statements":[{"body":{"nodeType":"YulBlock","src":"18350:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18352:77:17"},"nodeType":"YulFunctionCall","src":"18352:79:17"},"nodeType":"YulExpressionStatement","src":"18352:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18325:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"18334:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18321:3:17"},"nodeType":"YulFunctionCall","src":"18321:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"18346:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18317:3:17"},"nodeType":"YulFunctionCall","src":"18317:32:17"},"nodeType":"YulIf","src":"18314:119:17"},{"nodeType":"YulBlock","src":"18443:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"18458:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"18472:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18462:6:17","type":""}]},{"nodeType":"YulAssignment","src":"18487:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18522:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"18533:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18518:3:17"},"nodeType":"YulFunctionCall","src":"18518:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18542:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18497:20:17"},"nodeType":"YulFunctionCall","src":"18497:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18487:6:17"}]}]},{"nodeType":"YulBlock","src":"18570:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"18585:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18616:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"18627:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18612:3:17"},"nodeType":"YulFunctionCall","src":"18612:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18599:12:17"},"nodeType":"YulFunctionCall","src":"18599:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18589:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"18678:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18680:77:17"},"nodeType":"YulFunctionCall","src":"18680:79:17"},"nodeType":"YulExpressionStatement","src":"18680:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18650:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"18658:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18647:2:17"},"nodeType":"YulFunctionCall","src":"18647:30:17"},"nodeType":"YulIf","src":"18644:117:17"},{"nodeType":"YulAssignment","src":"18775:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18820:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"18831:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18816:3:17"},"nodeType":"YulFunctionCall","src":"18816:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18840:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18785:30:17"},"nodeType":"YulFunctionCall","src":"18785:63:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18775:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18266:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18277:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18289:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18297:6:17","type":""}],"src":"18211:654:17"},{"body":{"nodeType":"YulBlock","src":"19089:1885:17","statements":[{"body":{"nodeType":"YulBlock","src":"19136:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19138:77:17"},"nodeType":"YulFunctionCall","src":"19138:79:17"},"nodeType":"YulExpressionStatement","src":"19138:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19110:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"19119:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19106:3:17"},"nodeType":"YulFunctionCall","src":"19106:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"19131:3:17","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19102:3:17"},"nodeType":"YulFunctionCall","src":"19102:33:17"},"nodeType":"YulIf","src":"19099:120:17"},{"nodeType":"YulBlock","src":"19229:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"19244:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19275:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19286:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19271:3:17"},"nodeType":"YulFunctionCall","src":"19271:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19258:12:17"},"nodeType":"YulFunctionCall","src":"19258:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19248:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"19336:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19338:77:17"},"nodeType":"YulFunctionCall","src":"19338:79:17"},"nodeType":"YulExpressionStatement","src":"19338:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19308:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"19316:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19305:2:17"},"nodeType":"YulFunctionCall","src":"19305:30:17"},"nodeType":"YulIf","src":"19302:117:17"},{"nodeType":"YulAssignment","src":"19433:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19478:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"19489:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19474:3:17"},"nodeType":"YulFunctionCall","src":"19474:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19498:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19443:30:17"},"nodeType":"YulFunctionCall","src":"19443:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19433:6:17"}]}]},{"nodeType":"YulBlock","src":"19526:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"19541:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"19555:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19545:6:17","type":""}]},{"nodeType":"YulAssignment","src":"19571:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19606:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"19617:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19602:3:17"},"nodeType":"YulFunctionCall","src":"19602:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19626:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19581:20:17"},"nodeType":"YulFunctionCall","src":"19581:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19571:6:17"}]}]},{"nodeType":"YulBlock","src":"19654:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"19669:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"19683:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19673:6:17","type":""}]},{"nodeType":"YulAssignment","src":"19699:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19734:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"19745:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19730:3:17"},"nodeType":"YulFunctionCall","src":"19730:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19754:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19709:20:17"},"nodeType":"YulFunctionCall","src":"19709:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19699:6:17"}]}]},{"nodeType":"YulBlock","src":"19782:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"19797:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19828:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19839:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19824:3:17"},"nodeType":"YulFunctionCall","src":"19824:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19811:12:17"},"nodeType":"YulFunctionCall","src":"19811:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19801:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"19890:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19892:77:17"},"nodeType":"YulFunctionCall","src":"19892:79:17"},"nodeType":"YulExpressionStatement","src":"19892:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19862:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"19870:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19859:2:17"},"nodeType":"YulFunctionCall","src":"19859:30:17"},"nodeType":"YulIf","src":"19856:117:17"},{"nodeType":"YulAssignment","src":"19987:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20032:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"20043:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20028:3:17"},"nodeType":"YulFunctionCall","src":"20028:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20052:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19997:30:17"},"nodeType":"YulFunctionCall","src":"19997:63:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"19987:6:17"}]}]},{"nodeType":"YulBlock","src":"20080:289:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20095:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20126:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20137:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20122:3:17"},"nodeType":"YulFunctionCall","src":"20122:19:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20109:12:17"},"nodeType":"YulFunctionCall","src":"20109:33:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20099:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"20189:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20191:77:17"},"nodeType":"YulFunctionCall","src":"20191:79:17"},"nodeType":"YulExpressionStatement","src":"20191:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20161:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20169:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20158:2:17"},"nodeType":"YulFunctionCall","src":"20158:30:17"},"nodeType":"YulIf","src":"20155:117:17"},{"nodeType":"YulAssignment","src":"20286:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20331:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"20342:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20327:3:17"},"nodeType":"YulFunctionCall","src":"20327:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20351:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20296:30:17"},"nodeType":"YulFunctionCall","src":"20296:63:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"20286:6:17"}]}]},{"nodeType":"YulBlock","src":"20379:289:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20394:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20425:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20436:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20421:3:17"},"nodeType":"YulFunctionCall","src":"20421:19:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20408:12:17"},"nodeType":"YulFunctionCall","src":"20408:33:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20398:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"20488:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20490:77:17"},"nodeType":"YulFunctionCall","src":"20490:79:17"},"nodeType":"YulExpressionStatement","src":"20490:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20460:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20468:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20457:2:17"},"nodeType":"YulFunctionCall","src":"20457:30:17"},"nodeType":"YulIf","src":"20454:117:17"},{"nodeType":"YulAssignment","src":"20585:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20630:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"20641:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20626:3:17"},"nodeType":"YulFunctionCall","src":"20626:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20650:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20595:30:17"},"nodeType":"YulFunctionCall","src":"20595:63:17"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"20585:6:17"}]}]},{"nodeType":"YulBlock","src":"20678:289:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20693:47:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20724:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20735:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20720:3:17"},"nodeType":"YulFunctionCall","src":"20720:19:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20707:12:17"},"nodeType":"YulFunctionCall","src":"20707:33:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20697:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"20787:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20789:77:17"},"nodeType":"YulFunctionCall","src":"20789:79:17"},"nodeType":"YulExpressionStatement","src":"20789:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20759:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20767:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20756:2:17"},"nodeType":"YulFunctionCall","src":"20756:30:17"},"nodeType":"YulIf","src":"20753:117:17"},{"nodeType":"YulAssignment","src":"20884:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20929:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"20940:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20925:3:17"},"nodeType":"YulFunctionCall","src":"20925:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20949:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20894:30:17"},"nodeType":"YulFunctionCall","src":"20894:63:17"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"20884:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19011:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19022:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19034:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19042:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19050:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19058:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19066:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"19074:6:17","type":""},{"name":"value6","nodeType":"YulTypedName","src":"19082:6:17","type":""}],"src":"18871:2103:17"},{"body":{"nodeType":"YulBlock","src":"21046:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"21151:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21153:16:17"},"nodeType":"YulFunctionCall","src":"21153:18:17"},"nodeType":"YulExpressionStatement","src":"21153:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21123:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21131:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21120:2:17"},"nodeType":"YulFunctionCall","src":"21120:30:17"},"nodeType":"YulIf","src":"21117:56:17"},{"nodeType":"YulAssignment","src":"21183:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21213:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21191:21:17"},"nodeType":"YulFunctionCall","src":"21191:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"21183:4:17"}]},{"nodeType":"YulAssignment","src":"21257:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"21269:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"21275:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21265:3:17"},"nodeType":"YulFunctionCall","src":"21265:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"21257:4:17"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"21030:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"21041:4:17","type":""}],"src":"20980:307:17"},{"body":{"nodeType":"YulBlock","src":"21376:340:17","statements":[{"nodeType":"YulAssignment","src":"21386:74:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21452:6:17"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21411:40:17"},"nodeType":"YulFunctionCall","src":"21411:48:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"21395:15:17"},"nodeType":"YulFunctionCall","src":"21395:65:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"21386:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"21476:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"21483:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21469:6:17"},"nodeType":"YulFunctionCall","src":"21469:21:17"},"nodeType":"YulExpressionStatement","src":"21469:21:17"},{"nodeType":"YulVariableDeclaration","src":"21499:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"21514:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"21521:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21510:3:17"},"nodeType":"YulFunctionCall","src":"21510:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"21503:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"21564:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"21566:77:17"},"nodeType":"YulFunctionCall","src":"21566:79:17"},"nodeType":"YulExpressionStatement","src":"21566:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21545:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"21550:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21541:3:17"},"nodeType":"YulFunctionCall","src":"21541:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"21559:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21538:2:17"},"nodeType":"YulFunctionCall","src":"21538:25:17"},"nodeType":"YulIf","src":"21535:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21693:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"21698:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"21703:6:17"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"21656:36:17"},"nodeType":"YulFunctionCall","src":"21656:54:17"},"nodeType":"YulExpressionStatement","src":"21656:54:17"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"21349:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"21354:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"21362:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"21370:5:17","type":""}],"src":"21293:423:17"},{"body":{"nodeType":"YulBlock","src":"21796:277:17","statements":[{"body":{"nodeType":"YulBlock","src":"21845:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"21847:77:17"},"nodeType":"YulFunctionCall","src":"21847:79:17"},"nodeType":"YulExpressionStatement","src":"21847:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21824:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"21832:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21820:3:17"},"nodeType":"YulFunctionCall","src":"21820:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"21839:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21816:3:17"},"nodeType":"YulFunctionCall","src":"21816:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21809:6:17"},"nodeType":"YulFunctionCall","src":"21809:35:17"},"nodeType":"YulIf","src":"21806:122:17"},{"nodeType":"YulVariableDeclaration","src":"21937:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21964:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21951:12:17"},"nodeType":"YulFunctionCall","src":"21951:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21941:6:17","type":""}]},{"nodeType":"YulAssignment","src":"21980:87:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22040:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"22048:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22036:3:17"},"nodeType":"YulFunctionCall","src":"22036:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"22055:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"22063:3:17"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21989:46:17"},"nodeType":"YulFunctionCall","src":"21989:78:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"21980:5:17"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21774:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"21782:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"21790:5:17","type":""}],"src":"21735:338:17"},{"body":{"nodeType":"YulBlock","src":"22205:817:17","statements":[{"body":{"nodeType":"YulBlock","src":"22252:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22254:77:17"},"nodeType":"YulFunctionCall","src":"22254:79:17"},"nodeType":"YulExpressionStatement","src":"22254:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22226:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"22235:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22222:3:17"},"nodeType":"YulFunctionCall","src":"22222:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"22247:3:17","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22218:3:17"},"nodeType":"YulFunctionCall","src":"22218:33:17"},"nodeType":"YulIf","src":"22215:120:17"},{"nodeType":"YulBlock","src":"22345:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22360:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"22374:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22364:6:17","type":""}]},{"nodeType":"YulAssignment","src":"22389:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22424:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"22435:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22420:3:17"},"nodeType":"YulFunctionCall","src":"22420:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22444:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"22399:20:17"},"nodeType":"YulFunctionCall","src":"22399:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22389:6:17"}]}]},{"nodeType":"YulBlock","src":"22472:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22487:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"22501:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22491:6:17","type":""}]},{"nodeType":"YulAssignment","src":"22517:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22552:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"22563:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22548:3:17"},"nodeType":"YulFunctionCall","src":"22548:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22572:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"22527:20:17"},"nodeType":"YulFunctionCall","src":"22527:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"22517:6:17"}]}]},{"nodeType":"YulBlock","src":"22600:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22615:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"22629:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22619:6:17","type":""}]},{"nodeType":"YulAssignment","src":"22645:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22680:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"22691:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22676:3:17"},"nodeType":"YulFunctionCall","src":"22676:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22700:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"22655:20:17"},"nodeType":"YulFunctionCall","src":"22655:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"22645:6:17"}]}]},{"nodeType":"YulBlock","src":"22728:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22743:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22774:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"22785:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22770:3:17"},"nodeType":"YulFunctionCall","src":"22770:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22757:12:17"},"nodeType":"YulFunctionCall","src":"22757:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22747:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"22836:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22838:77:17"},"nodeType":"YulFunctionCall","src":"22838:79:17"},"nodeType":"YulExpressionStatement","src":"22838:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22808:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"22816:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22805:2:17"},"nodeType":"YulFunctionCall","src":"22805:30:17"},"nodeType":"YulIf","src":"22802:117:17"},{"nodeType":"YulAssignment","src":"22933:72:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22977:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"22988:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22973:3:17"},"nodeType":"YulFunctionCall","src":"22973:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22997:7:17"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"22943:29:17"},"nodeType":"YulFunctionCall","src":"22943:62:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"22933:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22151:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22162:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22174:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22182:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22190:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22198:6:17","type":""}],"src":"22079:943:17"},{"body":{"nodeType":"YulBlock","src":"23111:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"23157:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23159:77:17"},"nodeType":"YulFunctionCall","src":"23159:79:17"},"nodeType":"YulExpressionStatement","src":"23159:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23132:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"23141:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23128:3:17"},"nodeType":"YulFunctionCall","src":"23128:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"23153:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23124:3:17"},"nodeType":"YulFunctionCall","src":"23124:32:17"},"nodeType":"YulIf","src":"23121:119:17"},{"nodeType":"YulBlock","src":"23250:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"23265:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"23279:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23269:6:17","type":""}]},{"nodeType":"YulAssignment","src":"23294:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23329:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"23340:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23325:3:17"},"nodeType":"YulFunctionCall","src":"23325:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23349:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"23304:20:17"},"nodeType":"YulFunctionCall","src":"23304:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23294:6:17"}]}]},{"nodeType":"YulBlock","src":"23377:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"23392:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"23406:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23396:6:17","type":""}]},{"nodeType":"YulAssignment","src":"23422:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23457:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"23468:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23453:3:17"},"nodeType":"YulFunctionCall","src":"23453:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23477:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"23432:20:17"},"nodeType":"YulFunctionCall","src":"23432:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"23422:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23073:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23084:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23096:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23104:6:17","type":""}],"src":"23028:474:17"},{"body":{"nodeType":"YulBlock","src":"23536:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23553:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23556:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23546:6:17"},"nodeType":"YulFunctionCall","src":"23546:88:17"},"nodeType":"YulExpressionStatement","src":"23546:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23650:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23653:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23643:6:17"},"nodeType":"YulFunctionCall","src":"23643:15:17"},"nodeType":"YulExpressionStatement","src":"23643:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23674:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23677:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23667:6:17"},"nodeType":"YulFunctionCall","src":"23667:15:17"},"nodeType":"YulExpressionStatement","src":"23667:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"23508:180:17"},{"body":{"nodeType":"YulBlock","src":"23722:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23739:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23742:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23732:6:17"},"nodeType":"YulFunctionCall","src":"23732:88:17"},"nodeType":"YulExpressionStatement","src":"23732:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23836:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23839:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23829:6:17"},"nodeType":"YulFunctionCall","src":"23829:15:17"},"nodeType":"YulExpressionStatement","src":"23829:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23860:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23863:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23853:6:17"},"nodeType":"YulFunctionCall","src":"23853:15:17"},"nodeType":"YulExpressionStatement","src":"23853:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"23694:180:17"},{"body":{"nodeType":"YulBlock","src":"23923:190:17","statements":[{"nodeType":"YulAssignment","src":"23933:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23960:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23942:17:17"},"nodeType":"YulFunctionCall","src":"23942:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23933:5:17"}]},{"body":{"nodeType":"YulBlock","src":"24056:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24058:16:17"},"nodeType":"YulFunctionCall","src":"24058:18:17"},"nodeType":"YulExpressionStatement","src":"24058:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23981:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"23988:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23978:2:17"},"nodeType":"YulFunctionCall","src":"23978:77:17"},"nodeType":"YulIf","src":"23975:103:17"},{"nodeType":"YulAssignment","src":"24087:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24098:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"24105:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24094:3:17"},"nodeType":"YulFunctionCall","src":"24094:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24087:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23909:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23919:3:17","type":""}],"src":"23880:233:17"},{"body":{"nodeType":"YulBlock","src":"24147:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24164:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24167:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24157:6:17"},"nodeType":"YulFunctionCall","src":"24157:88:17"},"nodeType":"YulExpressionStatement","src":"24157:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24261:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24264:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24254:6:17"},"nodeType":"YulFunctionCall","src":"24254:15:17"},"nodeType":"YulExpressionStatement","src":"24254:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24285:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24288:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24278:6:17"},"nodeType":"YulFunctionCall","src":"24278:15:17"},"nodeType":"YulExpressionStatement","src":"24278:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"24119:180:17"},{"body":{"nodeType":"YulBlock","src":"24356:269:17","statements":[{"nodeType":"YulAssignment","src":"24366:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24380:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"24386:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24376:3:17"},"nodeType":"YulFunctionCall","src":"24376:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"24366:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"24397:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24427:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"24433:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24423:3:17"},"nodeType":"YulFunctionCall","src":"24423:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"24401:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"24474:51:17","statements":[{"nodeType":"YulAssignment","src":"24488:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24502:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"24510:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24498:3:17"},"nodeType":"YulFunctionCall","src":"24498:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"24488:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"24454:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24447:6:17"},"nodeType":"YulFunctionCall","src":"24447:26:17"},"nodeType":"YulIf","src":"24444:81:17"},{"body":{"nodeType":"YulBlock","src":"24577:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"24591:16:17"},"nodeType":"YulFunctionCall","src":"24591:18:17"},"nodeType":"YulExpressionStatement","src":"24591:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"24541:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24564:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"24572:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24561:2:17"},"nodeType":"YulFunctionCall","src":"24561:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24538:2:17"},"nodeType":"YulFunctionCall","src":"24538:38:17"},"nodeType":"YulIf","src":"24535:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"24340:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"24349:6:17","type":""}],"src":"24305:320:17"},{"body":{"nodeType":"YulBlock","src":"24737:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24759:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"24767:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24755:3:17"},"nodeType":"YulFunctionCall","src":"24755:14:17"},{"hexValue":"496e76616c6964206f63636173696f6e204944","kind":"string","nodeType":"YulLiteral","src":"24771:21:17","type":"","value":"Invalid occasion ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24748:6:17"},"nodeType":"YulFunctionCall","src":"24748:45:17"},"nodeType":"YulExpressionStatement","src":"24748:45:17"}]},"name":"store_literal_in_memory_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24729:6:17","type":""}],"src":"24631:169:17"},{"body":{"nodeType":"YulBlock","src":"24952:220:17","statements":[{"nodeType":"YulAssignment","src":"24962:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25028:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"25033:2:17","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24969:58:17"},"nodeType":"YulFunctionCall","src":"24969:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24962:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25134:3:17"}],"functionName":{"name":"store_literal_in_memory_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330","nodeType":"YulIdentifier","src":"25045:88:17"},"nodeType":"YulFunctionCall","src":"25045:93:17"},"nodeType":"YulExpressionStatement","src":"25045:93:17"},{"nodeType":"YulAssignment","src":"25147:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25158:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"25163:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25154:3:17"},"nodeType":"YulFunctionCall","src":"25154:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25147:3:17"}]}]},"name":"abi_encode_t_stringliteral_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24940:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24948:3:17","type":""}],"src":"24806:366:17"},{"body":{"nodeType":"YulBlock","src":"25349:248:17","statements":[{"nodeType":"YulAssignment","src":"25359:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25371:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25382:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25367:3:17"},"nodeType":"YulFunctionCall","src":"25367:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25359:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25406:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25417:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25402:3:17"},"nodeType":"YulFunctionCall","src":"25402:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25425:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"25431:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25421:3:17"},"nodeType":"YulFunctionCall","src":"25421:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25395:6:17"},"nodeType":"YulFunctionCall","src":"25395:47:17"},"nodeType":"YulExpressionStatement","src":"25395:47:17"},{"nodeType":"YulAssignment","src":"25451:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25585:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25459:124:17"},"nodeType":"YulFunctionCall","src":"25459:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25451:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25329:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25344:4:17","type":""}],"src":"25178:419:17"},{"body":{"nodeType":"YulBlock","src":"25709:65:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25731:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"25739:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25727:3:17"},"nodeType":"YulFunctionCall","src":"25727:14:17"},{"hexValue":"496e73756666696369656e74204554482073656e74","kind":"string","nodeType":"YulLiteral","src":"25743:23:17","type":"","value":"Insufficient ETH sent"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25720:6:17"},"nodeType":"YulFunctionCall","src":"25720:47:17"},"nodeType":"YulExpressionStatement","src":"25720:47:17"}]},"name":"store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25701:6:17","type":""}],"src":"25603:171:17"},{"body":{"nodeType":"YulBlock","src":"25926:220:17","statements":[{"nodeType":"YulAssignment","src":"25936:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26002:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"26007:2:17","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25943:58:17"},"nodeType":"YulFunctionCall","src":"25943:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25936:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26108:3:17"}],"functionName":{"name":"store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404","nodeType":"YulIdentifier","src":"26019:88:17"},"nodeType":"YulFunctionCall","src":"26019:93:17"},"nodeType":"YulExpressionStatement","src":"26019:93:17"},{"nodeType":"YulAssignment","src":"26121:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26132:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"26137:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26128:3:17"},"nodeType":"YulFunctionCall","src":"26128:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26121:3:17"}]}]},"name":"abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25914:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25922:3:17","type":""}],"src":"25780:366:17"},{"body":{"nodeType":"YulBlock","src":"26323:248:17","statements":[{"nodeType":"YulAssignment","src":"26333:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26345:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26356:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26341:3:17"},"nodeType":"YulFunctionCall","src":"26341:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26333:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26380:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26391:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26376:3:17"},"nodeType":"YulFunctionCall","src":"26376:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26399:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"26405:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26395:3:17"},"nodeType":"YulFunctionCall","src":"26395:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26369:6:17"},"nodeType":"YulFunctionCall","src":"26369:47:17"},"nodeType":"YulExpressionStatement","src":"26369:47:17"},{"nodeType":"YulAssignment","src":"26425:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26559:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26433:124:17"},"nodeType":"YulFunctionCall","src":"26433:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26425:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26303:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26318:4:17","type":""}],"src":"26152:419:17"},{"body":{"nodeType":"YulBlock","src":"26683:62:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26705:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"26713:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26701:3:17"},"nodeType":"YulFunctionCall","src":"26701:14:17"},{"hexValue":"5365617420616c72656164792074616b656e","kind":"string","nodeType":"YulLiteral","src":"26717:20:17","type":"","value":"Seat already taken"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26694:6:17"},"nodeType":"YulFunctionCall","src":"26694:44:17"},"nodeType":"YulExpressionStatement","src":"26694:44:17"}]},"name":"store_literal_in_memory_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26675:6:17","type":""}],"src":"26577:168:17"},{"body":{"nodeType":"YulBlock","src":"26897:220:17","statements":[{"nodeType":"YulAssignment","src":"26907:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26973:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"26978:2:17","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26914:58:17"},"nodeType":"YulFunctionCall","src":"26914:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26907:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27079:3:17"}],"functionName":{"name":"store_literal_in_memory_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77","nodeType":"YulIdentifier","src":"26990:88:17"},"nodeType":"YulFunctionCall","src":"26990:93:17"},"nodeType":"YulExpressionStatement","src":"26990:93:17"},{"nodeType":"YulAssignment","src":"27092:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27103:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"27108:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27099:3:17"},"nodeType":"YulFunctionCall","src":"27099:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27092:3:17"}]}]},"name":"abi_encode_t_stringliteral_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26885:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26893:3:17","type":""}],"src":"26751:366:17"},{"body":{"nodeType":"YulBlock","src":"27294:248:17","statements":[{"nodeType":"YulAssignment","src":"27304:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27316:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27327:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27312:3:17"},"nodeType":"YulFunctionCall","src":"27312:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27304:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27351:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"27362:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27347:3:17"},"nodeType":"YulFunctionCall","src":"27347:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27370:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"27376:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27366:3:17"},"nodeType":"YulFunctionCall","src":"27366:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27340:6:17"},"nodeType":"YulFunctionCall","src":"27340:47:17"},"nodeType":"YulExpressionStatement","src":"27340:47:17"},{"nodeType":"YulAssignment","src":"27396:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27530:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27404:124:17"},"nodeType":"YulFunctionCall","src":"27404:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27396:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27274:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27289:4:17","type":""}],"src":"27123:419:17"},{"body":{"nodeType":"YulBlock","src":"27654:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27676:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"27684:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27672:3:17"},"nodeType":"YulFunctionCall","src":"27672:14:17"},{"hexValue":"496e76616c69642073656174206e756d626572","kind":"string","nodeType":"YulLiteral","src":"27688:21:17","type":"","value":"Invalid seat number"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27665:6:17"},"nodeType":"YulFunctionCall","src":"27665:45:17"},"nodeType":"YulExpressionStatement","src":"27665:45:17"}]},"name":"store_literal_in_memory_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27646:6:17","type":""}],"src":"27548:169:17"},{"body":{"nodeType":"YulBlock","src":"27869:220:17","statements":[{"nodeType":"YulAssignment","src":"27879:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27945:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"27950:2:17","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27886:58:17"},"nodeType":"YulFunctionCall","src":"27886:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27879:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28051:3:17"}],"functionName":{"name":"store_literal_in_memory_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6","nodeType":"YulIdentifier","src":"27962:88:17"},"nodeType":"YulFunctionCall","src":"27962:93:17"},"nodeType":"YulExpressionStatement","src":"27962:93:17"},{"nodeType":"YulAssignment","src":"28064:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28075:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"28080:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28071:3:17"},"nodeType":"YulFunctionCall","src":"28071:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28064:3:17"}]}]},"name":"abi_encode_t_stringliteral_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27857:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27865:3:17","type":""}],"src":"27723:366:17"},{"body":{"nodeType":"YulBlock","src":"28266:248:17","statements":[{"nodeType":"YulAssignment","src":"28276:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28288:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28299:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28284:3:17"},"nodeType":"YulFunctionCall","src":"28284:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28276:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28323:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28334:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28319:3:17"},"nodeType":"YulFunctionCall","src":"28319:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28342:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"28348:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28338:3:17"},"nodeType":"YulFunctionCall","src":"28338:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28312:6:17"},"nodeType":"YulFunctionCall","src":"28312:47:17"},"nodeType":"YulExpressionStatement","src":"28312:47:17"},{"nodeType":"YulAssignment","src":"28368:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28502:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28376:124:17"},"nodeType":"YulFunctionCall","src":"28376:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28368:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28246:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28261:4:17","type":""}],"src":"28095:419:17"},{"body":{"nodeType":"YulBlock","src":"28563:128:17","statements":[{"nodeType":"YulAssignment","src":"28573:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28600:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28582:17:17"},"nodeType":"YulFunctionCall","src":"28582:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28573:5:17"}]},{"body":{"nodeType":"YulBlock","src":"28634:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28636:16:17"},"nodeType":"YulFunctionCall","src":"28636:18:17"},"nodeType":"YulExpressionStatement","src":"28636:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28621:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"28628:4:17","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28618:2:17"},"nodeType":"YulFunctionCall","src":"28618:15:17"},"nodeType":"YulIf","src":"28615:41:17"},{"nodeType":"YulAssignment","src":"28665:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28676:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"28683:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28672:3:17"},"nodeType":"YulFunctionCall","src":"28672:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"28665:3:17"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28549:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"28559:3:17","type":""}],"src":"28520:171:17"},{"body":{"nodeType":"YulBlock","src":"28851:288:17","statements":[{"nodeType":"YulAssignment","src":"28861:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28873:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28884:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28869:3:17"},"nodeType":"YulFunctionCall","src":"28869:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28861:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28941:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28954:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28965:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28950:3:17"},"nodeType":"YulFunctionCall","src":"28950:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28897:43:17"},"nodeType":"YulFunctionCall","src":"28897:71:17"},"nodeType":"YulExpressionStatement","src":"28897:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29022:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29035:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29046:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29031:3:17"},"nodeType":"YulFunctionCall","src":"29031:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28978:43:17"},"nodeType":"YulFunctionCall","src":"28978:72:17"},"nodeType":"YulExpressionStatement","src":"28978:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"29104:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29117:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29128:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29113:3:17"},"nodeType":"YulFunctionCall","src":"29113:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"29060:43:17"},"nodeType":"YulFunctionCall","src":"29060:72:17"},"nodeType":"YulExpressionStatement","src":"29060:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28807:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28819:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28827:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28835:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28846:4:17","type":""}],"src":"28697:442:17"},{"body":{"nodeType":"YulBlock","src":"29251:71:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29273:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"29281:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29269:3:17"},"nodeType":"YulFunctionCall","src":"29269:14:17"},{"hexValue":"4e6f7420746865206f776e6572206f6620746865207469636b6574","kind":"string","nodeType":"YulLiteral","src":"29285:29:17","type":"","value":"Not the owner of the ticket"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29262:6:17"},"nodeType":"YulFunctionCall","src":"29262:53:17"},"nodeType":"YulExpressionStatement","src":"29262:53:17"}]},"name":"store_literal_in_memory_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29243:6:17","type":""}],"src":"29145:177:17"},{"body":{"nodeType":"YulBlock","src":"29474:220:17","statements":[{"nodeType":"YulAssignment","src":"29484:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29550:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"29555:2:17","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29491:58:17"},"nodeType":"YulFunctionCall","src":"29491:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29484:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29656:3:17"}],"functionName":{"name":"store_literal_in_memory_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f","nodeType":"YulIdentifier","src":"29567:88:17"},"nodeType":"YulFunctionCall","src":"29567:93:17"},"nodeType":"YulExpressionStatement","src":"29567:93:17"},{"nodeType":"YulAssignment","src":"29669:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29680:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"29685:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29676:3:17"},"nodeType":"YulFunctionCall","src":"29676:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29669:3:17"}]}]},"name":"abi_encode_t_stringliteral_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29462:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29470:3:17","type":""}],"src":"29328:366:17"},{"body":{"nodeType":"YulBlock","src":"29871:248:17","statements":[{"nodeType":"YulAssignment","src":"29881:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29893:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29904:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29889:3:17"},"nodeType":"YulFunctionCall","src":"29889:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29881:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29928:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29939:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29924:3:17"},"nodeType":"YulFunctionCall","src":"29924:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29947:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"29953:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29943:3:17"},"nodeType":"YulFunctionCall","src":"29943:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29917:6:17"},"nodeType":"YulFunctionCall","src":"29917:47:17"},"nodeType":"YulExpressionStatement","src":"29917:47:17"},{"nodeType":"YulAssignment","src":"29973:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30107:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29981:124:17"},"nodeType":"YulFunctionCall","src":"29981:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29973:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29851:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29866:4:17","type":""}],"src":"29700:419:17"},{"body":{"nodeType":"YulBlock","src":"30231:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30253:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"30261:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30249:3:17"},"nodeType":"YulFunctionCall","src":"30249:14:17"},{"hexValue":"5469636b657420616c72656164792075736564","kind":"string","nodeType":"YulLiteral","src":"30265:21:17","type":"","value":"Ticket already used"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30242:6:17"},"nodeType":"YulFunctionCall","src":"30242:45:17"},"nodeType":"YulExpressionStatement","src":"30242:45:17"}]},"name":"store_literal_in_memory_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30223:6:17","type":""}],"src":"30125:169:17"},{"body":{"nodeType":"YulBlock","src":"30446:220:17","statements":[{"nodeType":"YulAssignment","src":"30456:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30522:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"30527:2:17","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30463:58:17"},"nodeType":"YulFunctionCall","src":"30463:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30456:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30628:3:17"}],"functionName":{"name":"store_literal_in_memory_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10","nodeType":"YulIdentifier","src":"30539:88:17"},"nodeType":"YulFunctionCall","src":"30539:93:17"},"nodeType":"YulExpressionStatement","src":"30539:93:17"},{"nodeType":"YulAssignment","src":"30641:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30652:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"30657:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30648:3:17"},"nodeType":"YulFunctionCall","src":"30648:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30641:3:17"}]}]},"name":"abi_encode_t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30434:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30442:3:17","type":""}],"src":"30300:366:17"},{"body":{"nodeType":"YulBlock","src":"30843:248:17","statements":[{"nodeType":"YulAssignment","src":"30853:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30865:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30876:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30861:3:17"},"nodeType":"YulFunctionCall","src":"30861:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30853:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30900:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"30911:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30896:3:17"},"nodeType":"YulFunctionCall","src":"30896:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30919:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"30925:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30915:3:17"},"nodeType":"YulFunctionCall","src":"30915:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30889:6:17"},"nodeType":"YulFunctionCall","src":"30889:47:17"},"nodeType":"YulExpressionStatement","src":"30889:47:17"},{"nodeType":"YulAssignment","src":"30945:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31079:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30953:124:17"},"nodeType":"YulFunctionCall","src":"30953:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30945:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30823:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30838:4:17","type":""}],"src":"30672:419:17"},{"body":{"nodeType":"YulBlock","src":"31203:60:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31225:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"31233:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31221:3:17"},"nodeType":"YulFunctionCall","src":"31221:14:17"},{"hexValue":"496e76616c6964206576656e74204944","kind":"string","nodeType":"YulLiteral","src":"31237:18:17","type":"","value":"Invalid event ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31214:6:17"},"nodeType":"YulFunctionCall","src":"31214:42:17"},"nodeType":"YulExpressionStatement","src":"31214:42:17"}]},"name":"store_literal_in_memory_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31195:6:17","type":""}],"src":"31097:166:17"},{"body":{"nodeType":"YulBlock","src":"31415:220:17","statements":[{"nodeType":"YulAssignment","src":"31425:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31491:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"31496:2:17","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31432:58:17"},"nodeType":"YulFunctionCall","src":"31432:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31425:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31597:3:17"}],"functionName":{"name":"store_literal_in_memory_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73","nodeType":"YulIdentifier","src":"31508:88:17"},"nodeType":"YulFunctionCall","src":"31508:93:17"},"nodeType":"YulExpressionStatement","src":"31508:93:17"},{"nodeType":"YulAssignment","src":"31610:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31621:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"31626:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31617:3:17"},"nodeType":"YulFunctionCall","src":"31617:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31610:3:17"}]}]},"name":"abi_encode_t_stringliteral_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31403:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31411:3:17","type":""}],"src":"31269:366:17"},{"body":{"nodeType":"YulBlock","src":"31812:248:17","statements":[{"nodeType":"YulAssignment","src":"31822:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31834:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31845:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31830:3:17"},"nodeType":"YulFunctionCall","src":"31830:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31822:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31869:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"31880:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31865:3:17"},"nodeType":"YulFunctionCall","src":"31865:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31888:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"31894:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31884:3:17"},"nodeType":"YulFunctionCall","src":"31884:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31858:6:17"},"nodeType":"YulFunctionCall","src":"31858:47:17"},"nodeType":"YulExpressionStatement","src":"31858:47:17"},{"nodeType":"YulAssignment","src":"31914:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32048:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31922:124:17"},"nodeType":"YulFunctionCall","src":"31922:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31914:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31792:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31807:4:17","type":""}],"src":"31641:419:17"},{"body":{"nodeType":"YulBlock","src":"32172:61:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32194:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"32202:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32190:3:17"},"nodeType":"YulFunctionCall","src":"32190:14:17"},{"hexValue":"53656174206e6f74206f63637570696564","kind":"string","nodeType":"YulLiteral","src":"32206:19:17","type":"","value":"Seat not occupied"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32183:6:17"},"nodeType":"YulFunctionCall","src":"32183:43:17"},"nodeType":"YulExpressionStatement","src":"32183:43:17"}]},"name":"store_literal_in_memory_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32164:6:17","type":""}],"src":"32066:167:17"},{"body":{"nodeType":"YulBlock","src":"32385:220:17","statements":[{"nodeType":"YulAssignment","src":"32395:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32461:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"32466:2:17","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32402:58:17"},"nodeType":"YulFunctionCall","src":"32402:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32395:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32567:3:17"}],"functionName":{"name":"store_literal_in_memory_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702","nodeType":"YulIdentifier","src":"32478:88:17"},"nodeType":"YulFunctionCall","src":"32478:93:17"},"nodeType":"YulExpressionStatement","src":"32478:93:17"},{"nodeType":"YulAssignment","src":"32580:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32591:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"32596:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32587:3:17"},"nodeType":"YulFunctionCall","src":"32587:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32580:3:17"}]}]},"name":"abi_encode_t_stringliteral_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32373:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32381:3:17","type":""}],"src":"32239:366:17"},{"body":{"nodeType":"YulBlock","src":"32782:248:17","statements":[{"nodeType":"YulAssignment","src":"32792:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32804:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32815:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32800:3:17"},"nodeType":"YulFunctionCall","src":"32800:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32792:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32839:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32850:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32835:3:17"},"nodeType":"YulFunctionCall","src":"32835:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32858:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"32864:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32854:3:17"},"nodeType":"YulFunctionCall","src":"32854:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32828:6:17"},"nodeType":"YulFunctionCall","src":"32828:47:17"},"nodeType":"YulExpressionStatement","src":"32828:47:17"},{"nodeType":"YulAssignment","src":"32884:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33018:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32892:124:17"},"nodeType":"YulFunctionCall","src":"32892:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32884:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32762:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32777:4:17","type":""}],"src":"32611:419:17"},{"body":{"nodeType":"YulBlock","src":"33142:62:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33164:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"33172:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33160:3:17"},"nodeType":"YulFunctionCall","src":"33160:14:17"},{"hexValue":"526573616c65206e6f7420616c6c6f776564","kind":"string","nodeType":"YulLiteral","src":"33176:20:17","type":"","value":"Resale not allowed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33153:6:17"},"nodeType":"YulFunctionCall","src":"33153:44:17"},"nodeType":"YulExpressionStatement","src":"33153:44:17"}]},"name":"store_literal_in_memory_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33134:6:17","type":""}],"src":"33036:168:17"},{"body":{"nodeType":"YulBlock","src":"33356:220:17","statements":[{"nodeType":"YulAssignment","src":"33366:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33432:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"33437:2:17","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33373:58:17"},"nodeType":"YulFunctionCall","src":"33373:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33366:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33538:3:17"}],"functionName":{"name":"store_literal_in_memory_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3","nodeType":"YulIdentifier","src":"33449:88:17"},"nodeType":"YulFunctionCall","src":"33449:93:17"},"nodeType":"YulExpressionStatement","src":"33449:93:17"},{"nodeType":"YulAssignment","src":"33551:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33562:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"33567:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33558:3:17"},"nodeType":"YulFunctionCall","src":"33558:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33551:3:17"}]}]},"name":"abi_encode_t_stringliteral_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33344:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33352:3:17","type":""}],"src":"33210:366:17"},{"body":{"nodeType":"YulBlock","src":"33753:248:17","statements":[{"nodeType":"YulAssignment","src":"33763:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33775:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33786:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33771:3:17"},"nodeType":"YulFunctionCall","src":"33771:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33763:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33810:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"33821:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33806:3:17"},"nodeType":"YulFunctionCall","src":"33806:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33829:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"33835:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33825:3:17"},"nodeType":"YulFunctionCall","src":"33825:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33799:6:17"},"nodeType":"YulFunctionCall","src":"33799:47:17"},"nodeType":"YulExpressionStatement","src":"33799:47:17"},{"nodeType":"YulAssignment","src":"33855:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33989:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33863:124:17"},"nodeType":"YulFunctionCall","src":"33863:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33855:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33733:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33748:4:17","type":""}],"src":"33582:419:17"},{"body":{"nodeType":"YulBlock","src":"34113:58:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34135:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"34143:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34131:3:17"},"nodeType":"YulFunctionCall","src":"34131:14:17"},{"hexValue":"496e76616c6964207469636b6574","kind":"string","nodeType":"YulLiteral","src":"34147:16:17","type":"","value":"Invalid ticket"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34124:6:17"},"nodeType":"YulFunctionCall","src":"34124:40:17"},"nodeType":"YulExpressionStatement","src":"34124:40:17"}]},"name":"store_literal_in_memory_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34105:6:17","type":""}],"src":"34007:164:17"},{"body":{"nodeType":"YulBlock","src":"34323:220:17","statements":[{"nodeType":"YulAssignment","src":"34333:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34399:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"34404:2:17","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34340:58:17"},"nodeType":"YulFunctionCall","src":"34340:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34333:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34505:3:17"}],"functionName":{"name":"store_literal_in_memory_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d","nodeType":"YulIdentifier","src":"34416:88:17"},"nodeType":"YulFunctionCall","src":"34416:93:17"},"nodeType":"YulExpressionStatement","src":"34416:93:17"},{"nodeType":"YulAssignment","src":"34518:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34529:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"34534:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34525:3:17"},"nodeType":"YulFunctionCall","src":"34525:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34518:3:17"}]}]},"name":"abi_encode_t_stringliteral_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34311:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34319:3:17","type":""}],"src":"34177:366:17"},{"body":{"nodeType":"YulBlock","src":"34720:248:17","statements":[{"nodeType":"YulAssignment","src":"34730:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34742:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34753:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34738:3:17"},"nodeType":"YulFunctionCall","src":"34738:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34730:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34777:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"34788:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34773:3:17"},"nodeType":"YulFunctionCall","src":"34773:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34796:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"34802:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34792:3:17"},"nodeType":"YulFunctionCall","src":"34792:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34766:6:17"},"nodeType":"YulFunctionCall","src":"34766:47:17"},"nodeType":"YulExpressionStatement","src":"34766:47:17"},{"nodeType":"YulAssignment","src":"34822:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34956:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34830:124:17"},"nodeType":"YulFunctionCall","src":"34830:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34822:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34700:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34715:4:17","type":""}],"src":"34549:419:17"},{"body":{"nodeType":"YulBlock","src":"35080:70:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35102:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"35110:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35098:3:17"},"nodeType":"YulFunctionCall","src":"35098:14:17"},{"hexValue":"43616e6e6f742062757920796f7572206f776e207469636b6574","kind":"string","nodeType":"YulLiteral","src":"35114:28:17","type":"","value":"Cannot buy your own ticket"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35091:6:17"},"nodeType":"YulFunctionCall","src":"35091:52:17"},"nodeType":"YulExpressionStatement","src":"35091:52:17"}]},"name":"store_literal_in_memory_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35072:6:17","type":""}],"src":"34974:176:17"},{"body":{"nodeType":"YulBlock","src":"35302:220:17","statements":[{"nodeType":"YulAssignment","src":"35312:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35378:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"35383:2:17","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35319:58:17"},"nodeType":"YulFunctionCall","src":"35319:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35312:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35484:3:17"}],"functionName":{"name":"store_literal_in_memory_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95","nodeType":"YulIdentifier","src":"35395:88:17"},"nodeType":"YulFunctionCall","src":"35395:93:17"},"nodeType":"YulExpressionStatement","src":"35395:93:17"},{"nodeType":"YulAssignment","src":"35497:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35508:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"35513:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35504:3:17"},"nodeType":"YulFunctionCall","src":"35504:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35497:3:17"}]}]},"name":"abi_encode_t_stringliteral_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35290:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35298:3:17","type":""}],"src":"35156:366:17"},{"body":{"nodeType":"YulBlock","src":"35699:248:17","statements":[{"nodeType":"YulAssignment","src":"35709:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35721:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35732:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35717:3:17"},"nodeType":"YulFunctionCall","src":"35717:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35709:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35756:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"35767:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35752:3:17"},"nodeType":"YulFunctionCall","src":"35752:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35775:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"35781:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35771:3:17"},"nodeType":"YulFunctionCall","src":"35771:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35745:6:17"},"nodeType":"YulFunctionCall","src":"35745:47:17"},"nodeType":"YulExpressionStatement","src":"35745:47:17"},{"nodeType":"YulAssignment","src":"35801:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35935:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35809:124:17"},"nodeType":"YulFunctionCall","src":"35809:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35801:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35679:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35694:4:17","type":""}],"src":"35528:419:17"},{"body":{"nodeType":"YulBlock","src":"36059:68:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36081:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"36089:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36077:3:17"},"nodeType":"YulFunctionCall","src":"36077:14:17"},{"hexValue":"496e636f7272656374207061796d656e7420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"36093:26:17","type":"","value":"Incorrect payment amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36070:6:17"},"nodeType":"YulFunctionCall","src":"36070:50:17"},"nodeType":"YulExpressionStatement","src":"36070:50:17"}]},"name":"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36051:6:17","type":""}],"src":"35953:174:17"},{"body":{"nodeType":"YulBlock","src":"36279:220:17","statements":[{"nodeType":"YulAssignment","src":"36289:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36355:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"36360:2:17","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36296:58:17"},"nodeType":"YulFunctionCall","src":"36296:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36289:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36461:3:17"}],"functionName":{"name":"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","nodeType":"YulIdentifier","src":"36372:88:17"},"nodeType":"YulFunctionCall","src":"36372:93:17"},"nodeType":"YulExpressionStatement","src":"36372:93:17"},{"nodeType":"YulAssignment","src":"36474:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36485:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"36490:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36481:3:17"},"nodeType":"YulFunctionCall","src":"36481:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36474:3:17"}]}]},"name":"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36267:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36275:3:17","type":""}],"src":"36133:366:17"},{"body":{"nodeType":"YulBlock","src":"36676:248:17","statements":[{"nodeType":"YulAssignment","src":"36686:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36698:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"36709:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36694:3:17"},"nodeType":"YulFunctionCall","src":"36694:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36686:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36733:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"36744:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36729:3:17"},"nodeType":"YulFunctionCall","src":"36729:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36752:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"36758:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36748:3:17"},"nodeType":"YulFunctionCall","src":"36748:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36722:6:17"},"nodeType":"YulFunctionCall","src":"36722:47:17"},"nodeType":"YulExpressionStatement","src":"36722:47:17"},{"nodeType":"YulAssignment","src":"36778:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36912:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36786:124:17"},"nodeType":"YulFunctionCall","src":"36786:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36778:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36656:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36671:4:17","type":""}],"src":"36505:419:17"},{"body":{"nodeType":"YulBlock","src":"37043:34:17","statements":[{"nodeType":"YulAssignment","src":"37053:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"37068:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"37053:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37015:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"37020:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"37031:11:17","type":""}],"src":"36930:147:17"},{"body":{"nodeType":"YulBlock","src":"37189:8:17","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37181:6:17","type":""}],"src":"37083:114:17"},{"body":{"nodeType":"YulBlock","src":"37366:235:17","statements":[{"nodeType":"YulAssignment","src":"37376:90:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37459:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"37464:1:17","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37383:75:17"},"nodeType":"YulFunctionCall","src":"37383:83:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37376:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37564:3:17"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"37475:88:17"},"nodeType":"YulFunctionCall","src":"37475:93:17"},"nodeType":"YulExpressionStatement","src":"37475:93:17"},{"nodeType":"YulAssignment","src":"37577:18:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37588:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"37593:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37584:3:17"},"nodeType":"YulFunctionCall","src":"37584:11:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37577:3:17"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37354:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37362:3:17","type":""}],"src":"37203:398:17"},{"body":{"nodeType":"YulBlock","src":"37795:191:17","statements":[{"nodeType":"YulAssignment","src":"37806:154:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37956:3:17"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37813:141:17"},"nodeType":"YulFunctionCall","src":"37813:147:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37806:3:17"}]},{"nodeType":"YulAssignment","src":"37970:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"37977:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37970:3:17"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37782:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37791:3:17","type":""}],"src":"37607:379:17"},{"body":{"nodeType":"YulBlock","src":"38098:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38120:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"38128:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38116:3:17"},"nodeType":"YulFunctionCall","src":"38116:14:17"},{"hexValue":"5061796d656e74207472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"38132:25:17","type":"","value":"Payment transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38109:6:17"},"nodeType":"YulFunctionCall","src":"38109:49:17"},"nodeType":"YulExpressionStatement","src":"38109:49:17"}]},"name":"store_literal_in_memory_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38090:6:17","type":""}],"src":"37992:173:17"},{"body":{"nodeType":"YulBlock","src":"38317:220:17","statements":[{"nodeType":"YulAssignment","src":"38327:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38393:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"38398:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38334:58:17"},"nodeType":"YulFunctionCall","src":"38334:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38327:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38499:3:17"}],"functionName":{"name":"store_literal_in_memory_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","nodeType":"YulIdentifier","src":"38410:88:17"},"nodeType":"YulFunctionCall","src":"38410:93:17"},"nodeType":"YulExpressionStatement","src":"38410:93:17"},{"nodeType":"YulAssignment","src":"38512:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38523:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"38528:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38519:3:17"},"nodeType":"YulFunctionCall","src":"38519:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38512:3:17"}]}]},"name":"abi_encode_t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38305:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38313:3:17","type":""}],"src":"38171:366:17"},{"body":{"nodeType":"YulBlock","src":"38714:248:17","statements":[{"nodeType":"YulAssignment","src":"38724:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38736:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"38747:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38732:3:17"},"nodeType":"YulFunctionCall","src":"38732:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38724:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38771:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"38782:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38767:3:17"},"nodeType":"YulFunctionCall","src":"38767:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38790:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"38796:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38786:3:17"},"nodeType":"YulFunctionCall","src":"38786:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38760:6:17"},"nodeType":"YulFunctionCall","src":"38760:47:17"},"nodeType":"YulExpressionStatement","src":"38760:47:17"},{"nodeType":"YulAssignment","src":"38816:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38950:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38824:124:17"},"nodeType":"YulFunctionCall","src":"38824:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38816:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38694:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38709:4:17","type":""}],"src":"38543:419:17"},{"body":{"nodeType":"YulBlock","src":"39074:116:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39096:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"39104:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39092:3:17"},"nodeType":"YulFunctionCall","src":"39092:14:17"},{"hexValue":"4f6e6c79206576656e742063726561746f722063616e20736574205652207669","kind":"string","nodeType":"YulLiteral","src":"39108:34:17","type":"","value":"Only event creator can set VR vi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39085:6:17"},"nodeType":"YulFunctionCall","src":"39085:58:17"},"nodeType":"YulExpressionStatement","src":"39085:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39164:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"39172:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39160:3:17"},"nodeType":"YulFunctionCall","src":"39160:15:17"},{"hexValue":"64656f","kind":"string","nodeType":"YulLiteral","src":"39177:5:17","type":"","value":"deo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39153:6:17"},"nodeType":"YulFunctionCall","src":"39153:30:17"},"nodeType":"YulExpressionStatement","src":"39153:30:17"}]},"name":"store_literal_in_memory_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39066:6:17","type":""}],"src":"38968:222:17"},{"body":{"nodeType":"YulBlock","src":"39342:220:17","statements":[{"nodeType":"YulAssignment","src":"39352:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39418:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"39423:2:17","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39359:58:17"},"nodeType":"YulFunctionCall","src":"39359:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39352:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39524:3:17"}],"functionName":{"name":"store_literal_in_memory_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d","nodeType":"YulIdentifier","src":"39435:88:17"},"nodeType":"YulFunctionCall","src":"39435:93:17"},"nodeType":"YulExpressionStatement","src":"39435:93:17"},{"nodeType":"YulAssignment","src":"39537:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39548:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"39553:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39544:3:17"},"nodeType":"YulFunctionCall","src":"39544:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39537:3:17"}]}]},"name":"abi_encode_t_stringliteral_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39330:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39338:3:17","type":""}],"src":"39196:366:17"},{"body":{"nodeType":"YulBlock","src":"39739:248:17","statements":[{"nodeType":"YulAssignment","src":"39749:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39761:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"39772:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39757:3:17"},"nodeType":"YulFunctionCall","src":"39757:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39749:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39796:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"39807:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39792:3:17"},"nodeType":"YulFunctionCall","src":"39792:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39815:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"39821:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39811:3:17"},"nodeType":"YulFunctionCall","src":"39811:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39785:6:17"},"nodeType":"YulFunctionCall","src":"39785:47:17"},"nodeType":"YulExpressionStatement","src":"39785:47:17"},{"nodeType":"YulAssignment","src":"39841:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39975:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39849:124:17"},"nodeType":"YulFunctionCall","src":"39849:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39841:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39719:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39734:4:17","type":""}],"src":"39568:419:17"},{"body":{"nodeType":"YulBlock","src":"40047:87:17","statements":[{"nodeType":"YulAssignment","src":"40057:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"40065:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"40057:4:17"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40085:1:17","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"40088:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40078:6:17"},"nodeType":"YulFunctionCall","src":"40078:14:17"},"nodeType":"YulExpressionStatement","src":"40078:14:17"},{"nodeType":"YulAssignment","src":"40101:26:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40119:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40122:4:17","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"40109:9:17"},"nodeType":"YulFunctionCall","src":"40109:18:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"40101:4:17"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"40034:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"40042:4:17","type":""}],"src":"39993:141:17"},{"body":{"nodeType":"YulBlock","src":"40184:49:17","statements":[{"nodeType":"YulAssignment","src":"40194:33:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40212:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"40219:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40208:3:17"},"nodeType":"YulFunctionCall","src":"40208:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"40224:2:17","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"40204:3:17"},"nodeType":"YulFunctionCall","src":"40204:23:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"40194:6:17"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40167:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"40177:6:17","type":""}],"src":"40140:93:17"},{"body":{"nodeType":"YulBlock","src":"40292:54:17","statements":[{"nodeType":"YulAssignment","src":"40302:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"40327:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"40333:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"40323:3:17"},"nodeType":"YulFunctionCall","src":"40323:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"40302:8:17"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"40267:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"40273:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"40283:8:17","type":""}],"src":"40239:107:17"},{"body":{"nodeType":"YulBlock","src":"40428:317:17","statements":[{"nodeType":"YulVariableDeclaration","src":"40438:35:17","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"40459:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"40471:1:17","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"40455:3:17"},"nodeType":"YulFunctionCall","src":"40455:18:17"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"40442:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"40482:109:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"40513:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"40524:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"40494:18:17"},"nodeType":"YulFunctionCall","src":"40494:97:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"40486:4:17","type":""}]},{"nodeType":"YulAssignment","src":"40600:51:17","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"40631:9:17"},{"name":"toInsert","nodeType":"YulIdentifier","src":"40642:8:17"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"40612:18:17"},"nodeType":"YulFunctionCall","src":"40612:39:17"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"40600:8:17"}]},{"nodeType":"YulAssignment","src":"40660:30:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40673:5:17"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"40684:4:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"40680:3:17"},"nodeType":"YulFunctionCall","src":"40680:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40669:3:17"},"nodeType":"YulFunctionCall","src":"40669:21:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"40660:5:17"}]},{"nodeType":"YulAssignment","src":"40699:40:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40712:5:17"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"40723:8:17"},{"name":"mask","nodeType":"YulIdentifier","src":"40733:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40719:3:17"},"nodeType":"YulFunctionCall","src":"40719:19:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"40709:2:17"},"nodeType":"YulFunctionCall","src":"40709:30:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"40699:6:17"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40389:5:17","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"40396:10:17","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"40408:8:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"40421:6:17","type":""}],"src":"40352:393:17"},{"body":{"nodeType":"YulBlock","src":"40783:28:17","statements":[{"nodeType":"YulAssignment","src":"40793:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"40800:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"40793:3:17"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40769:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"40779:3:17","type":""}],"src":"40751:60:17"},{"body":{"nodeType":"YulBlock","src":"40877:82:17","statements":[{"nodeType":"YulAssignment","src":"40887:66:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40945:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40927:17:17"},"nodeType":"YulFunctionCall","src":"40927:24:17"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"40918:8:17"},"nodeType":"YulFunctionCall","src":"40918:34:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40900:17:17"},"nodeType":"YulFunctionCall","src":"40900:53:17"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"40887:9:17"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40857:5:17","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"40867:9:17","type":""}],"src":"40817:142:17"},{"body":{"nodeType":"YulBlock","src":"41012:28:17","statements":[{"nodeType":"YulAssignment","src":"41022:12:17","value":{"name":"value","nodeType":"YulIdentifier","src":"41029:5:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"41022:3:17"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40998:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"41008:3:17","type":""}],"src":"40965:75:17"},{"body":{"nodeType":"YulBlock","src":"41122:193:17","statements":[{"nodeType":"YulVariableDeclaration","src":"41132:63:17","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"41187:7:17"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"41156:30:17"},"nodeType":"YulFunctionCall","src":"41156:39:17"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"41136:16:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"41211:4:17"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"41251:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"41245:5:17"},"nodeType":"YulFunctionCall","src":"41245:11:17"},{"name":"offset","nodeType":"YulIdentifier","src":"41258:6:17"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"41290:16:17"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"41266:23:17"},"nodeType":"YulFunctionCall","src":"41266:41:17"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"41217:27:17"},"nodeType":"YulFunctionCall","src":"41217:91:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"41204:6:17"},"nodeType":"YulFunctionCall","src":"41204:105:17"},"nodeType":"YulExpressionStatement","src":"41204:105:17"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"41099:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"41105:6:17","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"41113:7:17","type":""}],"src":"41046:269:17"},{"body":{"nodeType":"YulBlock","src":"41370:24:17","statements":[{"nodeType":"YulAssignment","src":"41380:8:17","value":{"kind":"number","nodeType":"YulLiteral","src":"41387:1:17","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"41380:3:17"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"41366:3:17","type":""}],"src":"41321:73:17"},{"body":{"nodeType":"YulBlock","src":"41453:136:17","statements":[{"nodeType":"YulVariableDeclaration","src":"41463:46:17","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"41477:30:17"},"nodeType":"YulFunctionCall","src":"41477:32:17"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"41467:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"41562:4:17"},{"name":"offset","nodeType":"YulIdentifier","src":"41568:6:17"},{"name":"zero_0","nodeType":"YulIdentifier","src":"41576:6:17"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"41518:43:17"},"nodeType":"YulFunctionCall","src":"41518:65:17"},"nodeType":"YulExpressionStatement","src":"41518:65:17"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"41439:4:17","type":""},{"name":"offset","nodeType":"YulTypedName","src":"41445:6:17","type":""}],"src":"41400:189:17"},{"body":{"nodeType":"YulBlock","src":"41645:136:17","statements":[{"body":{"nodeType":"YulBlock","src":"41712:63:17","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"41756:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"41763:1:17","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"41726:29:17"},"nodeType":"YulFunctionCall","src":"41726:39:17"},"nodeType":"YulExpressionStatement","src":"41726:39:17"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"41665:5:17"},{"name":"end","nodeType":"YulIdentifier","src":"41672:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"41662:2:17"},"nodeType":"YulFunctionCall","src":"41662:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"41677:26:17","statements":[{"nodeType":"YulAssignment","src":"41679:22:17","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"41692:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"41699:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41688:3:17"},"nodeType":"YulFunctionCall","src":"41688:13:17"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"41679:5:17"}]}]},"pre":{"nodeType":"YulBlock","src":"41659:2:17","statements":[]},"src":"41655:120:17"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"41633:5:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"41640:3:17","type":""}],"src":"41595:186:17"},{"body":{"nodeType":"YulBlock","src":"41866:464:17","statements":[{"body":{"nodeType":"YulBlock","src":"41892:431:17","statements":[{"nodeType":"YulVariableDeclaration","src":"41906:54:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"41954:5:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"41922:31:17"},"nodeType":"YulFunctionCall","src":"41922:38:17"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"41910:8:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"41973:63:17","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"41996:8:17"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"42024:10:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"42006:17:17"},"nodeType":"YulFunctionCall","src":"42006:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41992:3:17"},"nodeType":"YulFunctionCall","src":"41992:44:17"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"41977:11:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"42193:27:17","statements":[{"nodeType":"YulAssignment","src":"42195:23:17","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"42210:8:17"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"42195:11:17"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"42177:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"42189:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"42174:2:17"},"nodeType":"YulFunctionCall","src":"42174:18:17"},"nodeType":"YulIf","src":"42171:49:17"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"42262:11:17"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"42279:8:17"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"42307:3:17"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"42289:17:17"},"nodeType":"YulFunctionCall","src":"42289:22:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42275:3:17"},"nodeType":"YulFunctionCall","src":"42275:37:17"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"42233:28:17"},"nodeType":"YulFunctionCall","src":"42233:80:17"},"nodeType":"YulExpressionStatement","src":"42233:80:17"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"41883:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"41888:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"41880:2:17"},"nodeType":"YulFunctionCall","src":"41880:11:17"},"nodeType":"YulIf","src":"41877:446:17"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"41842:5:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"41849:3:17","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"41854:10:17","type":""}],"src":"41787:543:17"},{"body":{"nodeType":"YulBlock","src":"42399:54:17","statements":[{"nodeType":"YulAssignment","src":"42409:37:17","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"42434:4:17"},{"name":"value","nodeType":"YulIdentifier","src":"42440:5:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"42430:3:17"},"nodeType":"YulFunctionCall","src":"42430:16:17"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"42409:8:17"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"42374:4:17","type":""},{"name":"value","nodeType":"YulTypedName","src":"42380:5:17","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"42390:8:17","type":""}],"src":"42336:117:17"},{"body":{"nodeType":"YulBlock","src":"42510:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"42520:68:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42569:1:17","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"42572:5:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"42565:3:17"},"nodeType":"YulFunctionCall","src":"42565:13:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42584:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"42580:3:17"},"nodeType":"YulFunctionCall","src":"42580:6:17"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"42536:28:17"},"nodeType":"YulFunctionCall","src":"42536:51:17"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"42532:3:17"},"nodeType":"YulFunctionCall","src":"42532:56:17"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"42524:4:17","type":""}]},{"nodeType":"YulAssignment","src":"42597:25:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42611:4:17"},{"name":"mask","nodeType":"YulIdentifier","src":"42617:4:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42607:3:17"},"nodeType":"YulFunctionCall","src":"42607:15:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"42597:6:17"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42487:4:17","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"42493:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"42503:6:17","type":""}],"src":"42459:169:17"},{"body":{"nodeType":"YulBlock","src":"42714:214:17","statements":[{"nodeType":"YulAssignment","src":"42847:37:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42874:4:17"},{"name":"len","nodeType":"YulIdentifier","src":"42880:3:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"42855:18:17"},"nodeType":"YulFunctionCall","src":"42855:29:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"42847:4:17"}]},{"nodeType":"YulAssignment","src":"42893:29:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42904:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42914:1:17","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"42917:3:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"42910:3:17"},"nodeType":"YulFunctionCall","src":"42910:11:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"42901:2:17"},"nodeType":"YulFunctionCall","src":"42901:21:17"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"42893:4:17"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42695:4:17","type":""},{"name":"len","nodeType":"YulTypedName","src":"42701:3:17","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"42709:4:17","type":""}],"src":"42633:295:17"},{"body":{"nodeType":"YulBlock","src":"43025:1303:17","statements":[{"nodeType":"YulVariableDeclaration","src":"43036:51:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"43083:3:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"43050:32:17"},"nodeType":"YulFunctionCall","src":"43050:37:17"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"43040:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"43172:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"43174:16:17"},"nodeType":"YulFunctionCall","src":"43174:18:17"},"nodeType":"YulExpressionStatement","src":"43174:18:17"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"43144:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"43152:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"43141:2:17"},"nodeType":"YulFunctionCall","src":"43141:30:17"},"nodeType":"YulIf","src":"43138:56:17"},{"nodeType":"YulVariableDeclaration","src":"43204:52:17","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"43250:4:17"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"43244:5:17"},"nodeType":"YulFunctionCall","src":"43244:11:17"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"43218:25:17"},"nodeType":"YulFunctionCall","src":"43218:38:17"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"43208:6:17","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"43349:4:17"},{"name":"oldLen","nodeType":"YulIdentifier","src":"43355:6:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"43363:6:17"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"43303:45:17"},"nodeType":"YulFunctionCall","src":"43303:67:17"},"nodeType":"YulExpressionStatement","src":"43303:67:17"},{"nodeType":"YulVariableDeclaration","src":"43380:18:17","value":{"kind":"number","nodeType":"YulLiteral","src":"43397:1:17","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"43384:9:17","type":""}]},{"nodeType":"YulAssignment","src":"43408:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"43421:4:17","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"43408:9:17"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"43472:611:17","statements":[{"nodeType":"YulVariableDeclaration","src":"43486:37:17","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"43505:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43517:4:17","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"43513:3:17"},"nodeType":"YulFunctionCall","src":"43513:9:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43501:3:17"},"nodeType":"YulFunctionCall","src":"43501:22:17"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"43490:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43537:51:17","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"43583:4:17"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"43551:31:17"},"nodeType":"YulFunctionCall","src":"43551:37:17"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"43541:6:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43601:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"43610:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"43605:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"43669:163:17","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"43694:6:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"43712:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"43717:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43708:3:17"},"nodeType":"YulFunctionCall","src":"43708:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43702:5:17"},"nodeType":"YulFunctionCall","src":"43702:26:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"43687:6:17"},"nodeType":"YulFunctionCall","src":"43687:42:17"},"nodeType":"YulExpressionStatement","src":"43687:42:17"},{"nodeType":"YulAssignment","src":"43746:24:17","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"43760:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"43768:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43756:3:17"},"nodeType":"YulFunctionCall","src":"43756:14:17"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"43746:6:17"}]},{"nodeType":"YulAssignment","src":"43787:31:17","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"43804:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"43815:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43800:3:17"},"nodeType":"YulFunctionCall","src":"43800:18:17"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"43787:9:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"43635:1:17"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"43638:7:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"43632:2:17"},"nodeType":"YulFunctionCall","src":"43632:14:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"43647:21:17","statements":[{"nodeType":"YulAssignment","src":"43649:17:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"43658:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"43661:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43654:3:17"},"nodeType":"YulFunctionCall","src":"43654:12:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"43649:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"43628:3:17","statements":[]},"src":"43624:208:17"},{"body":{"nodeType":"YulBlock","src":"43868:156:17","statements":[{"nodeType":"YulVariableDeclaration","src":"43886:43:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"43913:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"43918:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43909:3:17"},"nodeType":"YulFunctionCall","src":"43909:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43903:5:17"},"nodeType":"YulFunctionCall","src":"43903:26:17"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"43890:9:17","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"43953:6:17"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"43980:9:17"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"43995:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"44003:4:17","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43991:3:17"},"nodeType":"YulFunctionCall","src":"43991:17:17"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"43961:18:17"},"nodeType":"YulFunctionCall","src":"43961:48:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"43946:6:17"},"nodeType":"YulFunctionCall","src":"43946:64:17"},"nodeType":"YulExpressionStatement","src":"43946:64:17"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"43851:7:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"43860:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"43848:2:17"},"nodeType":"YulFunctionCall","src":"43848:19:17"},"nodeType":"YulIf","src":"43845:179:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"44044:4:17"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"44058:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"44066:1:17","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"44054:3:17"},"nodeType":"YulFunctionCall","src":"44054:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"44070:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44050:3:17"},"nodeType":"YulFunctionCall","src":"44050:22:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"44037:6:17"},"nodeType":"YulFunctionCall","src":"44037:36:17"},"nodeType":"YulExpressionStatement","src":"44037:36:17"}]},"nodeType":"YulCase","src":"43465:618:17","value":{"kind":"number","nodeType":"YulLiteral","src":"43470:1:17","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"44100:222:17","statements":[{"nodeType":"YulVariableDeclaration","src":"44114:14:17","value":{"kind":"number","nodeType":"YulLiteral","src":"44127:1:17","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"44118:5:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"44151:67:17","statements":[{"nodeType":"YulAssignment","src":"44169:35:17","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"44188:3:17"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"44193:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44184:3:17"},"nodeType":"YulFunctionCall","src":"44184:19:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"44178:5:17"},"nodeType":"YulFunctionCall","src":"44178:26:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"44169:5:17"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"44144:6:17"},"nodeType":"YulIf","src":"44141:77:17"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"44238:4:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44297:5:17"},{"name":"newLen","nodeType":"YulIdentifier","src":"44304:6:17"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"44244:52:17"},"nodeType":"YulFunctionCall","src":"44244:67:17"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"44231:6:17"},"nodeType":"YulFunctionCall","src":"44231:81:17"},"nodeType":"YulExpressionStatement","src":"44231:81:17"}]},"nodeType":"YulCase","src":"44092:230:17","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"43445:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"43453:2:17","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"43442:2:17"},"nodeType":"YulFunctionCall","src":"43442:14:17"},"nodeType":"YulSwitch","src":"43435:887:17"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"43014:4:17","type":""},{"name":"src","nodeType":"YulTypedName","src":"43020:3:17","type":""}],"src":"42933:1395:17"},{"body":{"nodeType":"YulBlock","src":"44448:34:17","statements":[{"nodeType":"YulAssignment","src":"44458:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"44473:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"44458:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44420:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"44425:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"44436:11:17","type":""}],"src":"44334:148:17"},{"body":{"nodeType":"YulBlock","src":"44598:280:17","statements":[{"nodeType":"YulVariableDeclaration","src":"44608:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44655:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"44622:32:17"},"nodeType":"YulFunctionCall","src":"44622:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"44612:6:17","type":""}]},{"nodeType":"YulAssignment","src":"44670:96:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44754:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"44759:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"44677:76:17"},"nodeType":"YulFunctionCall","src":"44677:89:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44670:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44814:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"44821:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44810:3:17"},"nodeType":"YulFunctionCall","src":"44810:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"44828:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"44833:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"44775:34:17"},"nodeType":"YulFunctionCall","src":"44775:65:17"},"nodeType":"YulExpressionStatement","src":"44775:65:17"},{"nodeType":"YulAssignment","src":"44849:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44860:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"44865:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44856:3:17"},"nodeType":"YulFunctionCall","src":"44856:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44849:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44579:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"44586:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44594:3:17","type":""}],"src":"44488:390:17"},{"body":{"nodeType":"YulBlock","src":"45068:251:17","statements":[{"nodeType":"YulAssignment","src":"45079:102:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"45168:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"45177:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"45086:81:17"},"nodeType":"YulFunctionCall","src":"45086:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45079:3:17"}]},{"nodeType":"YulAssignment","src":"45191:102:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"45280:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"45289:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"45198:81:17"},"nodeType":"YulFunctionCall","src":"45198:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45191:3:17"}]},{"nodeType":"YulAssignment","src":"45303:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"45310:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45303:3:17"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45039:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"45045:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"45053:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45064:3:17","type":""}],"src":"44884:435:17"},{"body":{"nodeType":"YulBlock","src":"45383:40:17","statements":[{"nodeType":"YulAssignment","src":"45394:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45410:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"45404:5:17"},"nodeType":"YulFunctionCall","src":"45404:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"45394:6:17"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45366:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"45376:6:17","type":""}],"src":"45325:98:17"},{"body":{"nodeType":"YulBlock","src":"45524:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45541:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"45546:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45534:6:17"},"nodeType":"YulFunctionCall","src":"45534:19:17"},"nodeType":"YulExpressionStatement","src":"45534:19:17"},{"nodeType":"YulAssignment","src":"45562:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45581:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"45586:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45577:3:17"},"nodeType":"YulFunctionCall","src":"45577:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"45562:11:17"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45496:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"45501:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"45512:11:17","type":""}],"src":"45429:168:17"},{"body":{"nodeType":"YulBlock","src":"45693:283:17","statements":[{"nodeType":"YulVariableDeclaration","src":"45703:52:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45749:5:17"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"45717:31:17"},"nodeType":"YulFunctionCall","src":"45717:38:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"45707:6:17","type":""}]},{"nodeType":"YulAssignment","src":"45764:77:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45829:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"45834:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45771:57:17"},"nodeType":"YulFunctionCall","src":"45771:70:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45764:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45889:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"45896:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45885:3:17"},"nodeType":"YulFunctionCall","src":"45885:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"45903:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"45908:6:17"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"45850:34:17"},"nodeType":"YulFunctionCall","src":"45850:65:17"},"nodeType":"YulExpressionStatement","src":"45850:65:17"},{"nodeType":"YulAssignment","src":"45924:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45935:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"45962:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"45940:21:17"},"nodeType":"YulFunctionCall","src":"45940:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45931:3:17"},"nodeType":"YulFunctionCall","src":"45931:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45924:3:17"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"45674:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"45681:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45689:3:17","type":""}],"src":"45603:373:17"},{"body":{"nodeType":"YulBlock","src":"46182:440:17","statements":[{"nodeType":"YulAssignment","src":"46192:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46204:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"46215:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46200:3:17"},"nodeType":"YulFunctionCall","src":"46200:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46192:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"46273:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46286:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"46297:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46282:3:17"},"nodeType":"YulFunctionCall","src":"46282:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"46229:43:17"},"nodeType":"YulFunctionCall","src":"46229:71:17"},"nodeType":"YulExpressionStatement","src":"46229:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"46354:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46367:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"46378:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46363:3:17"},"nodeType":"YulFunctionCall","src":"46363:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"46310:43:17"},"nodeType":"YulFunctionCall","src":"46310:72:17"},"nodeType":"YulExpressionStatement","src":"46310:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"46436:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46449:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"46460:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46445:3:17"},"nodeType":"YulFunctionCall","src":"46445:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"46392:43:17"},"nodeType":"YulFunctionCall","src":"46392:72:17"},"nodeType":"YulExpressionStatement","src":"46392:72:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46485:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"46496:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46481:3:17"},"nodeType":"YulFunctionCall","src":"46481:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46505:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"46511:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46501:3:17"},"nodeType":"YulFunctionCall","src":"46501:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46474:6:17"},"nodeType":"YulFunctionCall","src":"46474:48:17"},"nodeType":"YulExpressionStatement","src":"46474:48:17"},{"nodeType":"YulAssignment","src":"46531:84:17","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"46601:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"46610:4:17"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46539:61:17"},"nodeType":"YulFunctionCall","src":"46539:76:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46531:4:17"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46130:9:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"46142:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"46150:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"46158:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"46166:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46177:4:17","type":""}],"src":"45982:640:17"},{"body":{"nodeType":"YulBlock","src":"46690:79:17","statements":[{"nodeType":"YulAssignment","src":"46700:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"46715:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"46709:5:17"},"nodeType":"YulFunctionCall","src":"46709:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"46700:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46757:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"46731:25:17"},"nodeType":"YulFunctionCall","src":"46731:32:17"},"nodeType":"YulExpressionStatement","src":"46731:32:17"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"46668:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"46676:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"46684:5:17","type":""}],"src":"46628:141:17"},{"body":{"nodeType":"YulBlock","src":"46851:273:17","statements":[{"body":{"nodeType":"YulBlock","src":"46897:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"46899:77:17"},"nodeType":"YulFunctionCall","src":"46899:79:17"},"nodeType":"YulExpressionStatement","src":"46899:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"46872:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"46881:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46868:3:17"},"nodeType":"YulFunctionCall","src":"46868:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"46893:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"46864:3:17"},"nodeType":"YulFunctionCall","src":"46864:32:17"},"nodeType":"YulIf","src":"46861:119:17"},{"nodeType":"YulBlock","src":"46990:127:17","statements":[{"nodeType":"YulVariableDeclaration","src":"47005:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"47019:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"47009:6:17","type":""}]},{"nodeType":"YulAssignment","src":"47034:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47079:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"47090:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47075:3:17"},"nodeType":"YulFunctionCall","src":"47075:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"47099:7:17"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"47044:30:17"},"nodeType":"YulFunctionCall","src":"47044:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"47034:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46821:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"46832:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"46844:6:17","type":""}],"src":"46775:349:17"},{"body":{"nodeType":"YulBlock","src":"47158:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47175:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47178:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47168:6:17"},"nodeType":"YulFunctionCall","src":"47168:88:17"},"nodeType":"YulExpressionStatement","src":"47168:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47272:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"47275:4:17","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47265:6:17"},"nodeType":"YulFunctionCall","src":"47265:15:17"},"nodeType":"YulExpressionStatement","src":"47265:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"47296:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47299:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"47289:6:17"},"nodeType":"YulFunctionCall","src":"47289:15:17"},"nodeType":"YulExpressionStatement","src":"47289:15:17"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"47130:180:17"},{"body":{"nodeType":"YulBlock","src":"47442:206:17","statements":[{"nodeType":"YulAssignment","src":"47452:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47464:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"47475:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47460:3:17"},"nodeType":"YulFunctionCall","src":"47460:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47452:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"47532:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47545:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"47556:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47541:3:17"},"nodeType":"YulFunctionCall","src":"47541:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"47488:43:17"},"nodeType":"YulFunctionCall","src":"47488:71:17"},"nodeType":"YulExpressionStatement","src":"47488:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"47613:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47626:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"47637:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47622:3:17"},"nodeType":"YulFunctionCall","src":"47622:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"47569:43:17"},"nodeType":"YulFunctionCall","src":"47569:72:17"},"nodeType":"YulExpressionStatement","src":"47569:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47406:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"47418:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"47426:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47437:4:17","type":""}],"src":"47316:332:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 352)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value5,  tail)\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value6,  tail)\n\n        mstore(add(headStart, 224), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value7,  tail)\n\n        mstore(add(headStart, 256), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value8,  tail)\n\n        mstore(add(headStart, 288), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value9,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value10,  add(headStart, 320))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct TicketMaster.Occasion -> struct TicketMaster.Occasion\n    function abi_encode_t_struct$_Occasion_$6461_memory_ptr_to_t_struct$_Occasion_$6461_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0160)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // cost\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // tickets\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // maxTickets\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // date\n\n            let memberValue0 := mload(add(value, 0xa0))\n\n            mstore(add(pos, 0xa0), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // time\n\n            let memberValue0 := mload(add(value, 0xc0))\n\n            mstore(add(pos, 0xc0), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // location\n\n            let memberValue0 := mload(add(value, 0xe0))\n\n            mstore(add(pos, 0xe0), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // bannerImage\n\n            let memberValue0 := mload(add(value, 0x0100))\n\n            mstore(add(pos, 0x0100), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // vrVideo\n\n            let memberValue0 := mload(add(value, 0x0120))\n\n            mstore(add(pos, 0x0120), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // creator\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x0140))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Occasion_$6461_memory_ptr__to_t_struct$_Occasion_$6461_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Occasion_$6461_memory_ptr_to_t_struct$_Occasion_$6461_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 192))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid occasion ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_991fe72b705603fa3f4217251ba713c3bb263ba16f99f25f095bf143b105c330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient ETH sent\")\n\n    }\n\n    function abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1d7ce188a2590a146d845d06150c8740ee59e799f73449dae7e05a9ca2d79404_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77(memPtr) {\n\n        mstore(add(memPtr, 0), \"Seat already taken\")\n\n    }\n\n    function abi_encode_t_stringliteral_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98d5b318c2f076e2856fde11b050ffbf90edbb99d4c883e46ef00859a7c16d77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid seat number\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b954e856737433b484818d3a47f44642e7668c9e551c555866a590d4cd036b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not the owner of the ticket\")\n\n    }\n\n    function abi_encode_t_stringliteral_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f78ac643efd02e892fd73ad7855b4850816933d3f39e986fa8062cbe9bb7c79f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ticket already used\")\n\n    }\n\n    function abi_encode_t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_712a5264cc62a58ebdec1a8abb34eb728256cb94495df9c017a0b8e7128bea10_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid event ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c057ccd136f1301cb45f5419bf0c2efdc67abdc323a4e63e7f801b79d7a76c73_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702(memPtr) {\n\n        mstore(add(memPtr, 0), \"Seat not occupied\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6efc8faa000bad7c2b8cfb1457019c1df35d21fcdaabc938eb6f38679fd9702_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Resale not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47a253ef1dcee61079d512fc0271224c8da13f7c568bf89da2eac3ce493aa5d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid ticket\")\n\n    }\n\n    function abi_encode_t_stringliteral_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4fe307ce79f79fca86cb13d7e383e57f17c9e77a6fe8ecaf35ac4abda7c25e9d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot buy your own ticket\")\n\n    }\n\n    function abi_encode_t_stringliteral_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_710d6f7b181d5e8373f30114c921169d2ee97740b887c6879d95fc180a045f95_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect payment amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Payment transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only event creator can set VR vi\")\n\n        mstore(add(memPtr, 32), \"deo\")\n\n    }\n\n    function abi_encode_t_stringliteral_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53922cfce68011076ea92ccc64f5c6ecc8511218503581d62e1434cfbf211d5d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061020f5760003560e01c80637284328211610118578063a22cb465116100a0578063b88d4fde1161006f578063b88d4fde14610820578063c233e22b14610849578063c87b56dd14610886578063e985e9c5146108c3578063f2fde38b146109005761020f565b8063a22cb46514610768578063adca6f8914610791578063af296da1146107ba578063afb5604e146107f75761020f565b8063953865c1116100e7578063953865c11461067c57806395d89b41146106a75780639b26ce0c146106d25780639cb04aef146106ee578063a0415bb41461072b5761020f565b8063728432821461059a57806374bc8656146105d75780637cea357c146106145780638da5cb5b146106515761020f565b806336cf43b81161019b57806361a5672d1161016a57806361a5672d146104995780636352211e146104e05780636b787f091461051d57806370a0823114610546578063715018a6146105835761020f565b806336cf43b8146103cd57806342842e0e146103f65780634e7497fc1461041f5780635b6966ac1461045c5761020f565b8063095ea7b3116101e2578063095ea7b3146102f75780630ef7ec741461032057806318160ddd1461035d5780631b2ef1ca1461038857806323b872dd146103a45761020f565b806301ffc9a7146102145780630484a22f1461025157806306fdde031461028f578063081812fc146102ba575b600080fd5b34801561022057600080fd5b5061023b60048036038101906102369190613bb1565b610929565b6040516102489190613bf9565b60405180910390f35b34801561025d57600080fd5b5061027860048036038101906102739190613c72565b610a0b565b604051610286929190613d67565b60405180910390f35b34801561029b57600080fd5b506102a4610d3e565b6040516102b19190613e2e565b60405180910390f35b3480156102c657600080fd5b506102e160048036038101906102dc9190613e7c565b610dd0565b6040516102ee9190613eb8565b60405180910390f35b34801561030357600080fd5b5061031e60048036038101906103199190613ed3565b610dec565b005b34801561032c57600080fd5b5061034760048036038101906103429190613e7c565b610e02565b6040516103549190613f13565b60405180910390f35b34801561036957600080fd5b50610372610e6d565b60405161037f9190613f44565b60405180910390f35b6103a2600480360381019061039d9190613f5f565b610e73565b005b3480156103b057600080fd5b506103cb60048036038101906103c69190613f9f565b611229565b005b3480156103d957600080fd5b506103f460048036038101906103ef9190613f5f565b61132b565b005b34801561040257600080fd5b5061041d60048036038101906104189190613f9f565b611490565b005b34801561042b57600080fd5b5061044660048036038101906104419190613f5f565b6114b0565b6040516104539190613f44565b60405180910390f35b34801561046857600080fd5b50610483600480360381019061047e9190613f5f565b6114e1565b6040516104909190613f44565b60405180910390f35b3480156104a557600080fd5b506104c060048036038101906104bb9190613e7c565b611506565b6040516104d79b9a99989796959493929190613ff2565b60405180910390f35b3480156104ec57600080fd5b5061050760048036038101906105029190613e7c565b6118b0565b6040516105149190613eb8565b60405180910390f35b34801561052957600080fd5b50610544600480360381019061053f9190613f5f565b6118c2565b005b34801561055257600080fd5b5061056d60048036038101906105689190613c72565b611abf565b60405161057a9190613f44565b60405180910390f35b34801561058f57600080fd5b50610598611b79565b005b3480156105a657600080fd5b506105c160048036038101906105bc9190613c72565b611b8d565b6040516105ce9190613f13565b60405180910390f35b3480156105e357600080fd5b506105fe60048036038101906105f99190613e7c565b611c24565b60405161060b9190614232565b60405180910390f35b34801561062057600080fd5b5061063b60048036038101906106369190613ed3565b61203c565b6040516106489190613f44565b60405180910390f35b34801561065d57600080fd5b5061066661206d565b6040516106739190613eb8565b60405180910390f35b34801561068857600080fd5b50610691612097565b60405161069e9190613f44565b60405180910390f35b3480156106b357600080fd5b506106bc61209d565b6040516106c99190613e2e565b60405180910390f35b6106ec60048036038101906106e79190613f5f565b61212f565b005b3480156106fa57600080fd5b5061071560048036038101906107109190614254565b6124e1565b6040516107229190613bf9565b60405180910390f35b34801561073757600080fd5b50610752600480360381019061074d9190613f5f565b612510565b60405161075f9190613bf9565b60405180910390f35b34801561077457600080fd5b5061078f600480360381019061078a91906142c0565b61253f565b005b34801561079d57600080fd5b506107b860048036038101906107b39190614435565b612555565b005b3480156107c657600080fd5b506107e160048036038101906107dc9190613f5f565b612673565b6040516107ee9190613eb8565b60405180910390f35b34801561080357600080fd5b5061081e60048036038101906108199190614491565b6126b5565b005b34801561082c57600080fd5b5061084760048036038101906108429190614660565b6128c7565b005b34801561085557600080fd5b50610870600480360381019061086b9190613f5f565b6128ec565b60405161087d9190613bf9565b60405180910390f35b34801561089257600080fd5b506108ad60048036038101906108a89190613e7c565b61291b565b6040516108ba9190613e2e565b60405180910390f35b3480156108cf57600080fd5b506108ea60048036038101906108e591906146e3565b612984565b6040516108f79190613bf9565b60405180910390f35b34801561090c57600080fd5b5061092760048036038101906109229190613c72565b612a18565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806109f457507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610a045750610a0382612a9e565b5b9050919050565b606080600060085467ffffffffffffffff811115610a2c57610a2b61430a565b5b604051908082528060200260200182016040528015610a5a5781602001602082028036833780820191505090505b509050600060085467ffffffffffffffff811115610a7b57610a7a61430a565b5b604051908082528060200260200182016040528015610aa95781602001602082028036833780820191505090505b509050600080600190505b6007548111610c005760005b600c600083815260200190815260200160002080549050811015610bec576000600c60008481526020019081526020016000208281548110610b0557610b04614723565b5b906000526020600020015490508873ffffffffffffffffffffffffffffffffffffffff16600a6000858152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bd85782868581518110610b9d57610b9c614723565b5b60200260200101818152505080858581518110610bbd57610bbc614723565b5b6020026020010181815250508380610bd490614781565b9450505b508080610be490614781565b915050610ac0565b508080610bf890614781565b915050610ab4565b5060008167ffffffffffffffff811115610c1d57610c1c61430a565b5b604051908082528060200260200182016040528015610c4b5781602001602082028036833780820191505090505b50905060008267ffffffffffffffff811115610c6a57610c6961430a565b5b604051908082528060200260200182016040528015610c985781602001602082028036833780820191505090505b50905060005b83811015610d2d57858181518110610cb957610cb8614723565b5b6020026020010151838281518110610cd457610cd3614723565b5b602002602001018181525050848181518110610cf357610cf2614723565b5b6020026020010151828281518110610d0e57610d0d614723565b5b6020026020010181815250508080610d2590614781565b915050610c9e565b508181965096505050505050915091565b606060008054610d4d906147f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d79906147f8565b8015610dc65780601f10610d9b57610100808354040283529160200191610dc6565b820191906000526020600020905b815481529060010190602001808311610da957829003601f168201915b5050505050905090565b6000610ddb82612b08565b50610de582612b90565b9050919050565b610dfe8282610df9612bcd565b612bd5565b5050565b6060600c6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610e6157602002820191906000526020600020905b815481526020019060010190808311610e4d575b50505050509050919050565b60085481565b60008214158015610e8657506007548211155b610ec5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebc90614875565b60405180910390fd5b6009600083815260200190815260200160002060020154341015610f1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f15906148e1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a6000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc89061494d565b60405180910390fd5b600960008381526020019081526020016000206004015481111561102a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611021906149b9565b60405180910390fd5b6008600081548092919061103d90614781565b9190505550600960008381526020019081526020016000206003016000815480929190611069906149d9565b91905055506001600b600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555033600a6000848152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600c60008381526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150556000600e6000848152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600d6000848152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506111fa33600854612be7565b600854601060008481526020019081526020016000206000838152602001908152602001600020819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361129b5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112929190613eb8565b60405180910390fd5b60006112af83836112aa612bcd565b612c05565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611325578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161131c93929190614a02565b60405180910390fd5b50505050565b3373ffffffffffffffffffffffffffffffffffffffff16600a6000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146113dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d490614a85565b60405180910390fd5b600d6000838152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff161561144f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144690614af1565b60405180910390fd5b6001600e6000848152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6114ab838383604051806020016040528060008152506128c7565b505050565b600c60205281600052604060002081815481106114cc57600080fd5b90600052602060002001600091509150505481565b6010602052816000526040600020602052806000526040600020600091509150505481565b600960205280600052604060002060009150905080600001549080600101805461152f906147f8565b80601f016020809104026020016040519081016040528092919081815260200182805461155b906147f8565b80156115a85780601f1061157d576101008083540402835291602001916115a8565b820191906000526020600020905b81548152906001019060200180831161158b57829003601f168201915b5050505050908060020154908060030154908060040154908060050180546115cf906147f8565b80601f01602080910402602001604051908101604052809291908181526020018280546115fb906147f8565b80156116485780601f1061161d57610100808354040283529160200191611648565b820191906000526020600020905b81548152906001019060200180831161162b57829003601f168201915b50505050509080600601805461165d906147f8565b80601f0160208091040260200160405190810160405280929190818152602001828054611689906147f8565b80156116d65780601f106116ab576101008083540402835291602001916116d6565b820191906000526020600020905b8154815290600101906020018083116116b957829003601f168201915b5050505050908060070180546116eb906147f8565b80601f0160208091040260200160405190810160405280929190818152602001828054611717906147f8565b80156117645780601f1061173957610100808354040283529160200191611764565b820191906000526020600020905b81548152906001019060200180831161174757829003601f168201915b505050505090806008018054611779906147f8565b80601f01602080910402602001604051908101604052809291908181526020018280546117a5906147f8565b80156117f25780601f106117c7576101008083540402835291602001916117f2565b820191906000526020600020905b8154815290600101906020018083116117d557829003601f168201915b505050505090806009018054611807906147f8565b80601f0160208091040260200160405190810160405280929190818152602001828054611833906147f8565b80156118805780601f1061185557610100808354040283529160200191611880565b820191906000526020600020905b81548152906001019060200180831161186357829003601f168201915b50505050509080600a0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508b565b60006118bb82612b08565b9050919050565b6118ca612e1f565b600082141580156118dd57506007548211155b61191c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191390614b5d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a6000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036119cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c690614bc9565b60405180910390fd5b600d6000838152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff1615611a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3890614af1565b60405180910390fd5b6001600d6000848152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600e6000848152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b325760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401611b299190613eb8565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611b81612e1f565b611b8b6000612ea6565b565b6060600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611c1857602002820191906000526020600020905b815481526020019060010190808311611c04575b50505050509050919050565b611c2c613ad5565b600960008381526020019081526020016000206040518061016001604052908160008201548152602001600182018054611c65906147f8565b80601f0160208091040260200160405190810160405280929190818152602001828054611c91906147f8565b8015611cde5780601f10611cb357610100808354040283529160200191611cde565b820191906000526020600020905b815481529060010190602001808311611cc157829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201548152602001600582018054611d15906147f8565b80601f0160208091040260200160405190810160405280929190818152602001828054611d41906147f8565b8015611d8e5780601f10611d6357610100808354040283529160200191611d8e565b820191906000526020600020905b815481529060010190602001808311611d7157829003601f168201915b50505050508152602001600682018054611da7906147f8565b80601f0160208091040260200160405190810160405280929190818152602001828054611dd3906147f8565b8015611e205780601f10611df557610100808354040283529160200191611e20565b820191906000526020600020905b815481529060010190602001808311611e0357829003601f168201915b50505050508152602001600782018054611e39906147f8565b80601f0160208091040260200160405190810160405280929190818152602001828054611e65906147f8565b8015611eb25780601f10611e8757610100808354040283529160200191611eb2565b820191906000526020600020905b815481529060010190602001808311611e9557829003601f168201915b50505050508152602001600882018054611ecb906147f8565b80601f0160208091040260200160405190810160405280929190818152602001828054611ef7906147f8565b8015611f445780601f10611f1957610100808354040283529160200191611f44565b820191906000526020600020905b815481529060010190602001808311611f2757829003601f168201915b50505050508152602001600982018054611f5d906147f8565b80601f0160208091040260200160405190810160405280929190818152602001828054611f89906147f8565b8015611fd65780601f10611fab57610100808354040283529160200191611fd6565b820191906000526020600020905b815481529060010190602001808311611fb957829003601f168201915b50505050508152602001600a820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b600f602052816000526040600020818154811061205857600080fd5b90600052602060002001600091509150505481565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60075481565b6060600180546120ac906147f8565b80601f01602080910402602001604051908101604052809291908181526020018280546120d8906147f8565b80156121255780601f106120fa57610100808354040283529160200191612125565b820191906000526020600020905b81548152906001019060200180831161210857829003601f168201915b5050505050905090565b600e6000838152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff166121a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219790614c35565b60405180910390fd5b600d6000838152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff1615612212576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161220990614af1565b60405180910390fd5b60006010600084815260200190815260200160002060008381526020019081526020016000205490506000612246826118b0565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036122b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122ae90614ca1565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161231c90614d0d565b60405180910390fd5b600060096000868152602001908152602001600020600201549050803414612382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161237990614d79565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516123a890614dca565b60006040518083038185875af1925050503d80600081146123e5576040519150601f19603f3d011682016040523d82523d6000602084013e6123ea565b606091505b505090508061242e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161242590614e2b565b60405180910390fd5b612439833386612f6c565b33600a6000888152602001908152602001600020600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600e6000888152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff021916908315150217905550505050505050565b600b6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600d6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b61255161254a612bcd565b83836130d9565b5050565b6000821415801561256857506007548211155b6125a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161259e90614875565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660096000848152602001908152602001600020600a0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461264b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161264290614ebd565b60405180910390fd5b8060096000848152602001908152602001600020600901908161266e9190615089565b505050565b600a6020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6126bd612e1f565b600760008154809291906126d090614781565b919050555060405180610160016040528060075481526020018881526020018781526020018681526020018681526020018581526020018481526020018381526020018281526020016040518060200160405280600081525081526020013373ffffffffffffffffffffffffffffffffffffffff1681525060096000600754815260200190815260200160002060008201518160000155602082015181600101908161277c9190615089565b5060408201518160020155606082015181600301556080820151816004015560a08201518160050190816127b09190615089565b5060c08201518160060190816127c69190615089565b5060e08201518160070190816127dc9190615089565b506101008201518160080190816127f39190615089565b5061012082015181600901908161280a9190615089565b5061014082015181600a0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600754908060018154018082558091505060019003906000526020600020016000909190919091505550505050505050565b6128d2848484611229565b6128e66128dd612bcd565b85858585613248565b50505050565b600e6020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b606061292682612b08565b5060006129316133f9565b90506000815111612951576040518060200160405280600081525061297c565b8061295b84613410565b60405160200161296c929190615197565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b612a20612e1f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612a925760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612a899190613eb8565b60405180910390fd5b612a9b81612ea6565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080612b14836134de565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612b8757826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401612b7e9190613f44565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b612be2838383600161351b565b505050565b612c018282604051806020016040528060008152506136e0565b5050565b600080612c11846134de565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612c5357612c52818486613704565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614612ce457612c9560008560008061351b565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614612d67576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b612e27612bcd565b73ffffffffffffffffffffffffffffffffffffffff16612e4561206d565b73ffffffffffffffffffffffffffffffffffffffff1614612ea457612e68612bcd565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401612e9b9190613eb8565b60405180910390fd5b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612fde5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401612fd59190613eb8565b60405180910390fd5b6000612fec83836000612c05565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361305f57816040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016130569190613f44565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146130d3578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016130ca93929190614a02565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361314a57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016131419190613eb8565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161323b9190613bf9565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156133f2578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b81526004016132a79493929190615210565b6020604051808303816000875af19250505080156132e357506040513d601f19601f820116820180604052508101906132e09190615271565b60015b613367573d8060008114613313576040519150601f19603f3d011682016040523d82523d6000602084013e613318565b606091505b50600081510361335f57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016133569190613eb8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146133f057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016133e79190613eb8565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b60606000600161341f846137c8565b01905060008167ffffffffffffffff81111561343e5761343d61430a565b5b6040519080825280601f01601f1916602001820160405280156134705781602001600182028036833780820191505090505b509050600082602001820190505b6001156134d3578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816134c7576134c661529e565b5b0494506000850361347e575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806135545750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561368857600061356484612b08565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156135cf57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156135e257506135e08184612984565b155b1561362457826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161361b9190613eb8565b60405180910390fd5b811561368657838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6136ea838361391b565b6136ff6136f5612bcd565b6000858585613248565b505050565b61370f838383613a14565b6137c357600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361378457806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161377b9190613f44565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016137ba9291906152cd565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310613826577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161381c5761381b61529e565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310613863576d04ee2d6d415b85acef810000000083816138595761385861529e565b5b0492506020810190505b662386f26fc10000831061389257662386f26fc1000083816138885761388761529e565b5b0492506010810190505b6305f5e10083106138bb576305f5e10083816138b1576138b061529e565b5b0492506008810190505b61271083106138e05761271083816138d6576138d561529e565b5b0492506004810190505b6064831061390357606483816138f9576138f861529e565b5b0492506002810190505b600a8310613912576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361398d5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016139849190613eb8565b60405180910390fd5b600061399b83836000612c05565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614613a0f5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401613a069190613eb8565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015613acc57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480613a8d5750613a8c8484612984565b5b80613acb57508273ffffffffffffffffffffffffffffffffffffffff16613ab383612b90565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b60405180610160016040528060008152602001606081526020016000815260200160008152602001600081526020016060815260200160608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b613b8e81613b59565b8114613b9957600080fd5b50565b600081359050613bab81613b85565b92915050565b600060208284031215613bc757613bc6613b4f565b5b6000613bd584828501613b9c565b91505092915050565b60008115159050919050565b613bf381613bde565b82525050565b6000602082019050613c0e6000830184613bea565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613c3f82613c14565b9050919050565b613c4f81613c34565b8114613c5a57600080fd5b50565b600081359050613c6c81613c46565b92915050565b600060208284031215613c8857613c87613b4f565b5b6000613c9684828501613c5d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b613cde81613ccb565b82525050565b6000613cf08383613cd5565b60208301905092915050565b6000602082019050919050565b6000613d1482613c9f565b613d1e8185613caa565b9350613d2983613cbb565b8060005b83811015613d5a578151613d418882613ce4565b9750613d4c83613cfc565b925050600181019050613d2d565b5085935050505092915050565b60006040820190508181036000830152613d818185613d09565b90508181036020830152613d958184613d09565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613dd8578082015181840152602081019050613dbd565b60008484015250505050565b6000601f19601f8301169050919050565b6000613e0082613d9e565b613e0a8185613da9565b9350613e1a818560208601613dba565b613e2381613de4565b840191505092915050565b60006020820190508181036000830152613e488184613df5565b905092915050565b613e5981613ccb565b8114613e6457600080fd5b50565b600081359050613e7681613e50565b92915050565b600060208284031215613e9257613e91613b4f565b5b6000613ea084828501613e67565b91505092915050565b613eb281613c34565b82525050565b6000602082019050613ecd6000830184613ea9565b92915050565b60008060408385031215613eea57613ee9613b4f565b5b6000613ef885828601613c5d565b9250506020613f0985828601613e67565b9150509250929050565b60006020820190508181036000830152613f2d8184613d09565b905092915050565b613f3e81613ccb565b82525050565b6000602082019050613f596000830184613f35565b92915050565b60008060408385031215613f7657613f75613b4f565b5b6000613f8485828601613e67565b9250506020613f9585828601613e67565b9150509250929050565b600080600060608486031215613fb857613fb7613b4f565b5b6000613fc686828701613c5d565b9350506020613fd786828701613c5d565b9250506040613fe886828701613e67565b9150509250925092565b600061016082019050614008600083018e613f35565b818103602083015261401a818d613df5565b9050614029604083018c613f35565b614036606083018b613f35565b614043608083018a613f35565b81810360a08301526140558189613df5565b905081810360c08301526140698188613df5565b905081810360e083015261407d8187613df5565b90508181036101008301526140928186613df5565b90508181036101208301526140a78185613df5565b90506140b7610140830184613ea9565b9c9b505050505050505050505050565b600082825260208201905092915050565b60006140e382613d9e565b6140ed81856140c7565b93506140fd818560208601613dba565b61410681613de4565b840191505092915050565b61411a81613c34565b82525050565b6000610160830160008301516141396000860182613cd5565b506020830151848203602086015261415182826140d8565b91505060408301516141666040860182613cd5565b5060608301516141796060860182613cd5565b50608083015161418c6080860182613cd5565b5060a083015184820360a08601526141a482826140d8565b91505060c083015184820360c08601526141be82826140d8565b91505060e083015184820360e08601526141d882826140d8565b9150506101008301518482036101008601526141f482826140d8565b91505061012083015184820361012086015261421082826140d8565b915050610140830151614227610140860182614111565b508091505092915050565b6000602082019050818103600083015261424c8184614120565b905092915050565b6000806040838503121561426b5761426a613b4f565b5b600061427985828601613e67565b925050602061428a85828601613c5d565b9150509250929050565b61429d81613bde565b81146142a857600080fd5b50565b6000813590506142ba81614294565b92915050565b600080604083850312156142d7576142d6613b4f565b5b60006142e585828601613c5d565b92505060206142f6858286016142ab565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61434282613de4565b810181811067ffffffffffffffff821117156143615761436061430a565b5b80604052505050565b6000614374613b45565b90506143808282614339565b919050565b600067ffffffffffffffff8211156143a05761439f61430a565b5b6143a982613de4565b9050602081019050919050565b82818337600083830152505050565b60006143d86143d384614385565b61436a565b9050828152602081018484840111156143f4576143f3614305565b5b6143ff8482856143b6565b509392505050565b600082601f83011261441c5761441b614300565b5b813561442c8482602086016143c5565b91505092915050565b6000806040838503121561444c5761444b613b4f565b5b600061445a85828601613e67565b925050602083013567ffffffffffffffff81111561447b5761447a613b54565b5b61448785828601614407565b9150509250929050565b600080600080600080600060e0888a0312156144b0576144af613b4f565b5b600088013567ffffffffffffffff8111156144ce576144cd613b54565b5b6144da8a828b01614407565b97505060206144eb8a828b01613e67565b96505060406144fc8a828b01613e67565b955050606088013567ffffffffffffffff81111561451d5761451c613b54565b5b6145298a828b01614407565b945050608088013567ffffffffffffffff81111561454a57614549613b54565b5b6145568a828b01614407565b93505060a088013567ffffffffffffffff81111561457757614576613b54565b5b6145838a828b01614407565b92505060c088013567ffffffffffffffff8111156145a4576145a3613b54565b5b6145b08a828b01614407565b91505092959891949750929550565b600067ffffffffffffffff8211156145da576145d961430a565b5b6145e382613de4565b9050602081019050919050565b60006146036145fe846145bf565b61436a565b90508281526020810184848401111561461f5761461e614305565b5b61462a8482856143b6565b509392505050565b600082601f83011261464757614646614300565b5b81356146578482602086016145f0565b91505092915050565b6000806000806080858703121561467a57614679613b4f565b5b600061468887828801613c5d565b945050602061469987828801613c5d565b93505060406146aa87828801613e67565b925050606085013567ffffffffffffffff8111156146cb576146ca613b54565b5b6146d787828801614632565b91505092959194509250565b600080604083850312156146fa576146f9613b4f565b5b600061470885828601613c5d565b925050602061471985828601613c5d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061478c82613ccb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036147be576147bd614752565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061481057607f821691505b602082108103614823576148226147c9565b5b50919050565b7f496e76616c6964206f63636173696f6e20494400000000000000000000000000600082015250565b600061485f601383613da9565b915061486a82614829565b602082019050919050565b6000602082019050818103600083015261488e81614852565b9050919050565b7f496e73756666696369656e74204554482073656e740000000000000000000000600082015250565b60006148cb601583613da9565b91506148d682614895565b602082019050919050565b600060208201905081810360008301526148fa816148be565b9050919050565b7f5365617420616c72656164792074616b656e0000000000000000000000000000600082015250565b6000614937601283613da9565b915061494282614901565b602082019050919050565b600060208201905081810360008301526149668161492a565b9050919050565b7f496e76616c69642073656174206e756d62657200000000000000000000000000600082015250565b60006149a3601383613da9565b91506149ae8261496d565b602082019050919050565b600060208201905081810360008301526149d281614996565b9050919050565b60006149e482613ccb565b9150600082036149f7576149f6614752565b5b600182039050919050565b6000606082019050614a176000830186613ea9565b614a246020830185613f35565b614a316040830184613ea9565b949350505050565b7f4e6f7420746865206f776e6572206f6620746865207469636b65740000000000600082015250565b6000614a6f601b83613da9565b9150614a7a82614a39565b602082019050919050565b60006020820190508181036000830152614a9e81614a62565b9050919050565b7f5469636b657420616c7265616479207573656400000000000000000000000000600082015250565b6000614adb601383613da9565b9150614ae682614aa5565b602082019050919050565b60006020820190508181036000830152614b0a81614ace565b9050919050565b7f496e76616c6964206576656e7420494400000000000000000000000000000000600082015250565b6000614b47601083613da9565b9150614b5282614b11565b602082019050919050565b60006020820190508181036000830152614b7681614b3a565b9050919050565b7f53656174206e6f74206f63637570696564000000000000000000000000000000600082015250565b6000614bb3601183613da9565b9150614bbe82614b7d565b602082019050919050565b60006020820190508181036000830152614be281614ba6565b9050919050565b7f526573616c65206e6f7420616c6c6f7765640000000000000000000000000000600082015250565b6000614c1f601283613da9565b9150614c2a82614be9565b602082019050919050565b60006020820190508181036000830152614c4e81614c12565b9050919050565b7f496e76616c6964207469636b6574000000000000000000000000000000000000600082015250565b6000614c8b600e83613da9565b9150614c9682614c55565b602082019050919050565b60006020820190508181036000830152614cba81614c7e565b9050919050565b7f43616e6e6f742062757920796f7572206f776e207469636b6574000000000000600082015250565b6000614cf7601a83613da9565b9150614d0282614cc1565b602082019050919050565b60006020820190508181036000830152614d2681614cea565b9050919050565b7f496e636f7272656374207061796d656e7420616d6f756e740000000000000000600082015250565b6000614d63601883613da9565b9150614d6e82614d2d565b602082019050919050565b60006020820190508181036000830152614d9281614d56565b9050919050565b600081905092915050565b50565b6000614db4600083614d99565b9150614dbf82614da4565b600082019050919050565b6000614dd582614da7565b9150819050919050565b7f5061796d656e74207472616e73666572206661696c6564000000000000000000600082015250565b6000614e15601783613da9565b9150614e2082614ddf565b602082019050919050565b60006020820190508181036000830152614e4481614e08565b9050919050565b7f4f6e6c79206576656e742063726561746f722063616e2073657420565220766960008201527f64656f0000000000000000000000000000000000000000000000000000000000602082015250565b6000614ea7602383613da9565b9150614eb282614e4b565b604082019050919050565b60006020820190508181036000830152614ed681614e9a565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302614f3f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614f02565b614f498683614f02565b95508019841693508086168417925050509392505050565b6000819050919050565b6000614f86614f81614f7c84613ccb565b614f61565b613ccb565b9050919050565b6000819050919050565b614fa083614f6b565b614fb4614fac82614f8d565b848454614f0f565b825550505050565b600090565b614fc9614fbc565b614fd4818484614f97565b505050565b5b81811015614ff857614fed600082614fc1565b600181019050614fda565b5050565b601f82111561503d5761500e81614edd565b61501784614ef2565b81016020851015615026578190505b61503a61503285614ef2565b830182614fd9565b50505b505050565b600082821c905092915050565b600061506060001984600802615042565b1980831691505092915050565b6000615079838361504f565b9150826002028217905092915050565b61509282613d9e565b67ffffffffffffffff8111156150ab576150aa61430a565b5b6150b582546147f8565b6150c0828285614ffc565b600060209050601f8311600181146150f357600084156150e1578287015190505b6150eb858261506d565b865550615153565b601f19841661510186614edd565b60005b8281101561512957848901518255600182019150602085019450602081019050615104565b868310156151465784890151615142601f89168261504f565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b600061517182613d9e565b61517b818561515b565b935061518b818560208601613dba565b80840191505092915050565b60006151a38285615166565b91506151af8284615166565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b60006151e2826151bb565b6151ec81856151c6565b93506151fc818560208601613dba565b61520581613de4565b840191505092915050565b60006080820190506152256000830187613ea9565b6152326020830186613ea9565b61523f6040830185613f35565b818103606083015261525181846151d7565b905095945050505050565b60008151905061526b81613b85565b92915050565b60006020828403121561528757615286613b4f565b5b60006152958482850161525c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506152e26000830185613ea9565b6152ef6020830184613f35565b939250505056fea2646970667358221220969cfb7028f2bc701fb28a9d5d82f52c52d98017a2728d98c0f622dc7d4b3aeb64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72843282 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x820 JUMPI DUP1 PUSH4 0xC233E22B EQ PUSH2 0x849 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x8C3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x900 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0xADCA6F89 EQ PUSH2 0x791 JUMPI DUP1 PUSH4 0xAF296DA1 EQ PUSH2 0x7BA JUMPI DUP1 PUSH4 0xAFB5604E EQ PUSH2 0x7F7 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x953865C1 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x953865C1 EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6A7 JUMPI DUP1 PUSH4 0x9B26CE0C EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0x9CB04AEF EQ PUSH2 0x6EE JUMPI DUP1 PUSH4 0xA0415BB4 EQ PUSH2 0x72B JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x72843282 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x74BC8656 EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0x7CEA357C EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x651 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x36CF43B8 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x61A5672D GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x61A5672D EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x6B787F09 EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x583 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x36CF43B8 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x4E7497FC EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x5B6966AC EQ PUSH2 0x45C JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xEF7EC74 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x1B2EF1CA EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3A4 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x484A22F EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x3BB1 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x3C72 JUMP JUMPDEST PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP3 SWAP2 SWAP1 PUSH2 0x3D67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A4 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x3ED3 JUMP JUMPDEST PUSH2 0xDEC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x3F13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x372 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0xE73 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST PUSH2 0x1229 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x132B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x3F9F JUMP JUMPDEST PUSH2 0x1490 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x446 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BB SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x507 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST PUSH2 0x18B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x544 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x18C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x568 SWAP2 SWAP1 PUSH2 0x3C72 JUMP JUMPDEST PUSH2 0x1ABF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x598 PUSH2 0x1B79 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x3C72 JUMP JUMPDEST PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x3F13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x4232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x3ED3 JUMP JUMPDEST PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x666 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x673 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x691 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69E SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BC PUSH2 0x209D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x212F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x715 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0x4254 JUMP JUMPDEST PUSH2 0x24E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x752 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x2510 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75F SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x78F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78A SWAP2 SWAP1 PUSH2 0x42C0 JUMP JUMPDEST PUSH2 0x253F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7B3 SWAP2 SWAP1 PUSH2 0x4435 JUMP JUMPDEST PUSH2 0x2555 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7DC SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7EE SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x819 SWAP2 SWAP1 PUSH2 0x4491 JUMP JUMPDEST PUSH2 0x26B5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x847 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x842 SWAP2 SWAP1 PUSH2 0x4660 JUMP JUMPDEST PUSH2 0x28C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x870 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH2 0x28EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x87D SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A8 SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST PUSH2 0x291B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x3E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E5 SWAP2 SWAP1 PUSH2 0x46E3 JUMP JUMPDEST PUSH2 0x2984 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x927 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x922 SWAP2 SWAP1 PUSH2 0x3C72 JUMP JUMPDEST PUSH2 0x2A18 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x9F4 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xA04 JUMPI POP PUSH2 0xA03 DUP3 PUSH2 0x2A9E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA2C JUMPI PUSH2 0xA2B PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA5A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA7B JUMPI PUSH2 0xA7A PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAA9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST PUSH1 0x7 SLOAD DUP2 GT PUSH2 0xC00 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB05 JUMPI PUSH2 0xB04 PUSH2 0x4723 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD8 JUMPI DUP3 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xB9D JUMPI PUSH2 0xB9C PUSH2 0x4723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xBBD JUMPI PUSH2 0xBBC PUSH2 0x4723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP1 PUSH2 0xBD4 SWAP1 PUSH2 0x4781 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0xBE4 SWAP1 PUSH2 0x4781 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAC0 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0xBF8 SWAP1 PUSH2 0x4781 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAB4 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC1D JUMPI PUSH2 0xC1C PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC4B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC6A JUMPI PUSH2 0xC69 PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC98 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD2D JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCB9 JUMPI PUSH2 0xCB8 PUSH2 0x4723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCD4 JUMPI PUSH2 0xCD3 PUSH2 0x4723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xCF3 JUMPI PUSH2 0xCF2 PUSH2 0x4723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD0E JUMPI PUSH2 0xD0D PUSH2 0x4723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0xD25 SWAP1 PUSH2 0x4781 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC9E JUMP JUMPDEST POP DUP2 DUP2 SWAP7 POP SWAP7 POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xD4D SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD79 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDC6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD9B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDC6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDA9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDB DUP3 PUSH2 0x2B08 JUMP JUMPDEST POP PUSH2 0xDE5 DUP3 PUSH2 0x2B90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDFE DUP3 DUP3 PUSH2 0xDF9 PUSH2 0x2BCD JUMP JUMPDEST PUSH2 0x2BD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xE61 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xE4D JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0xE86 JUMPI POP PUSH1 0x7 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xEC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBC SWAP1 PUSH2 0x4875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF15 SWAP1 PUSH2 0x48E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC8 SWAP1 PUSH2 0x494D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 GT ISZERO PUSH2 0x102A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1021 SWAP1 PUSH2 0x49B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x103D SWAP1 PUSH2 0x4781 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1069 SWAP1 PUSH2 0x49D9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x11FA CALLER PUSH1 0x8 SLOAD PUSH2 0x2BE7 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x10 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x129B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1292 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12AF DUP4 DUP4 PUSH2 0x12AA PUSH2 0x2BCD JUMP JUMPDEST PUSH2 0x2C05 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1325 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D4 SWAP1 PUSH2 0x4A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x144F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1446 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x14AB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x28C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x14CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x152F SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x155B SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15A8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15A8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x158B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0x15CF SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15FB SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1648 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x161D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1648 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x162B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x6 ADD DUP1 SLOAD PUSH2 0x165D SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1689 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x7 ADD DUP1 SLOAD PUSH2 0x16EB SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1717 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1764 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1739 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1764 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1747 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0x1779 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17A5 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x9 ADD DUP1 SLOAD PUSH2 0x1807 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1833 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1880 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1855 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1880 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1863 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0xA ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP12 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BB DUP3 PUSH2 0x2B08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18CA PUSH2 0x2E1F JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x18DD JUMPI POP PUSH1 0x7 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x191C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1913 SWAP1 PUSH2 0x4B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C6 SWAP1 PUSH2 0x4BC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A38 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B32 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B29 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B81 PUSH2 0x2E1F JUMP JUMPDEST PUSH2 0x1B8B PUSH1 0x0 PUSH2 0x2EA6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1C18 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1C04 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2C PUSH2 0x3AD5 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1C65 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C91 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CDE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CB3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CDE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CC1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x1D15 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D41 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D8E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D63 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D8E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D71 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x1DA7 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DD3 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E20 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DF5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E20 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E03 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH2 0x1E39 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E65 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EB2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E87 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1EB2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E95 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD DUP1 SLOAD PUSH2 0x1ECB SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EF7 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD DUP1 SLOAD PUSH2 0x1F5D SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F89 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1FD6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FAB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1FD6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x20AC SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20D8 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2125 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2125 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2108 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x21A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2197 SWAP1 PUSH2 0x4C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2212 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2209 SWAP1 PUSH2 0x4AF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2246 DUP3 PUSH2 0x18B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x22B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22AE SWAP1 PUSH2 0x4CA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2325 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x231C SWAP1 PUSH2 0x4D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0x2382 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2379 SWAP1 PUSH2 0x4D79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x23A8 SWAP1 PUSH2 0x4DCA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x242E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2425 SWAP1 PUSH2 0x4E2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2439 DUP4 CALLER DUP7 PUSH2 0x2F6C JUMP JUMPDEST CALLER PUSH1 0xA PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2551 PUSH2 0x254A PUSH2 0x2BCD JUMP JUMPDEST DUP4 DUP4 PUSH2 0x30D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x2568 JUMPI POP PUSH1 0x7 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x25A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259E SWAP1 PUSH2 0x4875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x264B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2642 SWAP1 PUSH2 0x4EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD SWAP1 DUP2 PUSH2 0x266E SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x26BD PUSH2 0x2E1F JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x26D0 SWAP1 PUSH2 0x4781 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x277C SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x27B0 SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP2 PUSH2 0x27C6 SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SWAP1 DUP2 PUSH2 0x27DC SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SWAP1 DUP2 PUSH2 0x27F3 SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SWAP1 DUP2 PUSH2 0x280A SWAP2 SWAP1 PUSH2 0x5089 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x28D2 DUP5 DUP5 DUP5 PUSH2 0x1229 JUMP JUMPDEST PUSH2 0x28E6 PUSH2 0x28DD PUSH2 0x2BCD JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x3248 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2926 DUP3 PUSH2 0x2B08 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2931 PUSH2 0x33F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2951 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x297C JUMP JUMPDEST DUP1 PUSH2 0x295B DUP5 PUSH2 0x3410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x296C SWAP3 SWAP2 SWAP1 PUSH2 0x5197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A20 PUSH2 0x2E1F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A92 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A89 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A9B DUP2 PUSH2 0x2EA6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B14 DUP4 PUSH2 0x34DE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B87 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7E SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2BE2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x351B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2C01 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x36E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2C11 DUP5 PUSH2 0x34DE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C53 JUMPI PUSH2 0x2C52 DUP2 DUP5 DUP7 PUSH2 0x3704 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2CE4 JUMPI PUSH2 0x2C95 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x351B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D67 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2E27 PUSH2 0x2BCD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E45 PUSH2 0x206D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA4 JUMPI PUSH2 0x2E68 PUSH2 0x2BCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9B SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2FDE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FD5 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2FEC DUP4 DUP4 PUSH1 0x0 PUSH2 0x2C05 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x305F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3056 SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x30D3 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4A02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x314A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3141 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x323B SWAP2 SWAP1 PUSH2 0x3BF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x33F2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32A7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5210 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x32E3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32E0 SWAP2 SWAP1 PUSH2 0x5271 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3367 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3313 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3318 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x335F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3356 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x33F0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E7 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x341F DUP5 PUSH2 0x37C8 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x343E JUMPI PUSH2 0x343D PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3470 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x34D3 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x34C7 JUMPI PUSH2 0x34C6 PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x347E JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x3554 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3688 JUMPI PUSH1 0x0 PUSH2 0x3564 DUP5 PUSH2 0x2B08 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x35CF JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x35E2 JUMPI POP PUSH2 0x35E0 DUP2 DUP5 PUSH2 0x2984 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3624 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361B SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x3686 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x36EA DUP4 DUP4 PUSH2 0x391B JUMP JUMPDEST PUSH2 0x36FF PUSH2 0x36F5 PUSH2 0x2BCD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x3248 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x370F DUP4 DUP4 DUP4 PUSH2 0x3A14 JUMP JUMPDEST PUSH2 0x37C3 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3784 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x377B SWAP2 SWAP1 PUSH2 0x3F44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37BA SWAP3 SWAP2 SWAP1 PUSH2 0x52CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3826 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x381C JUMPI PUSH2 0x381B PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3863 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x3859 JUMPI PUSH2 0x3858 PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3892 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x3888 JUMPI PUSH2 0x3887 PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x38BB JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x38B1 JUMPI PUSH2 0x38B0 PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x38E0 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x38D6 JUMPI PUSH2 0x38D5 PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3903 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x38F9 JUMPI PUSH2 0x38F8 PUSH2 0x529E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3912 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x398D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3984 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x399B DUP4 DUP4 PUSH1 0x0 PUSH2 0x2C05 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A0F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A06 SWAP2 SWAP1 PUSH2 0x3EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3ACC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x3A8D JUMPI POP PUSH2 0x3A8C DUP5 DUP5 PUSH2 0x2984 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x3ACB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AB3 DUP4 PUSH2 0x2B90 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B8E DUP2 PUSH2 0x3B59 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BAB DUP2 PUSH2 0x3B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BC7 JUMPI PUSH2 0x3BC6 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BD5 DUP5 DUP3 DUP6 ADD PUSH2 0x3B9C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BF3 DUP2 PUSH2 0x3BDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C0E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3F DUP3 PUSH2 0x3C14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C4F DUP2 PUSH2 0x3C34 JUMP JUMPDEST DUP2 EQ PUSH2 0x3C5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C6C DUP2 PUSH2 0x3C46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C88 JUMPI PUSH2 0x3C87 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C96 DUP5 DUP3 DUP6 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CDE DUP2 PUSH2 0x3CCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CF0 DUP4 DUP4 PUSH2 0x3CD5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D14 DUP3 PUSH2 0x3C9F JUMP JUMPDEST PUSH2 0x3D1E DUP2 DUP6 PUSH2 0x3CAA JUMP JUMPDEST SWAP4 POP PUSH2 0x3D29 DUP4 PUSH2 0x3CBB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D5A JUMPI DUP2 MLOAD PUSH2 0x3D41 DUP9 DUP3 PUSH2 0x3CE4 JUMP JUMPDEST SWAP8 POP PUSH2 0x3D4C DUP4 PUSH2 0x3CFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3D2D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D81 DUP2 DUP6 PUSH2 0x3D09 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3D95 DUP2 DUP5 PUSH2 0x3D09 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3DD8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3DBD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E00 DUP3 PUSH2 0x3D9E JUMP JUMPDEST PUSH2 0x3E0A DUP2 DUP6 PUSH2 0x3DA9 JUMP JUMPDEST SWAP4 POP PUSH2 0x3E1A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3DBA JUMP JUMPDEST PUSH2 0x3E23 DUP2 PUSH2 0x3DE4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E48 DUP2 DUP5 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E59 DUP2 PUSH2 0x3CCB JUMP JUMPDEST DUP2 EQ PUSH2 0x3E64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E76 DUP2 PUSH2 0x3E50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E92 JUMPI PUSH2 0x3E91 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EA0 DUP5 DUP3 DUP6 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EB2 DUP2 PUSH2 0x3C34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3ECD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3EA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3EEA JUMPI PUSH2 0x3EE9 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EF8 DUP6 DUP3 DUP7 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F09 DUP6 DUP3 DUP7 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F2D DUP2 DUP5 PUSH2 0x3D09 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3F3E DUP2 PUSH2 0x3CCB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F59 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3F35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F76 JUMPI PUSH2 0x3F75 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3F84 DUP6 DUP3 DUP7 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3F95 DUP6 DUP3 DUP7 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3FB8 JUMPI PUSH2 0x3FB7 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3FC6 DUP7 DUP3 DUP8 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3FD7 DUP7 DUP3 DUP8 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3FE8 DUP7 DUP3 DUP8 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x4008 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x3F35 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x401A DUP2 DUP14 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x4029 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x3F35 JUMP JUMPDEST PUSH2 0x4036 PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x3F35 JUMP JUMPDEST PUSH2 0x4043 PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x3F35 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x4055 DUP2 DUP10 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x4069 DUP2 DUP9 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x407D DUP2 DUP8 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x4092 DUP2 DUP7 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x40A7 DUP2 DUP6 PUSH2 0x3DF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x40B7 PUSH2 0x140 DUP4 ADD DUP5 PUSH2 0x3EA9 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E3 DUP3 PUSH2 0x3D9E JUMP JUMPDEST PUSH2 0x40ED DUP2 DUP6 PUSH2 0x40C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x40FD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3DBA JUMP JUMPDEST PUSH2 0x4106 DUP2 PUSH2 0x3DE4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x411A DUP2 PUSH2 0x3C34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x4139 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x3CD5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x4151 DUP3 DUP3 PUSH2 0x40D8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x4166 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3CD5 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x4179 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x3CD5 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x418C PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x3CD5 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x41A4 DUP3 DUP3 PUSH2 0x40D8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x41BE DUP3 DUP3 PUSH2 0x40D8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x41D8 DUP3 DUP3 PUSH2 0x40D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x100 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x41F4 DUP3 DUP3 PUSH2 0x40D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x120 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x4210 DUP3 DUP3 PUSH2 0x40D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x140 DUP4 ADD MLOAD PUSH2 0x4227 PUSH2 0x140 DUP7 ADD DUP3 PUSH2 0x4111 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x424C DUP2 DUP5 PUSH2 0x4120 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x426B JUMPI PUSH2 0x426A PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4279 DUP6 DUP3 DUP7 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x428A DUP6 DUP3 DUP7 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x429D DUP2 PUSH2 0x3BDE JUMP JUMPDEST DUP2 EQ PUSH2 0x42A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x42BA DUP2 PUSH2 0x4294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42D7 JUMPI PUSH2 0x42D6 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42E5 DUP6 DUP3 DUP7 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x42F6 DUP6 DUP3 DUP7 ADD PUSH2 0x42AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4342 DUP3 PUSH2 0x3DE4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4361 JUMPI PUSH2 0x4360 PUSH2 0x430A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4374 PUSH2 0x3B45 JUMP JUMPDEST SWAP1 POP PUSH2 0x4380 DUP3 DUP3 PUSH2 0x4339 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x43A0 JUMPI PUSH2 0x439F PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH2 0x43A9 DUP3 PUSH2 0x3DE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43D8 PUSH2 0x43D3 DUP5 PUSH2 0x4385 JUMP JUMPDEST PUSH2 0x436A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x43F4 JUMPI PUSH2 0x43F3 PUSH2 0x4305 JUMP JUMPDEST JUMPDEST PUSH2 0x43FF DUP5 DUP3 DUP6 PUSH2 0x43B6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x441C JUMPI PUSH2 0x441B PUSH2 0x4300 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x442C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x43C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x444C JUMPI PUSH2 0x444B PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x445A DUP6 DUP3 DUP7 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x447B JUMPI PUSH2 0x447A PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x4487 DUP6 DUP3 DUP7 ADD PUSH2 0x4407 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x44B0 JUMPI PUSH2 0x44AF PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44CE JUMPI PUSH2 0x44CD PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x44DA DUP11 DUP3 DUP12 ADD PUSH2 0x4407 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x44EB DUP11 DUP3 DUP12 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x44FC DUP11 DUP3 DUP12 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x451D JUMPI PUSH2 0x451C PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x4529 DUP11 DUP3 DUP12 ADD PUSH2 0x4407 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x454A JUMPI PUSH2 0x4549 PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x4556 DUP11 DUP3 DUP12 ADD PUSH2 0x4407 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4577 JUMPI PUSH2 0x4576 PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x4583 DUP11 DUP3 DUP12 ADD PUSH2 0x4407 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x45A4 JUMPI PUSH2 0x45A3 PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x45B0 DUP11 DUP3 DUP12 ADD PUSH2 0x4407 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x45DA JUMPI PUSH2 0x45D9 PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH2 0x45E3 DUP3 PUSH2 0x3DE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4603 PUSH2 0x45FE DUP5 PUSH2 0x45BF JUMP JUMPDEST PUSH2 0x436A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x461F JUMPI PUSH2 0x461E PUSH2 0x4305 JUMP JUMPDEST JUMPDEST PUSH2 0x462A DUP5 DUP3 DUP6 PUSH2 0x43B6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4647 JUMPI PUSH2 0x4646 PUSH2 0x4300 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4657 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x45F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x467A JUMPI PUSH2 0x4679 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4688 DUP8 DUP3 DUP9 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4699 DUP8 DUP3 DUP9 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x46AA DUP8 DUP3 DUP9 ADD PUSH2 0x3E67 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x46CB JUMPI PUSH2 0x46CA PUSH2 0x3B54 JUMP JUMPDEST JUMPDEST PUSH2 0x46D7 DUP8 DUP3 DUP9 ADD PUSH2 0x4632 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46FA JUMPI PUSH2 0x46F9 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4708 DUP6 DUP3 DUP7 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4719 DUP6 DUP3 DUP7 ADD PUSH2 0x3C5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x478C DUP3 PUSH2 0x3CCB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x47BE JUMPI PUSH2 0x47BD PUSH2 0x4752 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4810 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4823 JUMPI PUSH2 0x4822 PUSH2 0x47C9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F63636173696F6E20494400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x485F PUSH1 0x13 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x486A DUP3 PUSH2 0x4829 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x488E DUP2 PUSH2 0x4852 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74204554482073656E740000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48CB PUSH1 0x15 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x48D6 DUP3 PUSH2 0x4895 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48FA DUP2 PUSH2 0x48BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5365617420616C72656164792074616B656E0000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4937 PUSH1 0x12 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4942 DUP3 PUSH2 0x4901 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4966 DUP2 PUSH2 0x492A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642073656174206E756D62657200000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A3 PUSH1 0x13 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x49AE DUP3 PUSH2 0x496D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49D2 DUP2 PUSH2 0x4996 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49E4 DUP3 PUSH2 0x3CCB JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x49F7 JUMPI PUSH2 0x49F6 PUSH2 0x4752 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4A17 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3EA9 JUMP JUMPDEST PUSH2 0x4A24 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3F35 JUMP JUMPDEST PUSH2 0x4A31 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3EA9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E6572206F6620746865207469636B65740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A6F PUSH1 0x1B DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A7A DUP3 PUSH2 0x4A39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A9E DUP2 PUSH2 0x4A62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5469636B657420616C7265616479207573656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ADB PUSH1 0x13 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AE6 DUP3 PUSH2 0x4AA5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B0A DUP2 PUSH2 0x4ACE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206576656E7420494400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B47 PUSH1 0x10 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B52 DUP3 PUSH2 0x4B11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B76 DUP2 PUSH2 0x4B3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656174206E6F74206F63637570696564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BB3 PUSH1 0x11 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BBE DUP3 PUSH2 0x4B7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BE2 DUP2 PUSH2 0x4BA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526573616C65206E6F7420616C6C6F7765640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C1F PUSH1 0x12 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C2A DUP3 PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C4E DUP2 PUSH2 0x4C12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207469636B6574000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C8B PUSH1 0xE DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C96 DUP3 PUSH2 0x4C55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CBA DUP2 PUSH2 0x4C7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742062757920796F7572206F776E207469636B6574000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CF7 PUSH1 0x1A DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D02 DUP3 PUSH2 0x4CC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D26 DUP2 PUSH2 0x4CEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D63 PUSH1 0x18 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D6E DUP3 PUSH2 0x4D2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D92 DUP2 PUSH2 0x4D56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DB4 PUSH1 0x0 DUP4 PUSH2 0x4D99 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DBF DUP3 PUSH2 0x4DA4 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD5 DUP3 PUSH2 0x4DA7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796D656E74207472616E73666572206661696C6564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E15 PUSH1 0x17 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E20 DUP3 PUSH2 0x4DDF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E44 DUP2 PUSH2 0x4E08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206576656E742063726561746F722063616E20736574205652207669 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x64656F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA7 PUSH1 0x23 DUP4 PUSH2 0x3DA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EB2 DUP3 PUSH2 0x4E4B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4ED6 DUP2 PUSH2 0x4E9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4F3F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4F02 JUMP JUMPDEST PUSH2 0x4F49 DUP7 DUP4 PUSH2 0x4F02 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F86 PUSH2 0x4F81 PUSH2 0x4F7C DUP5 PUSH2 0x3CCB JUMP JUMPDEST PUSH2 0x4F61 JUMP JUMPDEST PUSH2 0x3CCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FA0 DUP4 PUSH2 0x4F6B JUMP JUMPDEST PUSH2 0x4FB4 PUSH2 0x4FAC DUP3 PUSH2 0x4F8D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4F0F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4FC9 PUSH2 0x4FBC JUMP JUMPDEST PUSH2 0x4FD4 DUP2 DUP5 DUP5 PUSH2 0x4F97 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4FF8 JUMPI PUSH2 0x4FED PUSH1 0x0 DUP3 PUSH2 0x4FC1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4FDA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x503D JUMPI PUSH2 0x500E DUP2 PUSH2 0x4EDD JUMP JUMPDEST PUSH2 0x5017 DUP5 PUSH2 0x4EF2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5026 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x503A PUSH2 0x5032 DUP6 PUSH2 0x4EF2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4FD9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5060 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5042 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5079 DUP4 DUP4 PUSH2 0x504F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5092 DUP3 PUSH2 0x3D9E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x50AB JUMPI PUSH2 0x50AA PUSH2 0x430A JUMP JUMPDEST JUMPDEST PUSH2 0x50B5 DUP3 SLOAD PUSH2 0x47F8 JUMP JUMPDEST PUSH2 0x50C0 DUP3 DUP3 DUP6 PUSH2 0x4FFC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x50F3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x50E1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x50EB DUP6 DUP3 PUSH2 0x506D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5153 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x5101 DUP7 PUSH2 0x4EDD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5129 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5104 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5146 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5142 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x504F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5171 DUP3 PUSH2 0x3D9E JUMP JUMPDEST PUSH2 0x517B DUP2 DUP6 PUSH2 0x515B JUMP JUMPDEST SWAP4 POP PUSH2 0x518B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3DBA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51A3 DUP3 DUP6 PUSH2 0x5166 JUMP JUMPDEST SWAP2 POP PUSH2 0x51AF DUP3 DUP5 PUSH2 0x5166 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E2 DUP3 PUSH2 0x51BB JUMP JUMPDEST PUSH2 0x51EC DUP2 DUP6 PUSH2 0x51C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x51FC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3DBA JUMP JUMPDEST PUSH2 0x5205 DUP2 PUSH2 0x3DE4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x5225 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3EA9 JUMP JUMPDEST PUSH2 0x5232 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3EA9 JUMP JUMPDEST PUSH2 0x523F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3F35 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5251 DUP2 DUP5 PUSH2 0x51D7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x526B DUP2 PUSH2 0x3B85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5287 JUMPI PUSH2 0x5286 PUSH2 0x3B4F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5295 DUP5 DUP3 DUP6 ADD PUSH2 0x525C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x52E2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3EA9 JUMP JUMPDEST PUSH2 0x52EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F35 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SWAP13 0xFB PUSH17 0x28F2BC701FB28A9D5D82F52C52D98017A2 PUSH19 0x8D98C0F622DC7D4B3AEB64736F6C6343000814 STOP CALLER ","sourceMap":"183:5764:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:300:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2810:973:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2364:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2686:116:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;267:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1770:788;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4142:578:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4372:293:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4786:132:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;829:47:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1088:68;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;638:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2184:118:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3933:431:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1919:208:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;3791:134:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2566:112;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1029:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:29:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4669:980:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;761:61;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;883:67;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5657:287:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;690:64;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1235:527;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4984:233:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;957:65:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2676:255:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3927:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1560:300:2;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;2810:973:16:-;2870:16;2888;2917:25;2959:11;;2945:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2917:54;;2982:24;3023:11;;3009:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2982:53;;3046:13;3081:9;3093:1;3081:13;;3076:376;3101:14;;3096:1;:19;3076:376;;3142:9;3137:304;3161:10;:13;3172:1;3161:13;;;;;;;;;;;:20;;;;3157:1;:24;3137:304;;;3207:12;3222:10;:13;3233:1;3222:13;;;;;;;;;;;3236:1;3222:16;;;;;;;;:::i;:::-;;;;;;;;;;3207:31;;3283:5;3261:27;;:9;:12;3271:1;3261:12;;;;;;;;;;;:18;3274:4;3261:18;;;;;;;;;;;;;;;;;;;;;:27;;;3257:169;;3331:1;3313:8;3322:5;3313:15;;;;;;;;:::i;:::-;;;;;;;:19;;;;;3372:4;3355:7;3363:5;3355:14;;;;;;;;:::i;:::-;;;;;;;:21;;;;;3399:7;;;;;:::i;:::-;;;;3257:169;3188:253;3183:3;;;;;:::i;:::-;;;;3137:304;;;;3117:3;;;;;:::i;:::-;;;;3076:376;;;;3464:30;3511:5;3497:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3464:53;;3528:29;3574:5;3560:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3528:52;;3596:9;3591:136;3615:5;3611:1;:9;3591:136;;;3661:8;3670:1;3661:11;;;;;;;;:::i;:::-;;;;;;;;3642:13;3656:1;3642:16;;;;;;;;:::i;:::-;;;;;;;:30;;;;;3705:7;3713:1;3705:10;;;;;;;;:::i;:::-;;;;;;;;3687:12;3700:1;3687:15;;;;;;;;:::i;:::-;;;;;;;:28;;;;;3622:3;;;;;:::i;:::-;;;;3591:136;;;;3747:13;3762:12;3739:36;;;;;;;;;2810:973;;;:::o;2364:89:2:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;2686:116:16:-;2743:16;2779:10;:15;2790:3;2779:15;;;;;;;;;;;2772:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2686:116;;;:::o;267:26::-;;;;:::o;1770:788::-;1853:1;1846:3;:8;;:33;;;;;1865:14;;1858:3;:21;;1846:33;1838:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1935:9;:14;1945:3;1935:14;;;;;;;;;;;:19;;;1922:9;:32;;1914:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2032:1;1999:35;;:9;:14;2009:3;1999:14;;;;;;;;;;;:21;2014:5;1999:21;;;;;;;;;;;;;;;;;;;;;:35;;;1991:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2085:9;:14;2095:3;2085:14;;;;;;;;;;;:25;;;2076:5;:34;;2068:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2147:11;;:13;;;;;;;;;:::i;:::-;;;;;;2171:9;:14;2181:3;2171:14;;;;;;;;;;;:22;;;:24;;;;;;;;;:::i;:::-;;;;;;2235:4;2206:9;:14;2216:3;2206:14;;;;;;;;;;;:26;2221:10;2206:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;2274:10;2250:9;:14;2260:3;2250:14;;;;;;;;;;;:21;2265:5;2250:21;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2295:10;:15;2306:3;2295:15;;;;;;;;;;;2316:5;2295:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2361:5;2333:13;:18;2347:3;2333:18;;;;;;;;;;;:25;2352:5;2333:25;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;2407:5;2377:15;:20;2393:3;2377:20;;;;;;;;;;;:27;2398:5;2377:27;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2425:34;2435:10;2447:11;;2425:9;:34::i;:::-;2498:11;;2470:13;:18;2484:3;2470:18;;;;;;;;;;;:25;2489:5;2470:25;;;;;;;;;;;:39;;;;1770:788;;:::o;4142:578:2:-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;4372:293:16:-;4487:10;4455:42;;:9;:19;4465:8;4455:19;;;;;;;;;;;:28;4475:7;4455:28;;;;;;;;;;;;;;;;;;;;;:42;;;4447:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;4549:15;:25;4565:8;4549:25;;;;;;;;;;;:34;4575:7;4549:34;;;;;;;;;;;;;;;;;;;;;4548:35;4540:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4653:4;4618:13;:23;4632:8;4618:23;;;;;;;;;;;:32;4642:7;4618:32;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;4372:293;;:::o;4786:132:2:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;829:47:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1088:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;638:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2184:118:2:-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;3933:431:16:-;1531:13:0;:11;:13::i;:::-;4036:1:16::1;4024:8;:13;;:43;;;;;4053:14;;4041:8;:26;;4024:43;4016:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;4147:1;4107:42;;:9;:19;4117:8;4107:19;;;;;;;;;;;:28;4127:7;4107:28;;;;;;;;;;;;;;;;;;;;;:42;;::::0;4099:72:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4193:15;:25;4209:8;4193:25;;;;;;;;;;;:34;4219:7;4193:34;;;;;;;;;;;;;;;;;;;;;4192:35;4184:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4301:4;4264:15;:25;4280:8;4264:25;;;;;;;;;;;:34;4290:7;4264:34;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;4351:5;4316:13;:23;4330:8;4316:23;;;;;;;;;;;:32;4340:7;4316:32;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3933:431:::0;;:::o;1919:208:2:-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3791:134:16:-;3858:16;3894:13;:23;3908:8;3894:23;;;;;;;;;;;;;;;3887:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3791:134;;;:::o;2566:112::-;2621:15;;:::i;:::-;2656:9;:14;2666:3;2656:14;;;;;;;;;;;2649:21;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2566:112;;;:::o;1029:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;231:29:16:-;;;;:::o;2517:93:2:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;4669:980:16:-;4761:13;:23;4775:8;4761:23;;;;;;;;;;;:34;4785:9;4761:34;;;;;;;;;;;;;;;;;;;;;4753:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;4834:15;:25;4850:8;4834:25;;;;;;;;;;;:36;4860:9;4834:36;;;;;;;;;;;;;;;;;;;;;4833:37;4825:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:15;4921:13;:23;4935:8;4921:23;;;;;;;;;;;:34;4945:9;4921:34;;;;;;;;;;;;4903:52;;4962:20;4985:16;4993:7;4985;:16::i;:::-;4962:39;;5040:1;5016:26;;:12;:26;;;5008:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;5092:10;5076:26;;:12;:26;;;5068:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;5142:19;5164:9;:19;5174:8;5164:19;;;;;;;;;;;:24;;;5142:46;;5216:11;5203:9;:24;5195:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5312:9;5335:12;5327:26;;5361:11;5327:50;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5311:66;;;5392:4;5384:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;5480:44;5490:12;5504:10;5516:7;5480:9;:44::i;:::-;5564:10;5531:9;:19;5541:8;5531:19;;;;;;;;;;;:30;5551:9;5531:30;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;5620:5;5583:13;:23;5597:8;5583:23;;;;;;;;;;;:34;5607:9;5583:34;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;4746:903;;;;4669:980;;:::o;761:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;883:67::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3717:144:2:-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;5657:287:16:-;5747:1;5740:3;:8;;:33;;;;;5759:14;;5752:3;:21;;5740:33;5732:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;5842:10;5816:36;;:9;:14;5826:3;5816:14;;;;;;;;;;;:22;;;;;;;;;;;;:36;;;5808:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;5928:8;5903:9;:14;5913:3;5903:14;;;;;;;;;;;:22;;:33;;;;;;:::i;:::-;;5657:287;;:::o;690:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1235:527::-;1531:13:0;:11;:13::i;:::-;1499:14:16::1;;:16;;;;;;;;;:::i;:::-;;;;;;1554:143;;;;;;;;1577:14;;1554:143;;;;1593:5;1554:143;;;;1600:5;1554:143;;;;1607:11;1554:143;;;;1620:11;1554:143;;;;1633:5;1554:143;;;;1640:5;1554:143;;;;1647:9;1554:143;;;;1658:12;1554:143;;;;;;;;;;;;;;;::::0;::::1;;;;1676:10;1554:143;;;;::::0;1526:9:::1;:25;1536:14;;1526:25;;;;;;;;;;;:171;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1708:13;:25;1722:10;1708:25;;;;;;;;;;;;;;;1739:14;;1708:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1235:527:::0;;;;;;;:::o;4984:233:2:-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;957:65:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2676:255:2:-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;3927:153::-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;763:146:10:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;16212:241:2:-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;14492:120:2:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;10656:100::-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;:::-;10656:100;;:::o;8861:795::-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;12061:460:2:-;12160:1;12146:16;;:2;:16;;;12142:87;;12215:1;12185:33;;;;;;;;;;;:::i;:::-;;;;;;;;12142:87;12238:21;12262:32;12270:2;12274:7;12291:1;12262:7;:32::i;:::-;12238:56;;12333:1;12308:27;;:13;:27;;;12304:211;;12381:7;12358:31;;;;;;;;;;;:::i;:::-;;;;;;;;12304:211;12427:4;12410:21;;:13;:21;;;12406:109;;12475:4;12481:7;12490:13;12454:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;12406:109;12132:389;12061:460;;;:::o;15665:312::-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;985:924:6:-;1182:1;1165:2;:14;;;:18;1161:742;;;1219:2;1203:36;;;1240:8;1250:4;1256:7;1265:4;1203:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:1;1560:6;:13;:18;1556:323;;1700:2;1664:39;;;;;;;;;;;:::i;:::-;;;;;;;;1556:323;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;1327:41;;;1317:51;;;:6;:51;;;;1313:182;;1473:2;1437:39;;;;;;;;;;;:::i;:::-;;;;;;;;1313:182;1271:238;1161:742;985:924;;;;;:::o;3173:92:2:-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;987:632:9:-;1043:13;1092:14;1129:1;1109:17;1120:5;1109:10;:17::i;:::-;:21;1092:38;;1144:20;1178:6;1167:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:41;;1199:11;1294:6;1290:2;1286:15;1278:6;1274:28;1267:35;;1329:247;1336:4;1329:247;;;1360:5;;;;;;;;1464:10;1459:2;1452:5;1448:14;1443:32;1438:3;1430:46;1520:2;1511:11;;;;;;:::i;:::-;;;;;1553:1;1544:5;:10;1329:247;1540:21;1329:247;1596:6;1589:13;;;;;987:632;;;:::o;5732:115:2:-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;10977:207::-;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;11133:12;:10;:12::i;:::-;11155:1;11159:2;11163:7;11172:4;11099:33;:78::i;:::-;10977:207;;;:::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;25316:916:12:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;9978:327:2:-;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;6401:272::-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;:21::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:329::-;2084:6;2133:2;2121:9;2112:7;2108:23;2104:32;2101:119;;;2139:79;;:::i;:::-;2101:119;2259:1;2284:53;2329:7;2320:6;2309:9;2305:22;2284:53;:::i;:::-;2274:63;;2230:117;2025:329;;;;:::o;2360:114::-;2427:6;2461:5;2455:12;2445:22;;2360:114;;;:::o;2480:184::-;2579:11;2613:6;2608:3;2601:19;2653:4;2648:3;2644:14;2629:29;;2480:184;;;;:::o;2670:132::-;2737:4;2760:3;2752:11;;2790:4;2785:3;2781:14;2773:22;;2670:132;;;:::o;2808:77::-;2845:7;2874:5;2863:16;;2808:77;;;:::o;2891:108::-;2968:24;2986:5;2968:24;:::i;:::-;2963:3;2956:37;2891:108;;:::o;3005:179::-;3074:10;3095:46;3137:3;3129:6;3095:46;:::i;:::-;3173:4;3168:3;3164:14;3150:28;;3005:179;;;;:::o;3190:113::-;3260:4;3292;3287:3;3283:14;3275:22;;3190:113;;;:::o;3339:732::-;3458:3;3487:54;3535:5;3487:54;:::i;:::-;3557:86;3636:6;3631:3;3557:86;:::i;:::-;3550:93;;3667:56;3717:5;3667:56;:::i;:::-;3746:7;3777:1;3762:284;3787:6;3784:1;3781:13;3762:284;;;3863:6;3857:13;3890:63;3949:3;3934:13;3890:63;:::i;:::-;3883:70;;3976:60;4029:6;3976:60;:::i;:::-;3966:70;;3822:224;3809:1;3806;3802:9;3797:14;;3762:284;;;3766:14;4062:3;4055:10;;3463:608;;;3339:732;;;;:::o;4077:634::-;4298:4;4336:2;4325:9;4321:18;4313:26;;4385:9;4379:4;4375:20;4371:1;4360:9;4356:17;4349:47;4413:108;4516:4;4507:6;4413:108;:::i;:::-;4405:116;;4568:9;4562:4;4558:20;4553:2;4542:9;4538:18;4531:48;4596:108;4699:4;4690:6;4596:108;:::i;:::-;4588:116;;4077:634;;;;;:::o;4717:99::-;4769:6;4803:5;4797:12;4787:22;;4717:99;;;:::o;4822:169::-;4906:11;4940:6;4935:3;4928:19;4980:4;4975:3;4971:14;4956:29;;4822:169;;;;:::o;4997:246::-;5078:1;5088:113;5102:6;5099:1;5096:13;5088:113;;;5187:1;5182:3;5178:11;5172:18;5168:1;5163:3;5159:11;5152:39;5124:2;5121:1;5117:10;5112:15;;5088:113;;;5235:1;5226:6;5221:3;5217:16;5210:27;5059:184;4997:246;;;:::o;5249:102::-;5290:6;5341:2;5337:7;5332:2;5325:5;5321:14;5317:28;5307:38;;5249:102;;;:::o;5357:377::-;5445:3;5473:39;5506:5;5473:39;:::i;:::-;5528:71;5592:6;5587:3;5528:71;:::i;:::-;5521:78;;5608:65;5666:6;5661:3;5654:4;5647:5;5643:16;5608:65;:::i;:::-;5698:29;5720:6;5698:29;:::i;:::-;5693:3;5689:39;5682:46;;5449:285;5357:377;;;;:::o;5740:313::-;5853:4;5891:2;5880:9;5876:18;5868:26;;5940:9;5934:4;5930:20;5926:1;5915:9;5911:17;5904:47;5968:78;6041:4;6032:6;5968:78;:::i;:::-;5960:86;;5740:313;;;;:::o;6059:122::-;6132:24;6150:5;6132:24;:::i;:::-;6125:5;6122:35;6112:63;;6171:1;6168;6161:12;6112:63;6059:122;:::o;6187:139::-;6233:5;6271:6;6258:20;6249:29;;6287:33;6314:5;6287:33;:::i;:::-;6187:139;;;;:::o;6332:329::-;6391:6;6440:2;6428:9;6419:7;6415:23;6411:32;6408:119;;;6446:79;;:::i;:::-;6408:119;6566:1;6591:53;6636:7;6627:6;6616:9;6612:22;6591:53;:::i;:::-;6581:63;;6537:117;6332:329;;;;:::o;6667:118::-;6754:24;6772:5;6754:24;:::i;:::-;6749:3;6742:37;6667:118;;:::o;6791:222::-;6884:4;6922:2;6911:9;6907:18;6899:26;;6935:71;7003:1;6992:9;6988:17;6979:6;6935:71;:::i;:::-;6791:222;;;;:::o;7019:474::-;7087:6;7095;7144:2;7132:9;7123:7;7119:23;7115:32;7112:119;;;7150:79;;:::i;:::-;7112:119;7270:1;7295:53;7340:7;7331:6;7320:9;7316:22;7295:53;:::i;:::-;7285:63;;7241:117;7397:2;7423:53;7468:7;7459:6;7448:9;7444:22;7423:53;:::i;:::-;7413:63;;7368:118;7019:474;;;;;:::o;7499:373::-;7642:4;7680:2;7669:9;7665:18;7657:26;;7729:9;7723:4;7719:20;7715:1;7704:9;7700:17;7693:47;7757:108;7860:4;7851:6;7757:108;:::i;:::-;7749:116;;7499:373;;;;:::o;7878:118::-;7965:24;7983:5;7965:24;:::i;:::-;7960:3;7953:37;7878:118;;:::o;8002:222::-;8095:4;8133:2;8122:9;8118:18;8110:26;;8146:71;8214:1;8203:9;8199:17;8190:6;8146:71;:::i;:::-;8002:222;;;;:::o;8230:474::-;8298:6;8306;8355:2;8343:9;8334:7;8330:23;8326:32;8323:119;;;8361:79;;:::i;:::-;8323:119;8481:1;8506:53;8551:7;8542:6;8531:9;8527:22;8506:53;:::i;:::-;8496:63;;8452:117;8608:2;8634:53;8679:7;8670:6;8659:9;8655:22;8634:53;:::i;:::-;8624:63;;8579:118;8230:474;;;;;:::o;8710:619::-;8787:6;8795;8803;8852:2;8840:9;8831:7;8827:23;8823:32;8820:119;;;8858:79;;:::i;:::-;8820:119;8978:1;9003:53;9048:7;9039:6;9028:9;9024:22;9003:53;:::i;:::-;8993:63;;8949:117;9105:2;9131:53;9176:7;9167:6;9156:9;9152:22;9131:53;:::i;:::-;9121:63;;9076:118;9233:2;9259:53;9304:7;9295:6;9284:9;9280:22;9259:53;:::i;:::-;9249:63;;9204:118;8710:619;;;;;:::o;9335:1878::-;9829:4;9867:3;9856:9;9852:19;9844:27;;9881:71;9949:1;9938:9;9934:17;9925:6;9881:71;:::i;:::-;9999:9;9993:4;9989:20;9984:2;9973:9;9969:18;9962:48;10027:78;10100:4;10091:6;10027:78;:::i;:::-;10019:86;;10115:72;10183:2;10172:9;10168:18;10159:6;10115:72;:::i;:::-;10197;10265:2;10254:9;10250:18;10241:6;10197:72;:::i;:::-;10279:73;10347:3;10336:9;10332:19;10323:6;10279:73;:::i;:::-;10400:9;10394:4;10390:20;10384:3;10373:9;10369:19;10362:49;10428:78;10501:4;10492:6;10428:78;:::i;:::-;10420:86;;10554:9;10548:4;10544:20;10538:3;10527:9;10523:19;10516:49;10582:78;10655:4;10646:6;10582:78;:::i;:::-;10574:86;;10708:9;10702:4;10698:20;10692:3;10681:9;10677:19;10670:49;10736:78;10809:4;10800:6;10736:78;:::i;:::-;10728:86;;10862:9;10856:4;10852:20;10846:3;10835:9;10831:19;10824:49;10890:78;10963:4;10954:6;10890:78;:::i;:::-;10882:86;;11016:9;11010:4;11006:20;11000:3;10989:9;10985:19;10978:49;11044:78;11117:4;11108:6;11044:78;:::i;:::-;11036:86;;11132:74;11201:3;11190:9;11186:19;11176:7;11132:74;:::i;:::-;9335:1878;;;;;;;;;;;;;;:::o;11219:159::-;11293:11;11327:6;11322:3;11315:19;11367:4;11362:3;11358:14;11343:29;;11219:159;;;;:::o;11384:357::-;11462:3;11490:39;11523:5;11490:39;:::i;:::-;11545:61;11599:6;11594:3;11545:61;:::i;:::-;11538:68;;11615:65;11673:6;11668:3;11661:4;11654:5;11650:16;11615:65;:::i;:::-;11705:29;11727:6;11705:29;:::i;:::-;11700:3;11696:39;11689:46;;11466:275;11384:357;;;;:::o;11747:108::-;11824:24;11842:5;11824:24;:::i;:::-;11819:3;11812:37;11747:108;;:::o;11929:2567::-;12050:3;12086:6;12081:3;12077:16;12173:4;12166:5;12162:16;12156:23;12192:63;12249:4;12244:3;12240:14;12226:12;12192:63;:::i;:::-;12103:162;12347:4;12340:5;12336:16;12330:23;12400:3;12394:4;12390:14;12383:4;12378:3;12374:14;12367:38;12426:73;12494:4;12480:12;12426:73;:::i;:::-;12418:81;;12275:235;12592:4;12585:5;12581:16;12575:23;12611:63;12668:4;12663:3;12659:14;12645:12;12611:63;:::i;:::-;12520:164;12769:4;12762:5;12758:16;12752:23;12788:63;12845:4;12840:3;12836:14;12822:12;12788:63;:::i;:::-;12694:167;12949:4;12942:5;12938:16;12932:23;12968:63;13025:4;13020:3;13016:14;13002:12;12968:63;:::i;:::-;12871:170;13123:4;13116:5;13112:16;13106:23;13176:3;13170:4;13166:14;13159:4;13154:3;13150:14;13143:38;13202:73;13270:4;13256:12;13202:73;:::i;:::-;13194:81;;13051:235;13368:4;13361:5;13357:16;13351:23;13421:3;13415:4;13411:14;13404:4;13399:3;13395:14;13388:38;13447:73;13515:4;13501:12;13447:73;:::i;:::-;13439:81;;13296:235;13617:4;13610:5;13606:16;13600:23;13670:3;13664:4;13660:14;13653:4;13648:3;13644:14;13637:38;13696:73;13764:4;13750:12;13696:73;:::i;:::-;13688:81;;13541:239;13869:6;13862:5;13858:18;13852:25;13926:3;13920:4;13916:14;13907:6;13902:3;13898:16;13891:40;13952:73;14020:4;14006:12;13952:73;:::i;:::-;13944:81;;13790:246;14121:6;14114:5;14110:18;14104:25;14178:3;14172:4;14168:14;14159:6;14154:3;14150:16;14143:40;14204:73;14272:4;14258:12;14204:73;:::i;:::-;14196:81;;14046:242;14373:6;14366:5;14362:18;14356:25;14394:65;14451:6;14446:3;14442:16;14428:12;14394:65;:::i;:::-;14298:171;14486:4;14479:11;;12055:2441;11929:2567;;;;:::o;14502:377::-;14647:4;14685:2;14674:9;14670:18;14662:26;;14734:9;14728:4;14724:20;14720:1;14709:9;14705:17;14698:47;14762:110;14867:4;14858:6;14762:110;:::i;:::-;14754:118;;14502:377;;;;:::o;14885:474::-;14953:6;14961;15010:2;14998:9;14989:7;14985:23;14981:32;14978:119;;;15016:79;;:::i;:::-;14978:119;15136:1;15161:53;15206:7;15197:6;15186:9;15182:22;15161:53;:::i;:::-;15151:63;;15107:117;15263:2;15289:53;15334:7;15325:6;15314:9;15310:22;15289:53;:::i;:::-;15279:63;;15234:118;14885:474;;;;;:::o;15365:116::-;15435:21;15450:5;15435:21;:::i;:::-;15428:5;15425:32;15415:60;;15471:1;15468;15461:12;15415:60;15365:116;:::o;15487:133::-;15530:5;15568:6;15555:20;15546:29;;15584:30;15608:5;15584:30;:::i;:::-;15487:133;;;;:::o;15626:468::-;15691:6;15699;15748:2;15736:9;15727:7;15723:23;15719:32;15716:119;;;15754:79;;:::i;:::-;15716:119;15874:1;15899:53;15944:7;15935:6;15924:9;15920:22;15899:53;:::i;:::-;15889:63;;15845:117;16001:2;16027:50;16069:7;16060:6;16049:9;16045:22;16027:50;:::i;:::-;16017:60;;15972:115;15626:468;;;;;:::o;16100:117::-;16209:1;16206;16199:12;16223:117;16332:1;16329;16322:12;16346:180;16394:77;16391:1;16384:88;16491:4;16488:1;16481:15;16515:4;16512:1;16505:15;16532:281;16615:27;16637:4;16615:27;:::i;:::-;16607:6;16603:40;16745:6;16733:10;16730:22;16709:18;16697:10;16694:34;16691:62;16688:88;;;16756:18;;:::i;:::-;16688:88;16796:10;16792:2;16785:22;16575:238;16532:281;;:::o;16819:129::-;16853:6;16880:20;;:::i;:::-;16870:30;;16909:33;16937:4;16929:6;16909:33;:::i;:::-;16819:129;;;:::o;16954:308::-;17016:4;17106:18;17098:6;17095:30;17092:56;;;17128:18;;:::i;:::-;17092:56;17166:29;17188:6;17166:29;:::i;:::-;17158:37;;17250:4;17244;17240:15;17232:23;;16954:308;;;:::o;17268:146::-;17365:6;17360:3;17355;17342:30;17406:1;17397:6;17392:3;17388:16;17381:27;17268:146;;;:::o;17420:425::-;17498:5;17523:66;17539:49;17581:6;17539:49;:::i;:::-;17523:66;:::i;:::-;17514:75;;17612:6;17605:5;17598:21;17650:4;17643:5;17639:16;17688:3;17679:6;17674:3;17670:16;17667:25;17664:112;;;17695:79;;:::i;:::-;17664:112;17785:54;17832:6;17827:3;17822;17785:54;:::i;:::-;17504:341;17420:425;;;;;:::o;17865:340::-;17921:5;17970:3;17963:4;17955:6;17951:17;17947:27;17937:122;;17978:79;;:::i;:::-;17937:122;18095:6;18082:20;18120:79;18195:3;18187:6;18180:4;18172:6;18168:17;18120:79;:::i;:::-;18111:88;;17927:278;17865:340;;;;:::o;18211:654::-;18289:6;18297;18346:2;18334:9;18325:7;18321:23;18317:32;18314:119;;;18352:79;;:::i;:::-;18314:119;18472:1;18497:53;18542:7;18533:6;18522:9;18518:22;18497:53;:::i;:::-;18487:63;;18443:117;18627:2;18616:9;18612:18;18599:32;18658:18;18650:6;18647:30;18644:117;;;18680:79;;:::i;:::-;18644:117;18785:63;18840:7;18831:6;18820:9;18816:22;18785:63;:::i;:::-;18775:73;;18570:288;18211:654;;;;;:::o;18871:2103::-;19034:6;19042;19050;19058;19066;19074;19082;19131:3;19119:9;19110:7;19106:23;19102:33;19099:120;;;19138:79;;:::i;:::-;19099:120;19286:1;19275:9;19271:17;19258:31;19316:18;19308:6;19305:30;19302:117;;;19338:79;;:::i;:::-;19302:117;19443:63;19498:7;19489:6;19478:9;19474:22;19443:63;:::i;:::-;19433:73;;19229:287;19555:2;19581:53;19626:7;19617:6;19606:9;19602:22;19581:53;:::i;:::-;19571:63;;19526:118;19683:2;19709:53;19754:7;19745:6;19734:9;19730:22;19709:53;:::i;:::-;19699:63;;19654:118;19839:2;19828:9;19824:18;19811:32;19870:18;19862:6;19859:30;19856:117;;;19892:79;;:::i;:::-;19856:117;19997:63;20052:7;20043:6;20032:9;20028:22;19997:63;:::i;:::-;19987:73;;19782:288;20137:3;20126:9;20122:19;20109:33;20169:18;20161:6;20158:30;20155:117;;;20191:79;;:::i;:::-;20155:117;20296:63;20351:7;20342:6;20331:9;20327:22;20296:63;:::i;:::-;20286:73;;20080:289;20436:3;20425:9;20421:19;20408:33;20468:18;20460:6;20457:30;20454:117;;;20490:79;;:::i;:::-;20454:117;20595:63;20650:7;20641:6;20630:9;20626:22;20595:63;:::i;:::-;20585:73;;20379:289;20735:3;20724:9;20720:19;20707:33;20767:18;20759:6;20756:30;20753:117;;;20789:79;;:::i;:::-;20753:117;20894:63;20949:7;20940:6;20929:9;20925:22;20894:63;:::i;:::-;20884:73;;20678:289;18871:2103;;;;;;;;;;:::o;20980:307::-;21041:4;21131:18;21123:6;21120:30;21117:56;;;21153:18;;:::i;:::-;21117:56;21191:29;21213:6;21191:29;:::i;:::-;21183:37;;21275:4;21269;21265:15;21257:23;;20980:307;;;:::o;21293:423::-;21370:5;21395:65;21411:48;21452:6;21411:48;:::i;:::-;21395:65;:::i;:::-;21386:74;;21483:6;21476:5;21469:21;21521:4;21514:5;21510:16;21559:3;21550:6;21545:3;21541:16;21538:25;21535:112;;;21566:79;;:::i;:::-;21535:112;21656:54;21703:6;21698:3;21693;21656:54;:::i;:::-;21376:340;21293:423;;;;;:::o;21735:338::-;21790:5;21839:3;21832:4;21824:6;21820:17;21816:27;21806:122;;21847:79;;:::i;:::-;21806:122;21964:6;21951:20;21989:78;22063:3;22055:6;22048:4;22040:6;22036:17;21989:78;:::i;:::-;21980:87;;21796:277;21735:338;;;;:::o;22079:943::-;22174:6;22182;22190;22198;22247:3;22235:9;22226:7;22222:23;22218:33;22215:120;;;22254:79;;:::i;:::-;22215:120;22374:1;22399:53;22444:7;22435:6;22424:9;22420:22;22399:53;:::i;:::-;22389:63;;22345:117;22501:2;22527:53;22572:7;22563:6;22552:9;22548:22;22527:53;:::i;:::-;22517:63;;22472:118;22629:2;22655:53;22700:7;22691:6;22680:9;22676:22;22655:53;:::i;:::-;22645:63;;22600:118;22785:2;22774:9;22770:18;22757:32;22816:18;22808:6;22805:30;22802:117;;;22838:79;;:::i;:::-;22802:117;22943:62;22997:7;22988:6;22977:9;22973:22;22943:62;:::i;:::-;22933:72;;22728:287;22079:943;;;;;;;:::o;23028:474::-;23096:6;23104;23153:2;23141:9;23132:7;23128:23;23124:32;23121:119;;;23159:79;;:::i;:::-;23121:119;23279:1;23304:53;23349:7;23340:6;23329:9;23325:22;23304:53;:::i;:::-;23294:63;;23250:117;23406:2;23432:53;23477:7;23468:6;23457:9;23453:22;23432:53;:::i;:::-;23422:63;;23377:118;23028:474;;;;;:::o;23508:180::-;23556:77;23553:1;23546:88;23653:4;23650:1;23643:15;23677:4;23674:1;23667:15;23694:180;23742:77;23739:1;23732:88;23839:4;23836:1;23829:15;23863:4;23860:1;23853:15;23880:233;23919:3;23942:24;23960:5;23942:24;:::i;:::-;23933:33;;23988:66;23981:5;23978:77;23975:103;;24058:18;;:::i;:::-;23975:103;24105:1;24098:5;24094:13;24087:20;;23880:233;;;:::o;24119:180::-;24167:77;24164:1;24157:88;24264:4;24261:1;24254:15;24288:4;24285:1;24278:15;24305:320;24349:6;24386:1;24380:4;24376:12;24366:22;;24433:1;24427:4;24423:12;24454:18;24444:81;;24510:4;24502:6;24498:17;24488:27;;24444:81;24572:2;24564:6;24561:14;24541:18;24538:38;24535:84;;24591:18;;:::i;:::-;24535:84;24356:269;24305:320;;;:::o;24631:169::-;24771:21;24767:1;24759:6;24755:14;24748:45;24631:169;:::o;24806:366::-;24948:3;24969:67;25033:2;25028:3;24969:67;:::i;:::-;24962:74;;25045:93;25134:3;25045:93;:::i;:::-;25163:2;25158:3;25154:12;25147:19;;24806:366;;;:::o;25178:419::-;25344:4;25382:2;25371:9;25367:18;25359:26;;25431:9;25425:4;25421:20;25417:1;25406:9;25402:17;25395:47;25459:131;25585:4;25459:131;:::i;:::-;25451:139;;25178:419;;;:::o;25603:171::-;25743:23;25739:1;25731:6;25727:14;25720:47;25603:171;:::o;25780:366::-;25922:3;25943:67;26007:2;26002:3;25943:67;:::i;:::-;25936:74;;26019:93;26108:3;26019:93;:::i;:::-;26137:2;26132:3;26128:12;26121:19;;25780:366;;;:::o;26152:419::-;26318:4;26356:2;26345:9;26341:18;26333:26;;26405:9;26399:4;26395:20;26391:1;26380:9;26376:17;26369:47;26433:131;26559:4;26433:131;:::i;:::-;26425:139;;26152:419;;;:::o;26577:168::-;26717:20;26713:1;26705:6;26701:14;26694:44;26577:168;:::o;26751:366::-;26893:3;26914:67;26978:2;26973:3;26914:67;:::i;:::-;26907:74;;26990:93;27079:3;26990:93;:::i;:::-;27108:2;27103:3;27099:12;27092:19;;26751:366;;;:::o;27123:419::-;27289:4;27327:2;27316:9;27312:18;27304:26;;27376:9;27370:4;27366:20;27362:1;27351:9;27347:17;27340:47;27404:131;27530:4;27404:131;:::i;:::-;27396:139;;27123:419;;;:::o;27548:169::-;27688:21;27684:1;27676:6;27672:14;27665:45;27548:169;:::o;27723:366::-;27865:3;27886:67;27950:2;27945:3;27886:67;:::i;:::-;27879:74;;27962:93;28051:3;27962:93;:::i;:::-;28080:2;28075:3;28071:12;28064:19;;27723:366;;;:::o;28095:419::-;28261:4;28299:2;28288:9;28284:18;28276:26;;28348:9;28342:4;28338:20;28334:1;28323:9;28319:17;28312:47;28376:131;28502:4;28376:131;:::i;:::-;28368:139;;28095:419;;;:::o;28520:171::-;28559:3;28582:24;28600:5;28582:24;:::i;:::-;28573:33;;28628:4;28621:5;28618:15;28615:41;;28636:18;;:::i;:::-;28615:41;28683:1;28676:5;28672:13;28665:20;;28520:171;;;:::o;28697:442::-;28846:4;28884:2;28873:9;28869:18;28861:26;;28897:71;28965:1;28954:9;28950:17;28941:6;28897:71;:::i;:::-;28978:72;29046:2;29035:9;29031:18;29022:6;28978:72;:::i;:::-;29060;29128:2;29117:9;29113:18;29104:6;29060:72;:::i;:::-;28697:442;;;;;;:::o;29145:177::-;29285:29;29281:1;29273:6;29269:14;29262:53;29145:177;:::o;29328:366::-;29470:3;29491:67;29555:2;29550:3;29491:67;:::i;:::-;29484:74;;29567:93;29656:3;29567:93;:::i;:::-;29685:2;29680:3;29676:12;29669:19;;29328:366;;;:::o;29700:419::-;29866:4;29904:2;29893:9;29889:18;29881:26;;29953:9;29947:4;29943:20;29939:1;29928:9;29924:17;29917:47;29981:131;30107:4;29981:131;:::i;:::-;29973:139;;29700:419;;;:::o;30125:169::-;30265:21;30261:1;30253:6;30249:14;30242:45;30125:169;:::o;30300:366::-;30442:3;30463:67;30527:2;30522:3;30463:67;:::i;:::-;30456:74;;30539:93;30628:3;30539:93;:::i;:::-;30657:2;30652:3;30648:12;30641:19;;30300:366;;;:::o;30672:419::-;30838:4;30876:2;30865:9;30861:18;30853:26;;30925:9;30919:4;30915:20;30911:1;30900:9;30896:17;30889:47;30953:131;31079:4;30953:131;:::i;:::-;30945:139;;30672:419;;;:::o;31097:166::-;31237:18;31233:1;31225:6;31221:14;31214:42;31097:166;:::o;31269:366::-;31411:3;31432:67;31496:2;31491:3;31432:67;:::i;:::-;31425:74;;31508:93;31597:3;31508:93;:::i;:::-;31626:2;31621:3;31617:12;31610:19;;31269:366;;;:::o;31641:419::-;31807:4;31845:2;31834:9;31830:18;31822:26;;31894:9;31888:4;31884:20;31880:1;31869:9;31865:17;31858:47;31922:131;32048:4;31922:131;:::i;:::-;31914:139;;31641:419;;;:::o;32066:167::-;32206:19;32202:1;32194:6;32190:14;32183:43;32066:167;:::o;32239:366::-;32381:3;32402:67;32466:2;32461:3;32402:67;:::i;:::-;32395:74;;32478:93;32567:3;32478:93;:::i;:::-;32596:2;32591:3;32587:12;32580:19;;32239:366;;;:::o;32611:419::-;32777:4;32815:2;32804:9;32800:18;32792:26;;32864:9;32858:4;32854:20;32850:1;32839:9;32835:17;32828:47;32892:131;33018:4;32892:131;:::i;:::-;32884:139;;32611:419;;;:::o;33036:168::-;33176:20;33172:1;33164:6;33160:14;33153:44;33036:168;:::o;33210:366::-;33352:3;33373:67;33437:2;33432:3;33373:67;:::i;:::-;33366:74;;33449:93;33538:3;33449:93;:::i;:::-;33567:2;33562:3;33558:12;33551:19;;33210:366;;;:::o;33582:419::-;33748:4;33786:2;33775:9;33771:18;33763:26;;33835:9;33829:4;33825:20;33821:1;33810:9;33806:17;33799:47;33863:131;33989:4;33863:131;:::i;:::-;33855:139;;33582:419;;;:::o;34007:164::-;34147:16;34143:1;34135:6;34131:14;34124:40;34007:164;:::o;34177:366::-;34319:3;34340:67;34404:2;34399:3;34340:67;:::i;:::-;34333:74;;34416:93;34505:3;34416:93;:::i;:::-;34534:2;34529:3;34525:12;34518:19;;34177:366;;;:::o;34549:419::-;34715:4;34753:2;34742:9;34738:18;34730:26;;34802:9;34796:4;34792:20;34788:1;34777:9;34773:17;34766:47;34830:131;34956:4;34830:131;:::i;:::-;34822:139;;34549:419;;;:::o;34974:176::-;35114:28;35110:1;35102:6;35098:14;35091:52;34974:176;:::o;35156:366::-;35298:3;35319:67;35383:2;35378:3;35319:67;:::i;:::-;35312:74;;35395:93;35484:3;35395:93;:::i;:::-;35513:2;35508:3;35504:12;35497:19;;35156:366;;;:::o;35528:419::-;35694:4;35732:2;35721:9;35717:18;35709:26;;35781:9;35775:4;35771:20;35767:1;35756:9;35752:17;35745:47;35809:131;35935:4;35809:131;:::i;:::-;35801:139;;35528:419;;;:::o;35953:174::-;36093:26;36089:1;36081:6;36077:14;36070:50;35953:174;:::o;36133:366::-;36275:3;36296:67;36360:2;36355:3;36296:67;:::i;:::-;36289:74;;36372:93;36461:3;36372:93;:::i;:::-;36490:2;36485:3;36481:12;36474:19;;36133:366;;;:::o;36505:419::-;36671:4;36709:2;36698:9;36694:18;36686:26;;36758:9;36752:4;36748:20;36744:1;36733:9;36729:17;36722:47;36786:131;36912:4;36786:131;:::i;:::-;36778:139;;36505:419;;;:::o;36930:147::-;37031:11;37068:3;37053:18;;36930:147;;;;:::o;37083:114::-;;:::o;37203:398::-;37362:3;37383:83;37464:1;37459:3;37383:83;:::i;:::-;37376:90;;37475:93;37564:3;37475:93;:::i;:::-;37593:1;37588:3;37584:11;37577:18;;37203:398;;;:::o;37607:379::-;37791:3;37813:147;37956:3;37813:147;:::i;:::-;37806:154;;37977:3;37970:10;;37607:379;;;:::o;37992:173::-;38132:25;38128:1;38120:6;38116:14;38109:49;37992:173;:::o;38171:366::-;38313:3;38334:67;38398:2;38393:3;38334:67;:::i;:::-;38327:74;;38410:93;38499:3;38410:93;:::i;:::-;38528:2;38523:3;38519:12;38512:19;;38171:366;;;:::o;38543:419::-;38709:4;38747:2;38736:9;38732:18;38724:26;;38796:9;38790:4;38786:20;38782:1;38771:9;38767:17;38760:47;38824:131;38950:4;38824:131;:::i;:::-;38816:139;;38543:419;;;:::o;38968:222::-;39108:34;39104:1;39096:6;39092:14;39085:58;39177:5;39172:2;39164:6;39160:15;39153:30;38968:222;:::o;39196:366::-;39338:3;39359:67;39423:2;39418:3;39359:67;:::i;:::-;39352:74;;39435:93;39524:3;39435:93;:::i;:::-;39553:2;39548:3;39544:12;39537:19;;39196:366;;;:::o;39568:419::-;39734:4;39772:2;39761:9;39757:18;39749:26;;39821:9;39815:4;39811:20;39807:1;39796:9;39792:17;39785:47;39849:131;39975:4;39849:131;:::i;:::-;39841:139;;39568:419;;;:::o;39993:141::-;40042:4;40065:3;40057:11;;40088:3;40085:1;40078:14;40122:4;40119:1;40109:18;40101:26;;39993:141;;;:::o;40140:93::-;40177:6;40224:2;40219;40212:5;40208:14;40204:23;40194:33;;40140:93;;;:::o;40239:107::-;40283:8;40333:5;40327:4;40323:16;40302:37;;40239:107;;;;:::o;40352:393::-;40421:6;40471:1;40459:10;40455:18;40494:97;40524:66;40513:9;40494:97;:::i;:::-;40612:39;40642:8;40631:9;40612:39;:::i;:::-;40600:51;;40684:4;40680:9;40673:5;40669:21;40660:30;;40733:4;40723:8;40719:19;40712:5;40709:30;40699:40;;40428:317;;40352:393;;;;;:::o;40751:60::-;40779:3;40800:5;40793:12;;40751:60;;;:::o;40817:142::-;40867:9;40900:53;40918:34;40927:24;40945:5;40927:24;:::i;:::-;40918:34;:::i;:::-;40900:53;:::i;:::-;40887:66;;40817:142;;;:::o;40965:75::-;41008:3;41029:5;41022:12;;40965:75;;;:::o;41046:269::-;41156:39;41187:7;41156:39;:::i;:::-;41217:91;41266:41;41290:16;41266:41;:::i;:::-;41258:6;41251:4;41245:11;41217:91;:::i;:::-;41211:4;41204:105;41122:193;41046:269;;;:::o;41321:73::-;41366:3;41321:73;:::o;41400:189::-;41477:32;;:::i;:::-;41518:65;41576:6;41568;41562:4;41518:65;:::i;:::-;41453:136;41400:189;;:::o;41595:186::-;41655:120;41672:3;41665:5;41662:14;41655:120;;;41726:39;41763:1;41756:5;41726:39;:::i;:::-;41699:1;41692:5;41688:13;41679:22;;41655:120;;;41595:186;;:::o;41787:543::-;41888:2;41883:3;41880:11;41877:446;;;41922:38;41954:5;41922:38;:::i;:::-;42006:29;42024:10;42006:29;:::i;:::-;41996:8;41992:44;42189:2;42177:10;42174:18;42171:49;;;42210:8;42195:23;;42171:49;42233:80;42289:22;42307:3;42289:22;:::i;:::-;42279:8;42275:37;42262:11;42233:80;:::i;:::-;41892:431;;41877:446;41787:543;;;:::o;42336:117::-;42390:8;42440:5;42434:4;42430:16;42409:37;;42336:117;;;;:::o;42459:169::-;42503:6;42536:51;42584:1;42580:6;42572:5;42569:1;42565:13;42536:51;:::i;:::-;42532:56;42617:4;42611;42607:15;42597:25;;42510:118;42459:169;;;;:::o;42633:295::-;42709:4;42855:29;42880:3;42874:4;42855:29;:::i;:::-;42847:37;;42917:3;42914:1;42910:11;42904:4;42901:21;42893:29;;42633:295;;;;:::o;42933:1395::-;43050:37;43083:3;43050:37;:::i;:::-;43152:18;43144:6;43141:30;43138:56;;;43174:18;;:::i;:::-;43138:56;43218:38;43250:4;43244:11;43218:38;:::i;:::-;43303:67;43363:6;43355;43349:4;43303:67;:::i;:::-;43397:1;43421:4;43408:17;;43453:2;43445:6;43442:14;43470:1;43465:618;;;;44127:1;44144:6;44141:77;;;44193:9;44188:3;44184:19;44178:26;44169:35;;44141:77;44244:67;44304:6;44297:5;44244:67;:::i;:::-;44238:4;44231:81;44100:222;43435:887;;43465:618;43517:4;43513:9;43505:6;43501:22;43551:37;43583:4;43551:37;:::i;:::-;43610:1;43624:208;43638:7;43635:1;43632:14;43624:208;;;43717:9;43712:3;43708:19;43702:26;43694:6;43687:42;43768:1;43760:6;43756:14;43746:24;;43815:2;43804:9;43800:18;43787:31;;43661:4;43658:1;43654:12;43649:17;;43624:208;;;43860:6;43851:7;43848:19;43845:179;;;43918:9;43913:3;43909:19;43903:26;43961:48;44003:4;43995:6;43991:17;43980:9;43961:48;:::i;:::-;43953:6;43946:64;43868:156;43845:179;44070:1;44066;44058:6;44054:14;44050:22;44044:4;44037:36;43472:611;;;43435:887;;43025:1303;;;42933:1395;;:::o;44334:148::-;44436:11;44473:3;44458:18;;44334:148;;;;:::o;44488:390::-;44594:3;44622:39;44655:5;44622:39;:::i;:::-;44677:89;44759:6;44754:3;44677:89;:::i;:::-;44670:96;;44775:65;44833:6;44828:3;44821:4;44814:5;44810:16;44775:65;:::i;:::-;44865:6;44860:3;44856:16;44849:23;;44598:280;44488:390;;;;:::o;44884:435::-;45064:3;45086:95;45177:3;45168:6;45086:95;:::i;:::-;45079:102;;45198:95;45289:3;45280:6;45198:95;:::i;:::-;45191:102;;45310:3;45303:10;;44884:435;;;;;:::o;45325:98::-;45376:6;45410:5;45404:12;45394:22;;45325:98;;;:::o;45429:168::-;45512:11;45546:6;45541:3;45534:19;45586:4;45581:3;45577:14;45562:29;;45429:168;;;;:::o;45603:373::-;45689:3;45717:38;45749:5;45717:38;:::i;:::-;45771:70;45834:6;45829:3;45771:70;:::i;:::-;45764:77;;45850:65;45908:6;45903:3;45896:4;45889:5;45885:16;45850:65;:::i;:::-;45940:29;45962:6;45940:29;:::i;:::-;45935:3;45931:39;45924:46;;45693:283;45603:373;;;;:::o;45982:640::-;46177:4;46215:3;46204:9;46200:19;46192:27;;46229:71;46297:1;46286:9;46282:17;46273:6;46229:71;:::i;:::-;46310:72;46378:2;46367:9;46363:18;46354:6;46310:72;:::i;:::-;46392;46460:2;46449:9;46445:18;46436:6;46392:72;:::i;:::-;46511:9;46505:4;46501:20;46496:2;46485:9;46481:18;46474:48;46539:76;46610:4;46601:6;46539:76;:::i;:::-;46531:84;;45982:640;;;;;;;:::o;46628:141::-;46684:5;46715:6;46709:13;46700:22;;46731:32;46757:5;46731:32;:::i;:::-;46628:141;;;;:::o;46775:349::-;46844:6;46893:2;46881:9;46872:7;46868:23;46864:32;46861:119;;;46899:79;;:::i;:::-;46861:119;47019:1;47044:63;47099:7;47090:6;47079:9;47075:22;47044:63;:::i;:::-;47034:73;;46990:127;46775:349;;;;:::o;47130:180::-;47178:77;47175:1;47168:88;47275:4;47272:1;47265:15;47299:4;47296:1;47289:15;47316:332;47437:4;47475:2;47464:9;47460:18;47452:26;;47488:71;47556:1;47545:9;47541:17;47532:6;47488:71;:::i;:::-;47569:72;47637:2;47626:9;47622:18;47613:6;47569:72;:::i;:::-;47316:332;;;;;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","buyResaleTicket(uint256,uint256)":"9b26ce0c","creatorEvents(address,uint256)":"7cea357c","enableResale(uint256,uint256)":"36cf43b8","getApproved(uint256)":"081812fc","getEventsCreatedBy(address)":"72843282","getOccasion(uint256)":"74bc8656","getSeatsTaken(uint256)":"0ef7ec74","getUserTickets(address)":"0484a22f","hasBought(uint256,address)":"9cb04aef","isApprovedForAll(address,address)":"e985e9c5","list(string,uint256,uint256,string,string,string,string)":"afb5604e","mint(uint256,uint256)":"1b2ef1ca","name()":"06fdde03","occasions(uint256)":"61a5672d","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","resaleAllowed(uint256,uint256)":"c233e22b","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","scanTicket(uint256,uint256)":"6b787f09","seatTaken(uint256,uint256)":"af296da1","seatToTokenId(uint256,uint256)":"5b6966ac","seatsTaken(uint256,uint256)":"4e7497fc","setApprovalForAll(address,bool)":"a22cb465","setVRVideo(uint256,string)":"adca6f89","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","ticketExhausted(uint256,uint256)":"a0415bb4","tokenURI(uint256)":"c87b56dd","totalOccasions()":"953865c1","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ticketId\",\"type\":\"uint256\"}],\"name\":\"buyResaleTicket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"creatorEvents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_seatId\",\"type\":\"uint256\"}],\"name\":\"enableResale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"getEventsCreatedBy\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getOccasion\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTickets\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"date\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"time\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bannerImage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vrVideo\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"internalType\":\"struct TicketMaster.Occasion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getSeatsTaken\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserTickets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasBought\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTickets\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_date\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_time\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bannerImage\",\"type\":\"string\"}],\"name\":\"list\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_seat\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"occasions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tickets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTickets\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"date\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"time\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bannerImage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vrVideo\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"resaleAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_seatId\",\"type\":\"uint256\"}],\"name\":\"scanTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"seatTaken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"seatToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"seatsTaken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_vrVideo\",\"type\":\"string\"}],\"name\":\"setVRVideo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ticketExhausted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalOccasions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TicketMaster.sol\":\"TicketMaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/TicketMaster.sol\":{\"keccak256\":\"0x006f0ee2e93bcfbff3724bf6aa8d996c0c2d3b3f61486e3951dade63a7d86e9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1b61af2aea29998bcec43e9f6c232e7f780fcce0bcef946b84a7131943310e3\",\"dweb:/ipfs/QmYpBWbnHdHXe56JCj8MEEkdbHqMoMEHmTX9UG37fAU855\"]}},\"version\":1}"}}}}}